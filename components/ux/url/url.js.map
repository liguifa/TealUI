{"version":3,"file":"url.js","sourceRoot":"../../..","sources":["components/ux/url/url.ts"],"sourcesContent":["/**\r\n * 表示一个地址。\r\n */\r\nexport interface Url {\r\n\r\n    /**\r\n     * 协议部分。如 \"http:\"。\r\n     */\r\n    protocol?: string;\r\n\r\n    /**\r\n     * 主机部分。如 \"localhost:80\"。\r\n     */\r\n    host?: string;\r\n\r\n    /**\r\n     * 端口部分。如 \"80\"。\r\n     */\r\n    port?: string;\r\n\r\n    /**\r\n     * 主机名部分。如 \"localhost\"。\r\n     */\r\n    hostname?: string;\r\n\r\n    /**\r\n     * 哈希值部分。如 \"#hash\"。\r\n     */\r\n    hash?: string;\r\n\r\n    /**\r\n     * 查询参数部分。如 \"?q=1\"。\r\n     */\r\n    search?: string;\r\n\r\n    /**\r\n     * 查询参数部分。如 {q: 1}。\r\n     */\r\n    query?: string;\r\n\r\n    /**\r\n     * 路径名部分。如 \"/foo/a.html?q=1\"。\r\n     */\r\n    pathname?: string;\r\n\r\n    /**\r\n     * 路径部分。如 \"/foo/a.html\"。\r\n     */\r\n    path?: string;\r\n\r\n    /**\r\n     * 完整地址。如 \"http://localhost:80/foo/a.html?q=1\"。\r\n     */\r\n    href?: string;\r\n\r\n}\r\n\r\n/**\r\n * 解析指定的地址为对象。\r\n * @param url 要解析的地址。\r\n * @return 返回解析的对象。\r\n * @example parseUrl(\"http://tealui.com/index.html?from=parse\") // { href: \"http://tealui.com/index.html?from=parse\", protocol: \"http:\", host: \"tealui.com\", hostname: \"tealui.com\", path: \"/index.html?from=parse\", pathname: \"/index.html\", search: \"?from=parse\", query: \"from=parse\", \"hash\": \"\", \"port\": \"\" }\r\n */\r\nexport function parseUrl(url: string) {\r\n    const anchor = document.createElement(\"a\");\r\n    anchor.href = url;\r\n    const pathname = anchor.pathname.charAt(0) != \"/\" ? \"/\" + anchor.pathname : anchor.pathname;\r\n    return {\r\n        href: anchor.href,\r\n        host: anchor.host || location.host,\r\n        port: anchor.port,\r\n        hash: anchor.hash,\r\n        hostname: anchor.hostname || location.hostname,\r\n        path: pathname + anchor.search,\r\n        pathname: pathname,\r\n        protocol: !anchor.protocol || \":\" == anchor.protocol ? location.protocol : anchor.protocol,\r\n        search: anchor.search,\r\n        query: anchor.search.slice(1)\r\n    } as Url;\r\n}\r\n\r\n/**\r\n * 格式化指定的地址为字符串。\r\n * @param url 要处理的地址。\r\n * @return 返回格式化后的字符串。\r\n * @example formatUrl({ protocol:\"http:\", hostname: \"tealui.com\", path: \"/index.html?from=parse\", pathname: \"/index.html\", search: \"?from=parse\", query: \"from=parse\" }) // \"http://tealui.com/index.html?from=parse\"\r\n */\r\nexport function formatUrl(url: Url) {\r\n    return `${url.protocol || \"\"}//${url.host || `${url.hostname || \"\"}${url.port ? \":\" + url.port : \"\"}`}${url.path || `${url.pathname || \"\"}${url.search || \"\"}`}${url.hash || \"\"}`;\r\n}\r\n"],"mappings":";;IAyDA;;;;;OAKG;IACH,kBAAyB,GAAW;QAChC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC3C,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;QAClB,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAC5F,MAAM,CAAC;YACH,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI;YAClC,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,QAAQ,EAAE,MAAM,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ;YAC9C,IAAI,EAAE,QAAQ,GAAG,MAAM,CAAC,MAAM;YAC9B,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,CAAC,MAAM,CAAC,QAAQ,IAAI,GAAG,IAAI,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ;YAC1F,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACzB,CAAC;IACb,CAAC;IAhBD,4BAgBC;IAED;;;;;OAKG;IACH,mBAA0B,GAAQ;QAC9B,MAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,IAAI,EAAE,KAAK,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,IAAI,EAAE,EAAE,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC;IACtL,CAAC;IAFD,8BAEC"}