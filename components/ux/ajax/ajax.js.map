{"version":3,"file":"ajax.js","sourceRoot":"../../..","sources":["components/ux/ajax/ajax.ts"],"sourcesContent":["import { formatQuery, setQuery } from \"util/query\";\r\n\r\n/**\r\n * 表示一个 AJAX 请求。\r\n */\r\nexport class Ajax {\r\n\r\n    /**\r\n     * 请求的类型。类型应该为大写。如 \"GET\"。\r\n     */\r\n    type: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"HEAD\" | \"OPTIONS\" | string;\r\n\r\n    /**\r\n     * 请求的地址。\r\n     */\r\n    url: string;\r\n\r\n    /**\r\n     * 请求的数据。\r\n     */\r\n    data: any;\r\n\r\n    /**\r\n     * 请求的内容类型。\r\n     */\r\n    contentType: string;\r\n\r\n    /**\r\n     * 附加请求头。\r\n     */\r\n    headers: { [name: string]: string };\r\n\r\n    /**\r\n     * 请求的用户名。\r\n     */\r\n    username: string;\r\n\r\n    /**\r\n     * 请求的密码。\r\n     */\r\n    password: string;\r\n\r\n    /**\r\n     * 是否是异步请求。\r\n     */\r\n    async: boolean;\r\n\r\n    /**\r\n     * 请求的超时毫秒数。如果值为 -1 则不设置超时。\r\n     */\r\n    timeout: number;\r\n\r\n    /**\r\n     * 是否发送用户凭证。\r\n     */\r\n    withCredentials: boolean;\r\n\r\n    /**\r\n     * 请求成功的回调函数。\r\n     * @param responseText 响应的数据文本。\r\n     * @param ajax 当前请求对象。\r\n     */\r\n    success: (responseText: string, ajax: Ajax) => void;\r\n\r\n    /**\r\n     * 请求失败的回调函数。\r\n     * @param error 错误的原因。\r\n     * @param ajax 当前请求对象。\r\n     */\r\n    error: (error: any, ajax: Ajax) => void;\r\n\r\n    /**\r\n     * 请求完成的回调函数。无论请求是否成功都会执行此回调。\r\n     * @param error 如果请求错误，则值为错误的原因。\r\n     * @param ajax 当前请求对象。\r\n     */\r\n    complete: (error: any, ajax: Ajax) => void;\r\n\r\n    /**\r\n     * 实际发送请求的对象。\r\n     */\r\n    xhr: XMLHttpRequest;\r\n\r\n    /**\r\n     * 获取服务器返回的状态码。如果小于 0 表示请求未发出的错误码。\r\n     */\r\n    status: number;\r\n\r\n    /**\r\n     * 获取服务器返回的状态文本。\r\n     */\r\n    statusText: string;\r\n\r\n    /**\r\n     * 获取服务器返回的数据文本。\r\n     */\r\n    responseText: string;\r\n\r\n    /**\r\n     * 发送当前的请求。\r\n     * @return 如果请求发送成功则返回 true，否则返回 false。\r\n     */\r\n    send() {\r\n        // 设置属性默认值。\r\n        this.type = this.type || \"GET\";\r\n        this.url = this.url || location.href;\r\n        if (this.data != null && !(this.data instanceof FormData)) {\r\n            this.contentType = this.contentType || \"application/x-www-form-urlencoded\";\r\n            if (typeof this.data === \"object\") {\r\n                this.data = this.contentType === \"application/json\" && this.type !== \"GET\" ? JSON.stringify(this.data) : formatQuery(this.data);\r\n            }\r\n            if (this.type === \"GET\") {\r\n                this.url += (this.url.indexOf(\"?\") >= 0 ? \"&\" : \"?\") + this.data;\r\n                this.data = null;\r\n            }\r\n        }\r\n        this.async = this.async !== false;\r\n\r\n        // 准备请求。\r\n        const xhr = this.xhr = new XMLHttpRequest();\r\n        const end: Ajax[\"_end\"] = this._end = (message, inerternalError) => {\r\n            try {\r\n                // 不重复执行回调。\r\n                // 忽略 onreadystatechange 最后一次之前的调用。\r\n                if (!this._end || (!inerternalError && xhr.readyState !== 4)) {\r\n                    return;\r\n                }\r\n                delete this._end;\r\n\r\n                // 删除 readystatechange  。\r\n                xhr.onreadystatechange = null!;\r\n\r\n                // 判断是否存在错误。\r\n                if (inerternalError) {\r\n                    this.status = inerternalError;\r\n                    // 手动中止请求。\r\n                    if (xhr.readyState !== 4) {\r\n                        xhr.abort();\r\n                    }\r\n                } else {\r\n                    this.status = xhr.status;\r\n                    try {\r\n                        this.statusText = xhr.statusText;\r\n                    } catch (firefoxCrossDomainError) {\r\n                        // 如果跨域，火狐会报错。\r\n                        this.statusText = \"\";\r\n                    }\r\n                    if (checkStatus(this.status)) {\r\n                        try {\r\n                            this.responseText = xhr.responseText;\r\n                        } catch (ieResponseTextError) {\r\n                            // IE6-9：请求二进制格式的文件报错。\r\n                            this.responseText = \"\";\r\n                        }\r\n                        message = null;\r\n                    } else {\r\n                        message = this.status + \": \" + this.statusText;\r\n                    }\r\n                }\r\n            } catch (firefoxAccessError) {\r\n                return end(firefoxAccessError, -5);\r\n            }\r\n\r\n            // 执行用户回调。\r\n            if (message) {\r\n                this.error && this.error(message, this);\r\n            } else {\r\n                this.success && this.success(this.responseText, this);\r\n            }\r\n            this.complete && this.complete(message, this);\r\n        };\r\n\r\n        // 发送请求。\r\n        try {\r\n            if (this.username) {\r\n                xhr.open(this.type, this.url, this.async, this.username, this.password);\r\n            } else {\r\n                xhr.open(this.type, this.url, this.async);\r\n            }\r\n        } catch (ieOpenError) {\r\n            // IE: 地址错误时可能产生异常。\r\n            end(ieOpenError, -3);\r\n            return false;\r\n        }\r\n        for (const header in this.headers) {\r\n            try {\r\n                xhr.setRequestHeader(header, this.headers[header]);\r\n            } catch (firefoxSetHeaderError) {\r\n                // FF: 跨域时设置头可能产生异常。\r\n            }\r\n        }\r\n        if (this.contentType) {\r\n            try {\r\n                xhr.setRequestHeader(\"Content-Type\", this.contentType);\r\n            } catch (firefoxSetHeaderError) {\r\n                // FF: 跨域时设置头可能产生异常。\r\n            }\r\n        }\r\n        if (this.withCredentials) {\r\n            xhr.withCredentials = true;\r\n        }\r\n        try {\r\n            xhr.send(this.data);\r\n        } catch (sendError) {\r\n            // 地址错误时产生异常 。\r\n            end(sendError, -4);\r\n            return false;\r\n        }\r\n\r\n        // 同步时火狐不会自动调用 onreadystatechange\r\n        if (!this.async) {\r\n            end(null, 0);\r\n            return true;\r\n        }\r\n\r\n        // 绑定 onreadystatechange， 让 xhr 根据请求情况调用 done。\r\n        xhr.onreadystatechange = end as any;\r\n\r\n        if (this.timeout >= 0) {\r\n            setTimeout(() => {\r\n                end(\"Timeout\", -2);\r\n            }, this.timeout);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 存储统一请求回调。\r\n     */\r\n    private _end: (message: string | null, code: number) => void;\r\n\r\n    /**\r\n     * 终止当前请求。\r\n     */\r\n    abort() {\r\n        this._end && this._end(\"Aborted\", -1);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * 判断一个 HTTP 状态码是否表示正确响应。\r\n * @param status 要判断的状态码。\r\n * @return 如果正确则返回true, 否则返回 false 。一般地， 200、304、1223 被认为是正确的状态吗。\r\n */\r\nexport function checkStatus(status: number) {\r\n    if (!status) {\r\n        const protocol = window.location.protocol;\r\n        // CH: status 在有些协议不存在。\r\n        return protocol === \"file:\" || protocol === \"chrome:\" || protocol === \"app:\";\r\n    }\r\n    return status >= 200 && status < 300 || status == 304 || status == 1223;\r\n}\r\n\r\n/**\r\n * 发送一个 Ajax 请求。\r\n * @param options 发送的选项。\r\n * @return 如果未设置任何回调函数则返回一个确认对象。\r\n */\r\nexport default function ajax(options: Partial<Ajax>) {\r\n    const ajax = new Ajax();\r\n    Object.assign(ajax, options);\r\n    if (!ajax.success && !ajax.error && !ajax.complete) {\r\n        return new Promise((resolve, reject) => {\r\n            ajax.success = resolve;\r\n            ajax.error = reject;\r\n            ajax.send();\r\n        });\r\n    }\r\n    ajax.send();\r\n}\r\n"],"mappings":"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"}