{"version":3,"file":"keyPress.js","sourceRoot":"../../..","sources":["components/ux/keyPress/keyPress.ts"],"sourcesContent":["const keys = {\r\n    __proto__: null!,\r\n    esc: 27,\r\n    up: 38,\r\n    down: 40,\r\n    left: 37,\r\n    right: 39,\r\n    pageUp: 33,\r\n    pageDown: 34,\r\n    home: 36,\r\n    end: 35,\r\n    space: 32,\r\n    tab: 9,\r\n    backspace: 8,\r\n    delete: 46\r\n};\r\n\r\n/**\r\n * 绑定常用键盘按键。\r\n * @param elem 要绑定的元素。\r\n * @param options 绑定各个事件的处理器。\r\n */\r\nexport default function keyPress(elem: HTMLElement, options: KeyPressOptions) {\r\n    const map: any = {};\r\n    for (const key in options) {\r\n        map[(keys as any)[key] || key] = (options as any)[key];\r\n    }\r\n    if (options.enter || options.ctrlEnter) {\r\n        map[\"10\"] = map[\"13\"] = (e: KeyboardEvent) => {\r\n            if (options.ctrlEnter && (e.ctrlKey || e.metaKey)) {\r\n                return options.ctrlEnter(e);\r\n            }\r\n            if (options.enter) {\r\n                return options.enter(e);\r\n            }\r\n        };\r\n    }\r\n    elem.addEventListener(\"keydown\", function (e) {\r\n        const func = map[e.keyCode];\r\n        if (func && func.call(this, e) !== false) {\r\n            e.preventDefault();\r\n        }\r\n    });\r\n    if (map.other) {\r\n        elem.addEventListener(\"keyup\", function (e) {\r\n            // 忽略 Shift 等组合键。\r\n            const keyCode = e.keyCode;\r\n            if ((keyCode < 16 || keyCode > 18) && !map[keyCode]) {\r\n                map.other.call(this, e);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * 表示常用键盘按键。\r\n */\r\nexport interface KeyPressOptions {\r\n\r\n    /**\r\n     * 按下指定的按键执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    [key: string]: undefined | ((e: KeyboardEvent) => boolean | void);\r\n\r\n    /**\r\n     * 按下 ESC 执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    esc?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下方向上后执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    up?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下方向下后执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    down?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下方向左后执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    left?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下方向右后执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    right?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下向上翻页执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    pageUp?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下向下翻页执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    pageDown?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下主页执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    home?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下尾页执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    end?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下回车后执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    enter?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下Ctrl/Command+回车后执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    ctrlEnter?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下空格后执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    space?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下制表符执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    tab?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下退格后执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    backspace?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下删除后执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    delete?: (e: KeyboardEvent) => boolean | void;\r\n\r\n    /**\r\n     * 按下其它键执行。\r\n     * @param e 相关的键盘事件。\r\n     * @return 如果函数返回 false 则表示执行默认的操作。\r\n     */\r\n    other?: (e: KeyboardEvent) => void;\r\n\r\n}\r\n"],"mappings":";;IAAA,MAAM,IAAI,GAAG;QACT,SAAS,EAAE,IAAK;QAChB,GAAG,EAAE,EAAE;QACP,EAAE,EAAE,EAAE;QACN,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,EAAE;QACZ,IAAI,EAAE,EAAE;QACR,GAAG,EAAE,EAAE;QACP,KAAK,EAAE,EAAE;QACT,GAAG,EAAE,CAAC;QACN,SAAS,EAAE,CAAC;QACZ,MAAM,EAAE,EAAE;KACb,CAAC;IAEF;;;;OAIG;IACH,kBAAiC,IAAiB,EAAE,OAAwB;QACxE,MAAM,GAAG,GAAQ,EAAE,CAAC;QACpB,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC;YACxB,GAAG,CAAE,IAAY,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAI,OAAe,CAAC,GAAG,CAAC,CAAC;QAC3D,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YACrC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAgB;gBACrC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAChD,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,CAAC;gBACD,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;oBAChB,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC5B,CAAC;YACL,CAAC,CAAC;QACN,CAAC;QACD,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAU,CAAC;YACxC,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAC5B,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;gBACvC,CAAC,CAAC,cAAc,EAAE,CAAC;YACvB,CAAC;QACL,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,CAAC;gBACtC,iBAAiB;gBACjB,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;gBAC1B,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,EAAE,IAAI,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAClD,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC5B,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IA9BD,2BA8BC"}