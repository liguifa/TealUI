{"version":3,"file":"stylesheet.js","sourceRoot":"../../../..","sources":["components/ux/stylesheet/old/stylesheet.ts"],"sourcesContent":["// #todo\r\n\r\n//===========================================\r\n//  动态CSS  css.js      A\r\n//===========================================\r\n\r\n\r\n/**\r\n * 动态增加一个样式。\r\n */\r\nfunction addCssRule(selector, styles, styleSheetName) {\r\n    throw \"此函数未完成\";\r\n}\r\n\r\n/**\r\n * 动态删除一个样式。\r\n */\r\nfunction removeCssRule(selector, styles, styleSheetName) {\r\n    throw \"此函数未完成\";\r\n}\r\n\r\n/**\r\n * 获取指定样式。\r\n */\r\nfunction getCssRule(selector, styleSheetName) {\r\n    throw \"此函数未完成\";\r\n}\r\n\r\n/**\r\n * 获取指定样式。\r\n */\r\nfunction setCssRule(selector, styles, styleSheetName) {\r\n    throw \"此函数未完成\";\r\n}\r\n\r\n/**\r\n * 禁用或启用指定的样式表文件。\r\n */\r\nfunction disableStyleSheet(styleSheetName, disabled) {\r\n    throw \"此函数未完成\";\r\n}\r\n\r\n/**\r\n * 设置指定的样式表文件路径。\r\n */\r\nfunction setStyleSheet(styleSheetName, src) {\r\n    throw \"此函数未完成\";\r\n}\r\n\r\n\r\n\r\n//Object.extend(Dom, (function(){\r\n//\tvar rules = null;\r\n//   \tvar doc = document;\r\n\r\n//    var camelRe = /(-[a-z])/gi;\r\n//    var camelFn = function(m, a){ return a.charAt(1).toUpperCase(); };\r\n\r\n//   return {\r\n//    /**\r\n//     * APIMethod: getCssRule\r\n//     * retrieve a reference to a CSS rule in a specific style sheet based on\r\n//     * its selector.  If the rule does not exist, create it.\r\n//     *\r\n//     * Parameters:\r\n//     * selector - <String> the CSS selector for the rule\r\n//     * styleSheetName - <String> the name of the sheet to get the rule from\r\n//     *\r\n//     * Returns:\r\n//     * <CSSRule> - the requested rule\r\n//     */\r\n//    getCssRule: function(selector, styleSheetName) {\r\n//        var ss = this.getDynamicStyleSheet(styleSheetName),\r\n//            rule = null,\r\n//            i;\r\n//        if (ss.indicies) {\r\n//            i = ss.indicies.indexOf(selector);\r\n//            if (i == -1) {\r\n//                rule = this.insertCssRule(selector, '', styleSheetName);\r\n//            } else {\r\n//                if (Browser.Engine.trident) {\r\n//                    rule = ss.sheet.rules[i];\r\n//                } else {\r\n//                    rule = ss.sheet.cssRules[i];\r\n//                }\r\n//            }\r\n//        }\r\n//        return rule;\r\n//    },\r\n//    /**\r\n//     * APIMethod: insertCssRule\r\n//     * insert a new dynamic rule into the given stylesheet.  If no name is\r\n//     * given for the stylesheet then the default stylesheet is used.\r\n//     *\r\n//     * Parameters:\r\n//     * selector - <String> the CSS selector for the rule\r\n//     * declaration - <String> CSS-formatted rules to include.  May be empty,\r\n//     * in which case you may want to use the returned rule object to\r\n//     * manipulate styles\r\n//     * styleSheetName - <String> the name of the sheet to place the rules in,\r\n//     * or empty to put them in a default sheet.\r\n//     *\r\n//     * Returns:\r\n//     * <CSSRule> - a CSS Rule object with properties that are browser\r\n//     * dependent.  In general, you can use rule.styles to set any CSS\r\n//     * properties in the same way that you would set them on a DOM object.\r\n//     */\r\n//    addCssRule: function (selector, declaration, styleSheetName) {\r\n//        var ss = this.getDynamicStyleSheet(styleSheetName),\r\n//            rule,\r\n//            text = selector + \" {\" + declaration + \"}\",\r\n//            index;\r\n//        if (Browser.Engine.trident) {\r\n//            if (declaration == '') {\r\n//                //IE requires SOME text for the declaration. Passing '{}' will\r\n//                //create an empty rule.\r\n//                declaration = '{}';\r\n//            }\r\n//            index = ss.styleSheet.addRule(selector,declaration);\r\n//            rule = ss.styleSheet.rules[index];\r\n//        } else {\r\n//            ss.sheet.insertRule(text, ss.indicies.length);\r\n//            rule = ss.sheet.cssRules[ss.indicies.length];\r\n//        }\r\n//        ss.indicies.push(selector);\r\n//        return rule;\r\n//    },\r\n//    /**\r\n//     * APIMethod: removeCssRule\r\n//     * removes a CSS rule from the named stylesheet.\r\n//     *\r\n//     * Parameters:\r\n//     * selector - <String> the CSS selector for the rule\r\n//     * styleSheetName - <String> the name of the sheet to remove the rule\r\n//     * from,  or empty to remove them from the default sheet.\r\n//     *\r\n//     * Returns:\r\n//     * <Boolean> true if the rule was removed, false if it was not.\r\n//     */\r\n//    removeCssRule: function (selector, styleSheetName) {\r\n//        var ss = this.getDynamicStyleSheet(styleSheetName),\r\n//            i = ss.indicies.indexOf(selector),\r\n//            result = false;\r\n//        ss.indicies.splice(i, 1);\r\n//        if (Browser.Engine.trident) {\r\n//            ss.removeRule(i);\r\n//            result = true;\r\n//        } else {\r\n//            ss.sheet.deleteRule(i);\r\n//            result = true;\r\n//        }\r\n//        return result;\r\n//    },\r\n\r\n\r\n//   refreshCache : function(){\r\n//       return this.getRules(true);\r\n//   },\r\n\r\n\r\n//   cacheStyleSheet : function(ss){\r\n//       if(!rules){\r\n//           rules = {};\r\n//       }\r\n//       try{\r\n//           var ssRules = ss.cssRules || ss.rules;\r\n//           for(var j = ssRules.length-1; j >= 0; --j){\r\n//               rules[ssRules[j].selectorText] = ssRules[j];\r\n//           }\r\n//       }catch(e){}\r\n//   },\r\n\r\n\r\n//   getRules : function(refreshCache){\r\n//   \t\tif(rules == null || refreshCache){\r\n//   \t\t\trules = {};\r\n//   \t\t\tvar ds = doc.styleSheets;\r\n//   \t\t\tfor(var i =0, len = ds.length; i < len; i++){\r\n//   \t\t\t    try{\r\n//    \t\t        this.cacheStyleSheet(ds[i]);\r\n//    \t\t    }catch(e){} \r\n//\t        }\r\n//   \t\t}\r\n//   \t\treturn rules;\r\n//   \t},\r\n\r\n\r\n//   getRule : function(selector, refreshCache){\r\n//   \t\tvar rs = this.getRules(refreshCache);\r\n//   \t\tif(!(selector instanceof Array)){\r\n//   \t\t    return rs[selector];\r\n//   \t\t}\r\n//   \t\tfor(var i = 0; i < selector.length; i++){\r\n//\t\t\tif(rs[selector[i]]){\r\n//\t\t\t\treturn rs[selector[i]];\r\n//\t\t\t}\r\n//\t\t}\r\n//\t\treturn null;\r\n//   \t},\r\n\r\n\r\n\r\n//   updateRule : function(selector, property, value){\r\n//   \t\tif(!(selector instanceof Array)){\r\n//   \t\t\tvar rule = this.getRule(selector);\r\n//   \t\t\tif(rule){\r\n//   \t\t\t\trule.style[property.replace(camelRe, camelFn)] = value;\r\n//   \t\t\t\treturn true;\r\n//   \t\t\t}\r\n//   \t\t}else{\r\n//   \t\t\tfor(var i = 0; i < selector.length; i++){\r\n//   \t\t\t\tif(this.updateRule(selector[i], property, value)){\r\n//   \t\t\t\t\treturn true;\r\n//   \t\t\t\t}\r\n//   \t\t\t}\r\n//   \t\t}\r\n//   \t\treturn false;\r\n//   \t},\r\n\r\n//   \t/**\r\n//     * dynamicStyleMap - <Hash> used to keep a reference to dynamically\r\n//     * created style sheets for quick access\r\n//     */\r\n//    dynamicStyleMap: new Hash(),\r\n\r\n//   };\t\r\n//}));\r\n\r\n\r\n//createStyleSheet : function(cssText){\r\n//    var ss;\r\n//    if(Ext.isIE){\r\n//        ss = doc.createStyleSheet();\r\n//        ss.cssText = cssText;\r\n//    }else{\r\n//        var head = doc.getElementsByTagName(\"head\")[0];\r\n//        var rules = doc.createElement(\"style\");\r\n//        rules.setAttribute(\"type\", \"text/css\");\r\n//        try{\r\n//            rules.appendChild(doc.createTextNode(cssText));\r\n//        }catch(e){\r\n//            rules.cssText = cssText; \r\n//        }\r\n//        head.appendChild(rules);\r\n//        ss = rules.styleSheet ? rules.styleSheet : (rules.sheet || doc.styleSheets[doc.styleSheets.length-1]);\r\n//    }\r\n//    this.cacheStyleSheet(ss);\r\n//    return ss;\r\n//},\r\n\r\n\r\n//removeStyleSheet : function(id){\r\n//    var existing = doc.getElementById(id);\r\n//    if(existing){\r\n//        existing.parentNode.removeChild(existing);\r\n//    }\r\n//},\r\n\r\n\r\n//swapStyleSheet : function(id, url){\r\n//    this.removeStyleSheet(id);\r\n//    var ss = doc.createElement(\"link\");\r\n//    ss.setAttribute(\"rel\", \"stylesheet\");\r\n//    ss.setAttribute(\"type\", \"text/css\");\r\n//    ss.setAttribute(\"id\", id);\r\n//    ss.setAttribute(\"href\", url);\r\n//    doc.getElementsByTagName(\"head\")[0].appendChild(ss);\r\n//}, /**\r\n//     * APIMethod: getDynamicStyleSheet\r\n//     * return a reference to a styleSheet based on its title.  If the sheet\r\n//     * does not already exist, it is created.\r\n//     *\r\n//     * Parameter:\r\n//     * name - <String> the title of the stylesheet to create or obtain\r\n//     *\r\n//     * Returns:\r\n//     * <StyleSheet> a StyleSheet object with browser dependent capabilities.\r\n//     */\r\n//getDynamicStyleSheet: function (name) {\r\n//    name = (name) ? name : 'default';\r\n//    if (!this.dynamicStyleMap.has(name)) {\r\n//        var sheet = new Element('style').set('type', 'text/css').inject(document.head);\r\n//        sheet.indicies = [];\r\n//        this.dynamicStyleMap.set(name, sheet);\r\n//    }\r\n//    return this.dynamicStyleMap.get(name);\r\n//},\r\n///**\r\n//     * APIMethod: enableStyleSheet\r\n//     * enable a style sheet\r\n//     *\r\n//     * Parameters:\r\n//     * name - <String> the title of the stylesheet to enable\r\n//     */\r\n//enableStyleSheet: function (name) {\r\n//    this.getDynamicStyleSheet(name).disabled = false;\r\n//},\r\n///**\r\n//     * APIMethod: disableStyleSheet\r\n//     * enable a style sheet\r\n//     *\r\n//     * Parameters:\r\n//     * name - <String> the title of the stylesheet to disable\r\n//     */\r\n//disableStyleSheet: function (name) {\r\n//    this.getDynamicStyleSheet(name).disabled = true;\r\n//},\r\n///**\r\n//     * APIMethod: removeStyleSheet\r\n//     * Removes a style sheet\r\n//     *\r\n//     * Parameters:\r\n//     * name = <String> the title of the stylesheet to remove\r\n//     */\r\n//removeStyleSheet: function (name) {\r\n//    this.disableStyleSheet(name);\r\n//    this.getDynamicStyleSheet(name).dispose();\r\n//    this.dynamicStyleMap.erase(name);\r\n//},\r\n///**\r\n//     * APIMethod: isStyleSheetDefined\r\n//     * Determined if the passed in name is a defined dynamic style sheet.\r\n//     *\r\n//     * Parameters:\r\n//     * name = <String> the title of the stylesheet to remove\r\n//     */\r\n//isStyleSheetDefined: function (name) {\r\n//    return this.dynamicStyleMap.has(name);\r\n//}\r\n\r\n\r\n\r\n\r\n\r\n///**\r\n// * Creates a stylesheet from a text blob of rules.\r\n// * These rules will be wrapped in a STYLE tag and appended to the HEAD of the document.\r\n// * @param {window} [refWin=window] Window which will accept this stylesheet\r\n// * @param {String} cssText The text containing the css rules\r\n// * @param {String} [id] An id to add to the stylesheet for later removal\r\n// */\r\n//addStyleSheet:function (refWin, cssText, id) {\r\n//    refWin = refWin || WINDOW;\r\n//    if (S.isString(refWin)) {\r\n//        id = cssText;\r\n//        cssText = refWin;\r\n//        refWin = WINDOW;\r\n//    }\r\n//    refWin = DOM.get(refWin);\r\n//    var win = DOM._getWin(refWin),\r\n//        doc = win.document,\r\n//        elem;\r\n\r\n//    if (id && (id = id.replace('#', EMPTY))) {\r\n//        elem = DOM.get('#' + id, doc);\r\n//    }\r\n\r\n//    // 仅添加一次，不重复添加\r\n//    if (elem) {\r\n//        return;\r\n//    }\r\n\r\n//    elem = DOM.create('<style>', { id:id }, doc);\r\n\r\n//    // 先添加到 DOM 树中，再给 cssText 赋值，否则 css hack 会失效\r\n//    DOM.get('head', doc).appendChild(elem);\r\n\r\n//    if (elem.styleSheet) { // IE\r\n//        elem.styleSheet.cssText = cssText;\r\n//    } else { // W3C\r\n//        elem.appendChild(doc.createTextNode(cssText));\r\n//    }\r\n//},"],"mappings":"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"}