{"version":3,"file":"xml.js","sourceRoot":"../../..","sources":["components/ux/xml/xml.ts"],"sourcesContent":["declare var ActiveXObject: any;\r\n\r\n/**\r\n * 解析一个 XML 文件。\r\n * @param value 要解析的字符串。\r\n * @return 返回解析后的 XML 文档。\r\n * @example parseXML(\"<a>content</a>\")\r\n */\r\nexport function parseXML(value: string) {\r\n    let xml: Document | undefined;\r\n    try {\r\n        if (typeof DOMParser !== \"undefined\") {\r\n            const tmp = new DOMParser();\r\n            xml = tmp.parseFromString(value, \"text/xml\");\r\n        } else {\r\n            xml = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n            (xml as any).async = \"false\";\r\n            (xml as any).loadXML(value);\r\n        }\r\n    } catch (e) { }\r\n    if (!xml || !xml.documentElement || xml.getElementsByTagName(\"parsererror\").length) {\r\n        throw new SyntaxError(\"XML.parse: parse error\\n\" + value);\r\n    }\r\n    return xml;\r\n}\r\n"],"mappings":";;IAEA;;;;;OAKG;IACH,kBAAyB,KAAa;QAClC,IAAI,GAAyB,CAAC;QAC9B,IAAI,CAAC;YACD,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC;gBACnC,MAAM,GAAG,GAAG,IAAI,SAAS,EAAE,CAAC;gBAC5B,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;YACjD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,GAAG,GAAG,IAAI,aAAa,CAAC,kBAAkB,CAAC,CAAC;gBAC3C,GAAW,CAAC,KAAK,GAAG,OAAO,CAAC;gBAC5B,GAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC;QACL,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,IAAI,GAAG,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACjF,MAAM,IAAI,WAAW,CAAC,0BAA0B,GAAG,KAAK,CAAC,CAAC;QAC9D,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IAhBD,4BAgBC"}