{"version":3,"file":"within.js","sourceRoot":"../../..","sources":["components/ux/within/within.ts"],"sourcesContent":["import * as dom from \"ux/dom\";\r\n\r\n/**\r\n * 判断元素是否在指定区域。\r\n * @param elem 要判断的元素。\r\n * @param container 要判断的容器元素或区域。\r\n * @param padding 判断是否在区域内的最小距离。\r\n * @return 如果元素和目标容器有任一交集，则返回 true，否则返回 false。\r\n * @example within(elem, { x:0, y:0, width: 400, height: 500 });\r\n */\r\nexport function within(elem: HTMLElement, container: HTMLElement | Document | dom.Rect, padding = 0) {\r\n    container = (container as HTMLElement | Document).nodeType ? dom.getRect(container as HTMLElement | Document) : container as dom.Rect;\r\n    const rect = dom.getRect(elem);\r\n    const deltaY = rect.y - container.y;\r\n    const deltaX = rect.x - container.x;\r\n    return (deltaY < padding ? deltaY + rect.height > padding : deltaY < container.height) && (deltaX < padding ? deltaX + rect.width > padding : deltaX < container.width);\r\n}\r\n"],"mappings":";;IAEA;;;;;;;OAOG;IACH,gBAAuB,IAAiB,EAAE,SAA4C,EAAE,OAAO,GAAG,CAAC;QAC/F,SAAS,GAAI,SAAoC,CAAC,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,SAAmC,CAAC,GAAG,SAAqB,CAAC;QACtI,MAAM,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;QACpC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,CAAC,MAAM,GAAG,OAAO,GAAG,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,GAAG,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5K,CAAC;IAND,wBAMC"}