{"version":3,"file":"pagination.js","sourceRoot":"../../..","sources":["components/ux/pagination/pagination.ts"],"sourcesContent":["/**\r\n * 绘制页码。\r\n * @param pageCount 总页数。\r\n * @param currentPage 当前页码。页码从 1 开始。\r\n * @param callback 页码内容生成器。\r\n * @param minCount 首尾保留的页数。\r\n * @param maxCount 最多显示的页数（不含上一页和下一页）。建议设置为奇数。\r\n * @example pagination(10, 2, console.log)\r\n */\r\nexport default function pagination(pageCount: number, currentPage: number, callback: (page: number, ellipsis: boolean) => void, minCount = 2, maxCount = 7) {\r\n    console.assert(currentPage > 0 && currentPage <= pageCount);\r\n    console.assert(minCount >= 0);\r\n    console.assert(maxCount > minCount * 2);\r\n\r\n    // 根据首页或尾页调整实际的开始和结束页码。\r\n    let start = Math.max(currentPage - Math.floor((maxCount - 1) / 2), 1);\r\n    let end = start + maxCount - 1;\r\n    if (end > pageCount) {\r\n        start = Math.max(start - end + pageCount, 1);\r\n        end = pageCount;\r\n    }\r\n\r\n    // 计算是否需要绘制省略号。\r\n    let leftEllipsis = false;\r\n    let rightEllipsis = false;\r\n    if (minCount > 0) {\r\n        if (start > 1) {\r\n            leftEllipsis = true;\r\n            start += minCount;\r\n        }\r\n        if (end < pageCount) {\r\n            rightEllipsis = true;\r\n            end -= minCount;\r\n        }\r\n    }\r\n\r\n    // 绘制每个页面。\r\n    if (leftEllipsis) {\r\n        let p = 0;\r\n        while (++p <= minCount) {\r\n            callback(p, false);\r\n        }\r\n        callback(p, true);\r\n    }\r\n    for (let p = start; p <= end; p++) {\r\n        callback(p, false);\r\n    }\r\n    if (rightEllipsis) {\r\n        let p = pageCount - minCount;\r\n        callback(p, true);\r\n        while (++p <= pageCount) {\r\n            callback(p, false);\r\n        }\r\n    }\r\n}\r\n"],"mappings":";;IAAA;;;;;;;;OAQG;IACH,oBAAmC,SAAiB,EAAE,WAAmB,EAAE,QAAmD,EAAE,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC;QACtJ,OAAO,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,IAAI,WAAW,IAAI,SAAS,CAAC,CAAC;QAC5D,OAAO,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC;QAExC,uBAAuB;QACvB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACtE,IAAI,GAAG,GAAG,KAAK,GAAG,QAAQ,GAAG,CAAC,CAAC;QAC/B,EAAE,CAAC,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC;YAClB,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,SAAS,EAAE,CAAC,CAAC,CAAC;YAC7C,GAAG,GAAG,SAAS,CAAC;QACpB,CAAC;QAED,eAAe;QACf,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,IAAI,aAAa,GAAG,KAAK,CAAC;QAC1B,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBACZ,YAAY,GAAG,IAAI,CAAC;gBACpB,KAAK,IAAI,QAAQ,CAAC;YACtB,CAAC;YACD,EAAE,CAAC,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC;gBAClB,aAAa,GAAG,IAAI,CAAC;gBACrB,GAAG,IAAI,QAAQ,CAAC;YACpB,CAAC;QACL,CAAC;QAED,UAAU;QACV,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,OAAO,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC;gBACrB,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YACvB,CAAC;YACD,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACtB,CAAC;QACD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YAChC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QACvB,CAAC;QACD,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,GAAG,SAAS,GAAG,QAAQ,CAAC;YAC7B,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YAClB,OAAO,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC;gBACtB,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YACvB,CAAC;QACL,CAAC;IACL,CAAC;IA7CD,6BA6CC"}