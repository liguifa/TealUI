{"version":3,"file":"class.js","sourceRoot":"../../..","sources":["components/util/class/class.ts"],"sourcesContent":["/**\r\n * 用于快速定义一个类。\r\n */\r\nexport class Class {\r\n\r\n    /**\r\n     * 继承当前类创建派生类。\r\n     * @param prototype 子类实例成员列表。其中 `contructor` 成员表示类型构造函数。\r\n     * @return 返回继承创建的子类。\r\n     * @desc\r\n     * 此函数只实现单继承。不同于真正面向对象的语言，\r\n     * 子类的构造函数默认不会调用父类构造函数，除非子类不存在新的构造函数。\r\n     *\r\n     * `Class.extend` 实际上创建一个新的函数，其原型指向 `Class` 的原型。\r\n     * 由于共享原型链，如果类的成员存在引用成员，则类所有实例将共享它们。\r\n     * 因此创建类型时应避免直接声明引用成员，而是改在构造函数里创建。\r\n     * @example\r\n     * var MyClass = Class.extend({  // 创建一个子类。\r\n     * \t  type: 'a'\r\n     * });\r\n     *\r\n     * var obj = new MyClass(); // 创建子类的实例。\r\n     */\r\n    static extend(prototype?: any) {\r\n\r\n        // 未指定函数则使用默认构造函数(Object.prototype.constructor)。\r\n        prototype = prototype || {};\r\n\r\n        let subClass: { new(...args: any[]): any; extend: (typeof Class)[\"extend\"] };\r\n\r\n        // 生成缺省构造函数：直接调用父类构造函数 。\r\n        if (!Object.prototype.hasOwnProperty.call(prototype, \"constructor\")) {\r\n            prototype.constructor = function Class() {\r\n                return (subClass as any).__proto__.apply(this, arguments);\r\n            };\r\n        }\r\n\r\n        // 直接使用构造函数作为类型本身。\r\n        subClass = prototype.constructor;\r\n\r\n        // 设置派生类的原型。\r\n        subClass.prototype = prototype;\r\n\r\n        /*@cc_on\r\n\r\n        // IE6-9: 不支持 __proto__\r\n        if (!('__proto__' in Object.prototype)) {\r\n            let key;\r\n            function BaseClass() {\r\n                for (key in prototype) {\r\n                    this[key] = prototype[key];\r\n                }\r\n                // IE6-8 无法遍历 JS 内置 constructor 属性，这里手动覆盖。\r\n                this.constructor = subClass;\r\n            };\r\n            for (key in this) {\r\n                subClass[key] = this[key];\r\n            }\r\n            BaseClass.prototype = this.prototype;\r\n            subClass.prototype = new BaseClass;\r\n        }\r\n\r\n        @*/\r\n\r\n        (subClass as any).__proto__ = this;\r\n        prototype.__proto__ = this.prototype;\r\n\r\n        return subClass;\r\n\r\n    }\r\n\r\n}\r\n"],"mappings":";;IAAA;;OAEG;IACH;QAEI;;;;;;;;;;;;;;;;;WAiBG;QACH,MAAM,CAAC,MAAM,CAAC,SAAe;YAEzB,gDAAgD;YAChD,SAAS,GAAG,SAAS,IAAI,EAAE,CAAC;YAE5B,IAAI,QAAwE,CAAC;YAE7E,wBAAwB;YACxB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;gBAClE,SAAS,CAAC,WAAW,GAAG;oBACpB,MAAM,CAAE,QAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;gBAC9D,CAAC,CAAC;YACN,CAAC;YAED,kBAAkB;YAClB,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC;YAEjC,YAAY;YACZ,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAC;YAE/B;;;;;;;;;;;;;;;;;;;eAmBG;YAEF,QAAgB,CAAC,SAAS,GAAG,IAAI,CAAC;YACnC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC;QAEpB,CAAC;KAEJ;IApED,sBAoEC"}