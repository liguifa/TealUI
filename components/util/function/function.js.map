{"version":3,"file":"function.js","sourceRoot":"../../..","sources":["components/util/function/function.ts"],"sourcesContent":["/**\r\n * 空函数。\r\n * @example var fn = empty\r\n */\r\nexport function empty() { }\r\n\r\n/**\r\n * 返回一个新函数，这个函数始终返回指定值。\r\n * @param value 新函数的返回值。\r\n * @return 返回一个新函数，这个函数始终返回指定值。\r\n * @example from(false)() // false\r\n */\r\nexport function from<T>(value: T) {\r\n    return () => value;\r\n}\r\n\r\n/**\r\n * 判断一个对象是否是函数。\r\n * @param obj 要判断的对象。\r\n * @return 如果 *obj* 是函数则返回 true，否则返回 false。\r\n * @example isFunction(function () {}) // true\r\n * @example isFunction(null) // false\r\n * @example isFunction(new Function()) // true\r\n */\r\nexport function isFunction(obj: any): obj is Function {\r\n    return Object.prototype.toString.call(obj) === \"[object Function]\";\r\n}\r\n\r\n/**\r\n * 串联多个函数并返回一个将依次执行串联的函数新函数。\r\n * @param funcs 要串联的函数。\r\n * @return 返回一个新函数。该函数无返回值。\r\n * @example concat(function (){}, function (){})()\r\n */\r\nexport function concat<T extends (...args: any[]) => void>(...funcs: T[]) {\r\n    return function (this: any) {\r\n        for (const func of funcs) {\r\n            func && func.apply(this, arguments);\r\n        }\r\n    } as any as T;\r\n}\r\n\r\n/**\r\n * 允许函数重复调用指定次数，并在最后一次真正执行。\r\n * @param func 要执行的函数。\r\n * @param count 要调用的次数。\r\n * @return 返回一个新函数。\r\n */\r\nexport function repeat<T extends Function>(func: T, count: number) {\r\n    return function (this: any) {\r\n        if (--count <= 0) {\r\n            return func.apply(this, arguments);\r\n        }\r\n    } as any as T;\r\n}\r\n\r\n/**\r\n * 运行多个函数，如果函数发生异常则继续执行下一个函数，否则返回其返回值。\r\n * @param funcs 要运行的函数。\r\n * @return 返回第一个未发生异常函数的返回值。如果所有函数都发生异常则返回 undefined。\r\n * @example\r\n * var xhr = tryThese(function(){\r\n *      return new ActiveXObject(\"Microsoft.XMLHttp\");\r\n * }, function(){\r\n *      return new XMLHttpRequest();\r\n * })\r\n */\r\nexport function tryThese(...funcs: Function[]) {\r\n    for (const func of funcs) {\r\n        try {\r\n            return func();\r\n        } catch (e) { }\r\n    }\r\n}\r\n\r\n/**\r\n * 每隔指定时间执行一次函数。\r\n * @param fn 要执行的函数。其参数为：\r\n * * param count 当前执行的次数。\r\n * * returns 如果返回 false 则强制停止执行。\r\n * @param times 执行的次数。如果指定为 -1 则无限次执行。\r\n * @param duration 每次执行之间的间隔毫秒数。\r\n * @example interval(function (a) { console.log(a) }, 10, 400)\r\n */\r\nexport function interval(fn: (count: number) => boolean | void, times = -1, duration = 0) {\r\n    callback(0);\r\n    function callback(count: number) {\r\n        if (times-- !== 0 && fn(count++) !== false) {\r\n            setTimeout(callback, duration, count);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 创建一个延时执行函数。\r\n * @param fn 执行的函数。\r\n * @param duration 延时的毫秒数。\r\n * @return 返回一个可触发延时执行的函数。\r\n * 如果在延时等待期间有新的调用，则之前的延时失效，重新开始延时执行。\r\n * @example document.onscroll = delay(function(){ console.log('延时执行'); }, 100);\r\n */\r\nexport function delay<T extends Function>(fn: T, duration = 0) {\r\n    let timer: number;\r\n    return function (this: any) {\r\n        const args = arguments;\r\n        timer && clearTimeout(timer);\r\n        timer = setTimeout(() => {\r\n            timer = 0;\r\n            fn.apply(this, args);\r\n        }, duration) as any;\r\n    } as any as T;\r\n}\r\n\r\n/**\r\n * 获取指定函数的源码。\r\n * @param fn 要获取的函数。\r\n * @return 返回函数源码。\r\n * @example getSource(function (x){ return x; })\r\n */\r\nexport function getSource(fn: Function) {\r\n    return fn.toString().replace(/^function\\s+[^(]*\\s*\\(.*?\\)\\s*\\{[\\r\\n]*/, \"\").replace(/\\s*\\}\\s*$/, \"\").replace(/\\\\u([0-9a-f]{3})([0-9a-f])/gi, (a: string, b: string, c: string) => String.fromCharCode((parseInt(b, 16) * 16 + parseInt(c, 16))));\r\n}\r\n\r\n/**\r\n * 确保一个函数只执行一次。\r\n * @param fn 要执行的函数。\r\n */\r\nexport function once<T extends Function>(fn: T) {\r\n    let run = false;\r\n    return function (this: any) {\r\n        if (run) {\r\n            return;\r\n        }\r\n        run = true;\r\n        return fn.apply(this, arguments);\r\n    } as any as T;\r\n}\r\n\r\n/**\r\n * 确保一个函数在当前上下文只执行指定次数。\r\n * @param fn 要执行的函数。\r\n * @param times 最多允许执行的次数。\r\n * @param timeout 统计超时的毫秒数。如果大于 0 表示永久保存，小于 0 表示会话内保存，等于 0 表示当前执行上下文。\r\n * @param cacheKey 缓存的键。\r\n */\r\nexport function limit<T extends Function>(fn: T, times = 1, timeout = 0, cacheKey = fn.toString()) {\r\n    return function (this: any) {\r\n        let run: boolean | undefined;\r\n        if (timeout === 0) {\r\n            run = --times >= 0;\r\n        } else {\r\n            const storage = timeout > 0 ? localStorage : sessionStorage;\r\n            const datas = storage[\"__function_limit__\"] ? JSON.parse(storage[\"__function_limit__\"]) : {};\r\n            const data: [number, number] = datas[cacheKey] || (datas[cacheKey] = [0, Date.now()]);\r\n            run = data[0] < times || Date.now() - data[1] > Math.abs(timeout);\r\n            if (run) {\r\n                data[0]++;\r\n                storage[\"__function_limit__\"] = JSON.stringify(datas);\r\n            }\r\n        }\r\n        if (run) {\r\n            return fn.apply(this, arguments);\r\n        }\r\n    } as any as T;\r\n}\r\n"],"mappings":"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"}