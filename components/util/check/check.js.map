{"version":3,"file":"check.js","sourceRoot":"../../..","sources":["components/util/check/check.ts"],"sourcesContent":["/**\r\n * 判断指定字符串是否只包含英文字母（a-z）。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isLetter(\"abc\") // true\r\n * @example isLetter(\"ab0\") // false\r\n */\r\nexport function isLetter(value: string) {\r\n    return /^[a-zA-Z]+$/.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否只包含数字（0-9）。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isDight(\"1\") // true\r\n * @example isDight(\"a\") // false\r\n */\r\nexport function isDight(value: string) {\r\n    return /^\\d+$/.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否只包含数字（0-9）或英文字母（a-z）。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isLetterOrDight(\"x09\") // true\r\n * @example isLetterOrDight(\"1.2f\") // false\r\n */\r\nexport function isLetterOrDight(value: string) {\r\n    return /^[a-zA-Z\\d]+$/.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否表示一个整数。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isInteger(\"-45\") // true\r\n * @example isInteger(\"-45.0\") // false\r\n * @desc 要判断字符串能否转换为整数，可以使用 `!!parseInt(\"0x00\")`。\r\n */\r\nexport function isInteger(value: string) {\r\n    return /^[-+]?\\d+$/.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否表示一个数字。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isNumber(\"-45.35\") // true\r\n * @example isNumber(\"0x00\") // false\r\n * @desc 要判断字符串能否转换为数字，可以使用 `!!parseFloat(\"0x00\")`。\r\n */\r\nexport function isNumber(value: string) {\r\n    return /^[-+]?\\d+(?:\\.\\d*)?$/.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否表示一个电子邮箱地址。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isEmail(\"bug@tealui.com\") // true\r\n * @example isEmail(\"bug@@tealui.com\") // false\r\n */\r\nexport function isEmail(value: string) {\r\n    return /^[\\u4E00-\\u9FA5\\uFE30-\\uFFA0\\w\\-+\\.]+@[\\u4E00-\\u9FA5\\uFE30-\\uFFA0\\w\\-]+(?:\\.[\\u4E00-\\u9FA5\\uFE30-\\uFFA0\\w\\-]+)*$/.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否表示一个日期。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isDate(\"2014/1/1\") // true\r\n * @example isDate(\"hello\") // false\r\n * @example isDate(\"2014年1月1日\") // false\r\n */\r\nexport function isDate(value: string) {\r\n    return !!+new Date(value.replace(/(\\d{4})\\D*(\\d\\d?)\\D*(\\d\\d?)/, \"$1/$2/$3\"));\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否表示一个 IP 地址。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isIp(\"127.0.0.1\") // true\r\n */\r\nexport function isIp(value: string) {\r\n    return /^(?:localhost|::1|(?:[01]?\\d?\\d|2[0-4]\\d|25[0-5])(\\.(?:[01]?\\d?\\d|2[0-4]\\d|25[0-5])){3})$/.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否表示一个手机号码。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isPhone(\"+8613211111111\") // true\r\n */\r\nexport function isPhone(value: string) {\r\n    return /^(?:\\+\\d\\d)?1\\d{10}$/.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否表示一个电话号码（400 电话和国际电话除外）。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isTelephone(\"010-86000000\") // true\r\n */\r\nexport function isTelephone(value: string) {\r\n    return /^(?:\\d{3,4}\\-)?8?\\d{7}$/.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否表示一个网址。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isUrl(\"http://tealui.com/\") // true\r\n */\r\nexport function isUrl(value: string) {\r\n    return /^(?:\\w+:)?\\/\\/./.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否表示一个 JavaScript 标识符。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isIndentifier(\"x09\") // true\r\n */\r\nexport function isIndentifier(value: string) {\r\n    return /^[\\u4E00-\\u9FA5\\uFE30-\\uFFA0a-zA-Z_$][\\u4E00-\\u9FA5\\uFE30-\\uFFA0\\w$]+$/.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否只包含英文。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isEnglish(\"Hello\") // true\r\n */\r\nexport function isEnglish(value: string) {\r\n    return /^[\\-a-zA-Z\\s]+$/.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否表示一个邮编号码。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isPostCode(\"310000\") // true\r\n */\r\nexport function isPostCode(value: string) {\r\n    return /^\\d{6}$/.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否表示一个 QQ 号。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isQQ(\"10000\") // true\r\n */\r\nexport function isQQ(value: string) {\r\n    return /^\\d{5,13}$/.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否只包含中文。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isChinese(\"你好\") // true\r\n */\r\nexport function isChinese(value: string) {\r\n    return /^[\\u4E00-\\u9FA5\\uFE30-\\uFFA0]+$/gi.test(value);\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否表示一个身份证号。\r\n * @param value 要判断的字符串。\r\n * @return 如果符合条件则返回 true，否则返回 false。\r\n * @example isChineseId(\"152500198909267865\") // true\r\n */\r\nexport function isChineseId(value: string) {\r\n    return /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(value);\r\n}\r\n"],"mappings":";;IAAA;;;;;;OAMG;IACH,kBAAyB,KAAa;QAClC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAFD,4BAEC;IAED;;;;;;OAMG;IACH,iBAAwB,KAAa;QACjC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAFD,0BAEC;IAED;;;;;;OAMG;IACH,yBAAgC,KAAa;QACzC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IAFD,0CAEC;IAED;;;;;;;OAOG;IACH,mBAA0B,KAAa;QACnC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAFD,8BAEC;IAED;;;;;;;OAOG;IACH,kBAAyB,KAAa;QAClC,MAAM,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAFD,4BAEC;IAED;;;;;;OAMG;IACH,iBAAwB,KAAa;QACjC,MAAM,CAAC,kHAAkH,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1I,CAAC;IAFD,0BAEC;IAED;;;;;;;OAOG;IACH,gBAAuB,KAAa;QAChC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,6BAA6B,EAAE,UAAU,CAAC,CAAC,CAAC;IACjF,CAAC;IAFD,wBAEC;IAED;;;;;OAKG;IACH,cAAqB,KAAa;QAC9B,MAAM,CAAC,2FAA2F,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnH,CAAC;IAFD,oBAEC;IAED;;;;;OAKG;IACH,iBAAwB,KAAa;QACjC,MAAM,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAFD,0BAEC;IAED;;;;;OAKG;IACH,qBAA4B,KAAa;QACrC,MAAM,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjD,CAAC;IAFD,kCAEC;IAED;;;;;OAKG;IACH,eAAsB,KAAa;QAC/B,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IAFD,sBAEC;IAED;;;;;OAKG;IACH,uBAA8B,KAAa;QACvC,MAAM,CAAC,wEAAwE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChG,CAAC;IAFD,sCAEC;IAED;;;;;OAKG;IACH,mBAA0B,KAAa;QACnC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IAFD,8BAEC;IAED;;;;;OAKG;IACH,oBAA2B,KAAa;QACpC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAFD,gCAEC;IAED;;;;;OAKG;IACH,cAAqB,KAAa;QAC9B,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAFD,oBAEC;IAED;;;;;OAKG;IACH,mBAA0B,KAAa;QACnC,MAAM,CAAC,mCAAmC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3D,CAAC;IAFD,8BAEC;IAED;;;;;OAKG;IACH,qBAA4B,KAAa;QACrC,MAAM,CAAC,0CAA0C,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClE,CAAC;IAFD,kCAEC"}