{"version":3,"file":"check-test.js","sourceRoot":"../../..","sources":["components/util/check/check-test.ts"],"sourcesContent":["import * as assert from \"assert\";\r\nimport * as check from \"./check\";\r\n\r\nexport function isLetterTest() {\r\n    assert.strictEqual(check.isLetter(\"abc\"), true);\r\n    assert.strictEqual(check.isLetter(\"ab0\"), false);\r\n}\r\n\r\nexport function isDightTest() {\r\n    assert.strictEqual(check.isDight(\"1\"), true);\r\n    assert.strictEqual(check.isDight(\"a\"), false);\r\n}\r\n\r\nexport function isLetterOrDightTest() {\r\n    assert.strictEqual(check.isLetterOrDight(\"x09\"), true);\r\n    assert.strictEqual(check.isLetterOrDight(\"1.2f\"), false);\r\n}\r\n\r\nexport function isIntegerTest() {\r\n    assert.strictEqual(check.isInteger(\"-45\"), true);\r\n    assert.strictEqual(check.isInteger(\"-45.0\"), false);\r\n}\r\n\r\nexport function isNumberTest() {\r\n    assert.strictEqual(check.isNumber(\"-45.35\"), true);\r\n    assert.strictEqual(check.isNumber(\"0x00\"), false);\r\n}\r\n\r\nexport function isDateTest() {\r\n    assert.strictEqual(check.isDate(\"2014/1/1\"), true);\r\n    assert.strictEqual(check.isDate(\"hello\"), false);\r\n    assert.strictEqual(check.isDate(\"2014年1月1日\"), false);\r\n}\r\n\r\nexport function isTimeTest() {\r\n    assert.strictEqual(check.isTime(\"10:00:00\"), true);\r\n    assert.strictEqual(check.isTime(\"\"), false);\r\n}\r\n\r\nexport function isEmailTest() {\r\n    assert.strictEqual(check.isEmail(\"bug@tealui.com\"), true);\r\n    assert.strictEqual(check.isEmail(\"bug@@tealui.com\"), false);\r\n}\r\n\r\nexport function isIpTest() {\r\n    assert.strictEqual(check.isIp(\"127.0.0.1\"), true);\r\n}\r\n\r\nexport function isUrlTest() {\r\n    assert.strictEqual(check.isUrl(\"http://tealui.com/\"), true);\r\n}\r\n\r\nexport function isIndentifierTest() {\r\n    assert.strictEqual(check.isIndentifier(\"x09\"), true);\r\n}\r\n\r\nexport function isCurrencyTest() {\r\n    assert.strictEqual(check.isCurrency(\"0\"), false);\r\n    assert.strictEqual(check.isCurrency(\"0.01\"), true);\r\n    assert.strictEqual(check.isCurrency(\"1\"), true);\r\n    assert.strictEqual(check.isCurrency(\"1.25\"), true);\r\n    assert.strictEqual(check.isCurrency(\"1.250\"), false);\r\n}\r\n\r\nexport function isPhoneTest() {\r\n    assert.strictEqual(check.isPhone(\"+8613211111111\"), true);\r\n}\r\n\r\nexport function isTelephoneTest() {\r\n    assert.strictEqual(check.isTelephone(\"010-86000000\"), true);\r\n}\r\n\r\nexport function isEnglishTest() {\r\n    assert.strictEqual(check.isEnglish(\"Hello\"), true);\r\n}\r\n\r\nexport function isPostCodeTest() {\r\n    assert.strictEqual(check.isPostCode(\"310000\"), true);\r\n}\r\n\r\nexport function isQQTest() {\r\n    assert.strictEqual(check.isQQ(\"10000\"), true);\r\n}\r\n\r\nexport function isChineseTest() {\r\n    assert.strictEqual(check.isChinese(\"你好\"), true);\r\n}\r\n\r\nexport function isChineseIdTest() {\r\n    assert.strictEqual(check.isChineseId(\"152500198909267865\"), true);\r\n}\r\n"],"mappings":"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"}