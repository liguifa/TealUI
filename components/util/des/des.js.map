{"version":3,"file":"des.js","sourceRoot":"../../..","sources":["components/util/des/des.ts"],"sourcesContent":["/**\r\n * 使用 DES 算法加密或解密指定字符串。\r\n * @param value 要加密或解密的字符串。\r\n * @param key 加密或解密使用的密钥。\r\n * @param decrypt 如果是 true 则执行解密，否则执行加密(默认)。\r\n * @param iv 如果使用密码段链接（Cipher Block Chaining，CBC）模式，则提供初始向量；如果未提供则不使用此模式。\r\n * @param padding 自动填充的字符数，可以是 0、1 或 2。\r\n * @return 返回加密后的字符串。\r\n * @example des(\"a\", \"1\") // \"\\u0082\\u000e\\u0056\\u00cc\\u007c\\u0045\\u0059\\u00a4\"\r\n */\r\nexport default function des(value: string, key: string, decrypt = false, iv?: string, padding = 0) {\r\n\r\n    const sp1 = [16843776, 0, 0x10000, 0x1010404, 0x1010004, 0x10404, 0x4, 0x10000, 0x400, 0x1010400, 0x1010404, 0x400, 0x1000404, 0x1010004, 0x1000000, 0x4, 0x404, 0x1000400, 0x1000400, 0x10400, 0x10400, 0x1010000, 0x1010000, 0x1000404, 0x10004, 0x1000004, 0x1000004, 0x10004, 0, 0x404, 0x10404, 0x1000000, 0x10000, 0x1010404, 0x4, 0x1010000, 0x1010400, 0x1000000, 0x1000000, 0x400, 0x1010004, 0x10000, 0x10400, 0x1000004, 0x400, 0x4, 0x1000404, 0x10404, 0x1010404, 0x10004, 0x1010000, 0x1000404, 0x1000004, 0x404, 0x10404, 0x1010400, 0x404, 0x1000400, 0x1000400, 0, 0x10004, 0x10400, 0, 0x1010004];\r\n    const sp2 = [-0x7fef7fe0, -0x7fff8000, 0x8000, 0x108020, 0x100000, 0x20, -0x7fefffe0, -0x7fff7fe0, -0x7fffffe0, -0x7fef7fe0, -0x7fef8000, -0x80000000, -0x7fff8000, 0x100000, 0x20, -0x7fefffe0, 0x108000, 0x100020, -0x7fff7fe0, 0, -0x80000000, 0x8000, 0x108020, -0x7ff00000, 0x100020, -0x7fffffe0, 0, 0x108000, 0x8020, -0x7fef8000, -0x7ff00000, 0x8020, 0, 0x108020, -0x7fefffe0, 0x100000, -0x7fff7fe0, -0x7ff00000, -0x7fef8000, 0x8000, -0x7ff00000, -0x7fff8000, 0x20, -0x7fef7fe0, 0x108020, 0x20, 0x8000, -0x80000000, 0x8020, -0x7fef8000, 0x100000, -0x7fffffe0, 0x100020, -0x7fff7fe0, -0x7fffffe0, 0x100020, 0x108000, 0, -0x7fff8000, 0x8020, -0x80000000, -0x7fefffe0, -0x7fef7fe0, 0x108000];\r\n    const sp3 = [0x208, 0x8020200, 0, 0x8020008, 0x8000200, 0, 0x20208, 0x8000200, 0x20008, 0x8000008, 0x8000008, 0x20000, 0x8020208, 0x20008, 0x8020000, 0x208, 0x8000000, 0x8, 0x8020200, 0x200, 0x20200, 0x8020000, 0x8020008, 0x20208, 0x8000208, 0x20200, 0x20000, 0x8000208, 0x8, 0x8020208, 0x200, 0x8000000, 0x8020200, 0x8000000, 0x20008, 0x208, 0x20000, 0x8020200, 0x8000200, 0, 0x200, 0x20008, 0x8020208, 0x8000200, 0x8000008, 0x200, 0, 0x8020008, 0x8000208, 0x20000, 0x8000000, 0x8020208, 0x8, 0x20208, 0x20200, 0x8000008, 0x8020000, 0x8000208, 0x208, 0x8020000, 0x20208, 0x8, 0x8020008, 0x20200];\r\n    const sp4 = [0x802001, 0x2081, 0x2081, 0x80, 0x802080, 0x800081, 0x800001, 0x2001, 0, 0x802000, 0x802000, 0x802081, 0x81, 0, 0x800080, 0x800001, 0x1, 0x2000, 0x800000, 0x802001, 0x80, 0x800000, 0x2001, 0x2080, 0x800081, 0x1, 0x2080, 0x800080, 0x2000, 0x802080, 0x802081, 0x81, 0x800080, 0x800001, 0x802000, 0x802081, 0x81, 0, 0, 0x802000, 0x2080, 0x800080, 0x800081, 0x1, 0x802001, 0x2081, 0x2081, 0x80, 0x802081, 0x81, 0x1, 0x2000, 0x800001, 0x2001, 0x802080, 0x800081, 0x2001, 0x2080, 0x800000, 0x802001, 0x80, 0x800000, 0x2000, 0x802080];\r\n    const sp5 = [0x100, 0x2080100, 0x2080000, 0x42000100, 0x80000, 0x100, 0x40000000, 0x2080000, 0x40080100, 0x80000, 0x2000100, 0x40080100, 0x42000100, 0x42080000, 0x80100, 0x40000000, 0x2000000, 0x40080000, 0x40080000, 0, 0x40000100, 0x42080100, 0x42080100, 0x2000100, 0x42080000, 0x40000100, 0, 0x42000000, 0x2080100, 0x2000000, 0x42000000, 0x80100, 0x80000, 0x42000100, 0x100, 0x2000000, 0x40000000, 0x2080000, 0x42000100, 0x40080100, 0x2000100, 0x40000000, 0x42080000, 0x2080100, 0x40080100, 0x100, 0x2000000, 0x42080000, 0x42080100, 0x80100, 0x42000000, 0x42080100, 0x2080000, 0, 0x40080000, 0x42000000, 0x80100, 0x2000100, 0x40000100, 0x80000, 0, 0x40080000, 0x2080100, 0x40000100];\r\n    const sp6 = [0x20000010, 0x20400000, 0x4000, 0x20404010, 0x20400000, 0x10, 0x20404010, 0x400000, 0x20004000, 0x404010, 0x400000, 0x20000010, 0x400010, 0x20004000, 0x20000000, 0x4010, 0, 0x400010, 0x20004010, 0x4000, 0x404000, 0x20004010, 0x10, 0x20400010, 0x20400010, 0, 0x404010, 0x20404000, 0x4010, 0x404000, 0x20404000, 0x20000000, 0x20004000, 0x10, 0x20400010, 0x404000, 0x20404010, 0x400000, 0x4010, 0x20000010, 0x400000, 0x20004000, 0x20000000, 0x4010, 0x20000010, 0x20404010, 0x404000, 0x20400000, 0x404010, 0x20404000, 0, 0x20400010, 0x10, 0x4000, 0x20400000, 0x404010, 0x4000, 0x400010, 0x20004010, 0, 0x20404000, 0x20000000, 0x400010, 0x20004010];\r\n    const sp7 = [0x200000, 0x4200002, 0x4000802, 0, 0x800, 0x4000802, 0x200802, 0x4200800, 0x4200802, 0x200000, 0, 0x4000002, 0x2, 0x4000000, 0x4200002, 0x802, 0x4000800, 0x200802, 0x200002, 0x4000800, 0x4000002, 0x4200000, 0x4200800, 0x200002, 0x4200000, 0x800, 0x802, 0x4200802, 0x200800, 0x2, 0x4000000, 0x200800, 0x4000000, 0x200800, 0x200000, 0x4000802, 0x4000802, 0x4200002, 0x4200002, 0x2, 0x200002, 0x4000000, 0x4000800, 0x200000, 0x4200800, 0x802, 0x200802, 0x4200800, 0x802, 0x4000002, 0x4200802, 0x4200000, 0x200800, 0, 0x2, 0x4200802, 0, 0x200802, 0x4200000, 0x800, 0x4000002, 0x4000800, 0x800, 0x200002];\r\n    const sp8 = [0x10001040, 0x1000, 0x40000, 0x10041040, 0x10000000, 0x10001040, 0x40, 0x10000000, 0x40040, 0x10040000, 0x10041040, 0x41000, 0x10041000, 0x41040, 0x1000, 0x40, 0x10040000, 0x10000040, 0x10001000, 0x1040, 0x41000, 0x40040, 0x10040040, 0x10041000, 0x1040, 0, 0, 0x10040040, 0x10000040, 0x10001000, 0x41040, 0x40000, 0x41040, 0x40000, 0x10041000, 0x1000, 0x40, 0x10040040, 0x1000, 0x41040, 0x10001000, 0x40, 0x10000040, 0x10040000, 0x10040040, 0x10000000, 0x40000, 0x10001040, 0, 0x10041040, 0x40040, 0x10000040, 0x10040000, 0x10001000, 0x10001040, 0, 0x10041040, 0x41000, 0x41000, 0x1040, 0x1040, 0x40040, 0x10000000, 0x10041000];\r\n\r\n    // 转换加密键字符串为初始化向量。\r\n    const keys = createKeys(key);\r\n\r\n    // 计算循环次数(单次 = 3, 双次 = 9)。\r\n    const count = keys.length === 32 ? 3 : 9;\r\n\r\n    // 每次循环的向量。\r\n    const loops = decrypt ? count == 3 ? [30, -2, -2] : [94, 62, -2, 32, 64, 2, 30, -2, -2] :\r\n        count == 3 ? [0, 32, 2] : [0, 32, 2, 62, 30, -2, 64, 96, 2];\r\n\r\n    let len = value.length;\r\n\r\n    // 对齐字符串。\r\n    switch (padding) {\r\n        case 2:\r\n            value += \" \";\r\n            break;\r\n        case 1:\r\n            const t = 8 - (len % 8);\r\n            value += String.fromCharCode(t, t, t, t, t, t, t, t);\r\n            if (t == 8) len += 8;\r\n            break;\r\n        // PKCS7 padding\r\n        default:\r\n            value += \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n    }\r\n\r\n    // 缓存结果。\r\n    let result = \"\";\r\n    let current = \"\";\r\n\r\n    // CBC 支持。\r\n    let cbcLeft: number | undefined;\r\n    let cbcRight: number | undefined;\r\n    if (iv) {\r\n        cbcLeft = iv.charCodeAt(0) << 24 | iv.charCodeAt(1) << 16 | iv.charCodeAt(2) << 8 | iv.charCodeAt(3);\r\n        cbcRight = iv.charCodeAt(4) << 24 | iv.charCodeAt(5) << 16 | iv.charCodeAt(6) << 8 | iv.charCodeAt(7);\r\n    }\r\n\r\n    let chunk = 0;\r\n    for (let p = 0; p < len;) {\r\n\r\n        let left: number;\r\n        let right: number;\r\n        if (decrypt) {\r\n            left = value.charCodeAt(p++) << 24 | value.charCodeAt(p++) << 16 | value.charCodeAt(p++) << 8 | value.charCodeAt(p++);\r\n            right = value.charCodeAt(p++) << 24 | value.charCodeAt(p++) << 16 | value.charCodeAt(p++) << 8 | value.charCodeAt(p++);\r\n        } else {\r\n            left = value.charCodeAt(p++) << 16 | value.charCodeAt(p++);\r\n            right = value.charCodeAt(p++) << 16 | value.charCodeAt(p++);\r\n        }\r\n\r\n        // 对之前的结果做异或操作。\r\n        let oldCbcLeft: number | undefined;\r\n        let oldCbcRight: number | undefined;\r\n        if (iv) {\r\n            if (decrypt) {\r\n                oldCbcLeft = cbcLeft;\r\n                oldCbcRight = cbcRight;\r\n                cbcLeft = left;\r\n                cbcRight = right;\r\n            } else {\r\n                left ^= cbcLeft!;\r\n                right ^= cbcRight!;\r\n            }\r\n        }\r\n\r\n        let t;\r\n        t = (left >>> 4 ^ right) & 0x0f0f0f0f; right ^= t; left ^= t << 4;\r\n        t = (left >>> 16 ^ right) & 0x0000ffff; right ^= t; left ^= t << 16;\r\n        t = (right >>> 2 ^ left) & 0x33333333; left ^= t; right ^= t << 2;\r\n        t = (right >>> 8 ^ left) & 0x00ff00ff; left ^= t; right ^= t << 8;\r\n        t = (left >>> 1 ^ right) & 0x55555555; right ^= t; left ^= t << 1;\r\n\r\n        left = left << 1 | left >>> 31;\r\n        right = right << 1 | right >>> 31;\r\n\r\n        // 处理每个片段。\r\n        for (let i = 0; i < count; i += 3) {\r\n            const end = loops[i + 1];\r\n            const step = loops[i + 2];\r\n\r\n            // 执行加密算法。\r\n            for (let j = loops[i]; j != end; j += step) {\r\n                const r1 = right ^ keys[j];\r\n                const r2 = (right >>> 4 | right << 28) ^ keys[j + 1];\r\n\r\n                t = left;\r\n                left = right;\r\n                right = t ^ (sp2[r1 >>> 24 & 0x3f] | sp4[r1 >>> 16 & 0x3f]\r\n                    | sp6[r1 >>> 8 & 0x3f] | sp8[r1 & 0x3f]\r\n                    | sp1[r2 >>> 24 & 0x3f] | sp3[r2 >>> 16 & 0x3f]\r\n                    | sp5[r2 >>> 8 & 0x3f] | sp7[r2 & 0x3f]);\r\n            }\r\n\r\n            // 交换 left 和 right。\r\n            t = left; left = right; right = t;\r\n        }\r\n\r\n        // 继续处理后 32 位。\r\n        left = left >>> 1 | left << 31;\r\n        right = right >>> 1 | right << 31;\r\n\r\n        t = ((left >>> 1) ^ right) & 0x55555555; right ^= t; left ^= (t << 1);\r\n        t = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= t; right ^= (t << 8);\r\n        t = ((right >>> 2) ^ left) & 0x33333333; left ^= t; right ^= (t << 2);\r\n        t = ((left >>> 16) ^ right) & 0x0000ffff; right ^= t; left ^= (t << 16);\r\n        t = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= t; left ^= (t << 4);\r\n\r\n        if (iv) {\r\n            if (decrypt) {\r\n                left ^= oldCbcLeft!;\r\n                right ^= oldCbcRight!;\r\n            } else {\r\n                cbcLeft = left;\r\n                cbcRight = right;\r\n            }\r\n        }\r\n\r\n        if (decrypt) {\r\n            current += String.fromCharCode(left >>> 16 & 0xffff, left & 0xffff, right >>> 24, right >>> 16 & 0xffff, right & 0xffff).replace(/\\0/g, \"\");\r\n            chunk += 8;\r\n        } else {\r\n            current += String.fromCharCode(left >>> 24, left >>> 16 & 0xff, left >>> 8 & 0xff, left & 0xff, right >>> 24, right >>> 16 & 0xff, right >>> 8 & 0xff, right & 0xff);\r\n            chunk += 16;\r\n        }\r\n\r\n        if (chunk == 512) { result += current; current = \"\"; chunk = 0; }\r\n    }\r\n\r\n    return result + current;\r\n}\r\n\r\n/**\r\n * 创建 DES 键初始向量。\r\n * @param key 要使用的 DES 加密或解密键。\r\n */\r\nexport function createKeys(key: string) {\r\n    const pc2bytes0 = [0, 0x4, 0x20000000, 0x20000004, 0x10000, 0x10004, 0x20010000, 0x20010004, 0x200, 0x204, 0x20000200, 0x20000204, 0x10200, 0x10204, 0x20010200, 0x20010204];\r\n    const pc2bytes1 = [0, 0x1, 0x100000, 0x100001, 0x4000000, 0x4000001, 0x4100000, 0x4100001, 0x100, 0x101, 0x100100, 0x100101, 0x4000100, 0x4000101, 0x4100100, 0x4100101];\r\n    const pc2bytes2 = [0, 0x8, 0x800, 0x808, 0x1000000, 0x1000008, 0x1000800, 0x1000808, 0, 0x8, 0x800, 0x808, 0x1000000, 0x1000008, 0x1000800, 0x1000808];\r\n    const pc2bytes3 = [0, 0x200000, 0x8000000, 0x8200000, 0x2000, 0x202000, 0x8002000, 0x8202000, 0x20000, 0x220000, 0x8020000, 0x8220000, 0x22000, 0x222000, 0x8022000, 0x8222000];\r\n    const pc2bytes4 = [0, 0x40000, 0x10, 0x40010, 0, 0x40000, 0x10, 0x40010, 0x1000, 0x41000, 0x1010, 0x41010, 0x1000, 0x41000, 0x1010, 0x41010];\r\n    const pc2bytes5 = [0, 0x400, 0x20, 0x420, 0, 0x400, 0x20, 0x420, 0x2000000, 0x2000400, 0x2000020, 0x2000420, 0x2000000, 0x2000400, 0x2000020, 0x2000420];\r\n    const pc2bytes6 = [0, 0x10000000, 0x80000, 0x10080000, 0x2, 0x10000002, 0x80002, 0x10080002, 0, 0x10000000, 0x80000, 0x10080000, 0x2, 0x10000002, 0x80002, 0x10080002];\r\n    const pc2bytes7 = [0, 0x10000, 0x800, 0x10800, 0x20000000, 0x20010000, 0x20000800, 0x20010800, 0x20000, 0x30000, 0x20800, 0x30800, 0x20020000, 0x20030000, 0x20020800, 0x20030800];\r\n    const pc2bytes8 = [0, 0x40000, 0, 0x40000, 0x2, 0x40002, 0x2, 0x40002, 0x2000000, 0x2040000, 0x2000000, 0x2040000, 0x2000002, 0x2040002, 0x2000002, 0x2040002];\r\n    const pc2bytes9 = [0, 0x10000000, 0x8, 0x10000008, 0, 0x10000000, 0x8, 0x10000008, 0x400, 0x10000400, 0x408, 0x10000408, 0x400, 0x10000400, 0x408, 0x10000408];\r\n    const pc2bytes10 = [0, 0x20, 0, 0x20, 0x100000, 0x100020, 0x100000, 0x100020, 0x2000, 0x2020, 0x2000, 0x2020, 0x102000, 0x102020, 0x102000, 0x102020];\r\n    const pc2bytes11 = [0, 0x1000000, 0x200, 0x1000200, 0x200000, 0x1200000, 0x200200, 0x1200200, 0x4000000, 0x5000000, 0x4000200, 0x5000200, 0x4200000, 0x5200000, 0x4200200, 0x5200200];\r\n    const pc2bytes12 = [0, 0x1000, 0x8000000, 0x8001000, 0x80000, 0x81000, 0x8080000, 0x8081000, 0x10, 0x1010, 0x8000010, 0x8001010, 0x80010, 0x81010, 0x8080010, 0x8081010];\r\n    const pc2bytes13 = [0, 0x4, 0x100, 0x104, 0, 0x4, 0x100, 0x104, 0x1, 0x5, 0x101, 0x105, 0x1, 0x5, 0x101, 0x105];\r\n\r\n    const shifts = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];\r\n\r\n    // 计算循环次数(单次 = 1, 双次 = 3)。\r\n    const count = key.length > 8 ? 3 : 1;\r\n\r\n    const result = new Array<number>(count * 32);\r\n    let p = 0;\r\n    let ri = 0;\r\n    for (let i = 0; i < count; i++) {\r\n        let left = key.charCodeAt(p++) << 24 | key.charCodeAt(p++) << 16 | key.charCodeAt(p++) << 8 | key.charCodeAt(p++);\r\n        let right = key.charCodeAt(p++) << 24 | key.charCodeAt(p++) << 16 | key.charCodeAt(p++) << 8 | key.charCodeAt(p++);\r\n\r\n        let t;\r\n        t = (left >>> 4 ^ right) & 0x0f0f0f0f; right ^= t; left ^= t << 4;\r\n        t = (right >>> -16 ^ left) & 0x0000ffff; left ^= t; right ^= t << -16;\r\n        t = (left >>> 2 ^ right) & 0x33333333; right ^= t; left ^= t << 2;\r\n        t = (right >>> -16 ^ left) & 0x0000ffff; left ^= t; right ^= t << -16;\r\n        t = (left >>> 1 ^ right) & 0x55555555; right ^= t; left ^= t << 1;\r\n        t = (right >>> 8 ^ left) & 0x00ff00ff; left ^= t; right ^= t << 8;\r\n        t = (left >>> 1 ^ right) & 0x55555555; right ^= t; left ^= t << 1;\r\n\r\n        // 最后的数据从开头获取。\r\n        t = left << 8 | right >>> 20 & 0x000000f0;\r\n        left = right << 24 | right << 8 & 0xff0000 | right >>> 8 & 0xff00 | right >>> 24 & 0xf0;\r\n        right = t;\r\n\r\n        // 计算每个键。\r\n        for (const shift of shifts) {\r\n            if (shift) {\r\n                left = (left << 2) | (left >>> 26);\r\n                right = (right << 2) | (right >>> 26);\r\n            } else {\r\n                left = (left << 1) | (left >>> 27);\r\n                right = (right << 1) | (right >>> 27);\r\n            }\r\n            left &= -0xf;\r\n            right &= -0xf;\r\n\r\n            // S2, S4, S6, S8, S1, S3, S5, S7\r\n            const tl = pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf]\r\n                | pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf]\r\n                | pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf]\r\n                | pc2bytes6[(left >>> 4) & 0xf];\r\n            const tr = pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf]\r\n                | pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf]\r\n                | pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf]\r\n                | pc2bytes13[(right >>> 4) & 0xf];\r\n\r\n            t = (tr >>> 16 ^ tl) & 0x0000ffff;\r\n            result[ri++] = tl ^ t;\r\n            result[ri++] = tr ^ t << 16;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n"],"mappings":"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AQ,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC7hqB,MAAM,GAAG,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE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"}