{"version":3,"file":"query.js","sourceRoot":"../../..","sources":["components/util/query/query.ts"],"sourcesContent":["/**\r\n * 解析一个查询字符串为对象。\r\n * @param value 要解析的查询字符串。\r\n * @param joinChar 使用的连接符。\r\n * @param equalChar 使用的等号。\r\n * @return 返回解析后的对象。\r\n * @example parseQuery(\"foo=1&goo=2&goo=3\") // { foo: \"1\", goo: [\"2\", \"3\"] }\r\n */\r\nexport function parseQuery(value: string, joinChar = \"&\", equalChar = \"=\") {\r\n    const result: { [key: string]: any } = {};\r\n    for (const pair of value.split(joinChar)) {\r\n        const kv = pair.split(equalChar, 2);\r\n        const key = decodeURIComponent(kv[0]);\r\n        const value = decodeURIComponent(kv[1]);\r\n        const exist = result[key];\r\n        if (Array.isArray(exist)) {\r\n            exist.push(value);\r\n        } else if (typeof exist === \"string\") {\r\n            result[key] = [exist, value];\r\n        } else {\r\n            result[key] = value;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * 将指定对象格式化为查询字符串。\r\n * @param obj 要格式化的对象。\r\n * @param joinChar 使用的连接符。\r\n * @param equalChar 使用的等号。\r\n * @return 返回格式化后的字符串。\r\n * @example formatQuery({ a: \"2\", c: \"4\" }) // \"a=2&c=4\"\r\n * @example formatQuery({ a: [2, 4] }) // \"a=2&a=4\"\r\n */\r\nexport function formatQuery(obj: any, joinChar = \"&\", equalChar = \"=\") {\r\n    const parts: string[] = [];\r\n    for (const key in obj) {\r\n        const value = obj[key];\r\n        if (Array.isArray(value)) {\r\n            for (const item of value) {\r\n                parts.push(`${key}${equalChar}${encodeURIComponent(item)}`);\r\n            }\r\n        } else {\r\n            parts.push(`${key}${equalChar}${encodeURIComponent(value)}`);\r\n        }\r\n    }\r\n    return parts.join(joinChar);\r\n}\r\n\r\n/**\r\n * 获取指定地址的查询参数值。\r\n * @param name 要获取的查询参数名。\r\n * @param url 要处理的地址，默认为当前页面的地址。\r\n * @return 返回查询参数值。如果获取不到则返回 null。\r\n * @example getQuery(\"foo\", \"?foo=1\") // \"1\"\r\n * @example getQuery(\"goo\", \"?foo=1\") // null\r\n */\r\nexport function getQuery(name: string, url = location.href) {\r\n    const match = /\\?([^#]*)/.exec(url);\r\n    if (match) {\r\n        const match2 = new RegExp(\"(?:^|&)\" + encodeURIComponent(name).replace(/([\\-.*+?^${}()|[\\]\\/\\\\])/g, \"\\\\$1\") + \"=([^&]*)(?:&|$)\", \"i\").exec(match[1]);\r\n        if (match2) {\r\n            return decodeURIComponent(match2[1]);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * 设置指定的地址的查询参数值。\r\n * @param name 要设置的查询参数名。\r\n * @param value 要设置的查询参数值。如果设为 null 则删除。\r\n * @param url 要处理的地址，默认为当前页面的地址。\r\n * @return 返回更新后的地址。\r\n * @example setQuery(\"foo\", \"1\", \"page.html\") // \"page.html?foo=1\"\r\n * @example setQuery(\"foo\", \"2\", \"page.html?foo=1\") // \"page.html?foo=2\"\r\n * @example setQuery(\"foo\", null, \"page.html\") // \"page.html\"\r\n */\r\nexport function setQuery(name: string, value: string | null, url = location.href) {\r\n    const match = /^(.*?)(\\?.*?)?(#.*)?$/.exec(url)!;\r\n    match[0] = \"\";\r\n    if (value != null) {\r\n        value = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\r\n    }\r\n    if (match[2]) {\r\n        match[2] = match[2].replace(new RegExp(\"([?&])\" + name.replace(/([-.*+?^${}()|[\\]\\/\\\\])/g, \"\\$1\") + \"(=[^&]*)?(&|$)\"), (source: string, left: string, oldValue: string, right: string) => {\r\n            source = value == null ? right && left : left + value + right;\r\n            // 标记已解析过。\r\n            value = null;\r\n            return source;\r\n        });\r\n    }\r\n    if (value != null) {\r\n        match[2] = (match[2] ? match[2] === \"?\" ? \"?\" : match[2] + \"&\" : \"?\") + value;\r\n    }\r\n    return match.join(\"\");\r\n}\r\n"],"mappings":"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"}