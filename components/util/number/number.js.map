{"version":3,"file":"number.js","sourceRoot":"../../..","sources":["components/util/number/number.ts"],"sourcesContent":["/**\r\n * 判断一个对象是否是数字。\r\n * @param obj 要判断的对象。\r\n * @return 如果是数字则返回 true，否则返回 false。\r\n * @example isNumber(7) // true\r\n */\r\nexport function isNumber(obj: any) {\r\n    return typeof obj === \"number\" && !isNaN(obj);\r\n}\r\n\r\n/**\r\n * 判断一个数字是否是整数。\r\n * @param num 要判断的数字。\r\n * @return 如果是整数则返回 true，否则返回 false。\r\n * @example isInteger(7) // true\r\n */\r\nexport function isInteger(num: number) {\r\n    return Math.floor(num) === num;\r\n}\r\n\r\n/**\r\n * 确保指定数值在指定区间内。\r\n * @param num 要判断的值。\r\n * @param min 允许的最小值。\r\n * @param max 允许的最大值。\r\n * @return 如果 *num* 超过 *min* 和 *max*，则返回临界值，否则返回 *num*。\r\n * @example limit(1, 2, 6) // 2\r\n */\r\nexport function limit(num: number, min: number, max: number) {\r\n    return Math.min(max, Math.max(min, num));\r\n}\r\n\r\n/**\r\n * 返回指定范围的随机整数值。\r\n * @param min 最小的整数值。\r\n * @param max 最大的整数值。\r\n * @return 返回结果值。其值满足 *min* <= 返回值 < *max*。\r\n * @example random(2, 6)\r\n */\r\nexport function random(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\n/**\r\n * 获取数字的小数位数。\r\n * @return 返回小数位数。。\r\n * @example getPrecision(0) // 0\r\n * @example getPrecision(0.1) // 1\r\n * @example getPrecision(0.01) // 2\r\n */\r\nexport function getPrecision(num: number) {\r\n    const s = num + \"\";\r\n    const d = s.indexOf(\".\") + 1;\r\n    return !d ? 0 : s.length - d;\r\n}\r\n\r\n/**\r\n * 获取数字的整数位数。\r\n * @return 返回整数位数。\r\n * @example getIntegerLength(0) // 1\r\n * @example getIntegerLength(100) // 3\r\n */\r\nexport function getIntegerLength(num: number) {\r\n    return num === 0 ? 1 : Math.floor(Math.log(num) / Math.log(10)) + 1;\r\n}\r\n\r\n/**\r\n * 格式化数字为字符串。\r\n * @param format 格式字符串。\r\n * 格式字符串中的元字符会被替换，支持的元字符有：\r\n *\r\n * 元字符 | 意义      | 示例\r\n * ------|-----------|--------------------\r\n * 0     | 补0       | 000:012, 0.00: 2.00\r\n * #     | 补空      | ###:12, 0.##: 2\r\n * +     | 补正负号  | +0: +0\r\n * .     | 小数点    | 0.00: 0.00\r\n * ,     | 追加逗号  | 0.00: 0.00\r\n *\r\n * @return 返回格式化后的字符串。\r\n * @example format(1, \"000.00\") // 001.00\r\n * @example format(1.2, \"0.00\") // 1.20\r\n * @example format(1.2, \"#.##\") // 1.2\r\n * @example format(1.235, \"#.##\") // 1.24\r\n * @example format(1235, \"###,###\") // 1,235\r\n */\r\nexport function format(num: number, format?: string) {\r\n    if (!format) {\r\n        return num.toString();\r\n    }\r\n\r\n    return format.replace(/(\\+)?([0#,]+|(?=\\.))(\\.[0#]*)?/, (all, sign?: string, integerDights?: string, fractionDights?: string) => {\r\n\r\n        // 处理符号位。\r\n        if (num < 0) {\r\n            sign = \"-\";\r\n            num = -num;\r\n        } else {\r\n            sign = sign || \"\";\r\n        }\r\n\r\n        // 格式化数字。\r\n        const numString = fractionDights ? num.toFixed(fractionDights.length - 1) : num.toString();\r\n        const dot = numString.indexOf(\".\");\r\n        let fractionPart = dot < 0 ? \"\" : numString.slice(dot);\r\n        let integerPart = dot < 0 ? numString : numString.slice(0, dot);\r\n\r\n        // 处理小数部分。\r\n        if (fractionDights) {\r\n            for (let i = fractionDights.length - 1; i > 0; i--) {\r\n                if (fractionDights.charAt(i) === \"#\" && fractionPart.charAt(i) === \"0\") {\r\n                    fractionPart = fractionPart.slice(0, -1);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            if (fractionPart.length === 1) {\r\n                fractionPart = \"\";\r\n            }\r\n        }\r\n\r\n        // 处理整数部分。\r\n        if (integerDights) {\r\n            let comma = integerDights.lastIndexOf(\",\");\r\n            if (comma >= 0) {\r\n                comma = integerDights.length - comma - 1;\r\n                integerDights = integerDights.replace(/,/g, \"\");\r\n            }\r\n            while (integerPart.length < integerDights.length) {\r\n                const char = integerDights.charAt(integerDights.length - integerPart.length - 1);\r\n                if (char === \"#\") {\r\n                    break;\r\n                }\r\n                integerPart = char + integerPart;\r\n            }\r\n            if (comma > 0) {\r\n                for (let i = integerPart.length - comma; i > 0; i -= comma) {\r\n                    integerPart = integerPart.slice(0, i) + \",\" + integerPart.slice(i);\r\n                }\r\n            }\r\n        } else {\r\n            integerPart = \"\";\r\n        }\r\n\r\n        return sign + integerPart + fractionPart;\r\n    });\r\n}\r\n"],"mappings":"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"}