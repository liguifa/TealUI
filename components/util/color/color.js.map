{"version":3,"file":"color.js","sourceRoot":"../../..","sources":["components/util/color/color.ts"],"sourcesContent":["/**\r\n * 表示一个由 RGBA 组成的颜色。\r\n */\r\nexport interface RGBA {\r\n\r\n    /**\r\n     * R 值。取值范围为 0-255。\r\n     */\r\n    r: number;\r\n\r\n    /**\r\n     * G 值。取值范围为 0-255。\r\n     */\r\n    g: number;\r\n\r\n    /**\r\n     * B 值。取值范围为 0-255。\r\n     */\r\n    b: number;\r\n\r\n    /**\r\n     * 透明度。取值范围为 0-1。\r\n     */\r\n    a?: number;\r\n\r\n}\r\n\r\n/**\r\n * 表示一个由 HSLA 组成的颜色。\r\n */\r\nexport interface HSLA {\r\n\r\n    /**\r\n     * 色调。取值范围为 0-360。\r\n     */\r\n    h: number;\r\n\r\n    /**\r\n     * 饱和度。取值范围为 0-1。\r\n     */\r\n    s: number;\r\n\r\n    /**\r\n     * 亮度。取值范围为 0-1。\r\n     */\r\n    l: number;\r\n\r\n    /**\r\n     * 透明度。取值范围为 0-1。\r\n     */\r\n    a?: number;\r\n\r\n}\r\n\r\n/**\r\n * 表示一个颜色。\r\n */\r\nexport type Color = string | RGBA | HSLA;\r\n\r\nexport function format(color: Color, format: \"auto\" | \"hex\" | \"rgba\" | \"hasl\") {\r\n\r\n}\r\n\r\n/**\r\n * 将任意颜色格式转为 RGB 格式。\r\n * @param color 相关的颜色。\r\n * @return 返回包含 RGB 信息的对象。\r\n * @example toRGB(\"#000\") // {r: 0, g: 0, b: 0}\r\n * @example toRGB(\"#ff0000\") // {r: 255, g: 0, b: 0}\r\n * @example toRGB(\"#ff0000ff\") // {r: 255, g: 0, b: 0, a: 1}\r\n * @example toRGB(\"rgb(255,0,0)\") // {r: 255, g: 0, b: 0, a: 1}\r\n * @example toRGB(\"rgba(255,0,0,0.9)\") // {r: 255, g: 0, b: 0, a: 0.9}\r\n * @example toRGB(\"hsl(255,0,0)\") // {r: 255, g: 0, b: 0, a: 0.9}\r\n * @example toRGB(\"hsla(255,0,0,0.9)\") // {r: 255, g: 0, b: 0, a: 0.9}\r\n * @example toRGB({h:255, s: 0, l: 0}) // {r: 255, g: 0, b: 0}\r\n * @example toRGB({h:255, s: 0, l: 0, a: 0}) // {r: 255, g: 0, b: 0}\r\n */\r\nexport function toRGB(value: Color): RGBA {\r\n    if (typeof value === \"string\") {\r\n        const hex = /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?$/.exec(value);\r\n        if (hex) {\r\n            value = {\r\n                r: parseInt(hex[1], 16),\r\n                g: parseInt(hex[2], 16),\r\n                b: parseInt(hex[3], 16),\r\n                a: hex[4] ? parseInt(hex[4], 16) / 255 : undefined\r\n            };\r\n        } else {\r\n            const hexSimple = /^#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])$/.exec(value);\r\n            if (hexSimple) {\r\n                value = {\r\n                    r: parseInt(hexSimple[1] + hexSimple[1], 16),\r\n                    g: parseInt(hexSimple[2] + hexSimple[2], 16),\r\n                    b: parseInt(hexSimple[3] + hexSimple[3], 16)\r\n                };\r\n            } else {\r\n                const rgb = /rgba?\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*([\\d\\.]+%?))?\\)/.exec(value);\r\n                if (rgb) {\r\n                    value = {\r\n                        r: parseInt(rgb[1]),\r\n                        g: parseInt(rgb[2]),\r\n                        b: parseInt(rgb[3]),\r\n                        a: rgb[4] ? parsePercent(rgb[4]) : undefined\r\n                    };\r\n                } else {\r\n                    const hsl = /hsla?\\s*\\(\\s*(\\d+)\\s*,\\s*([\\d\\.]+%?)\\s*,\\s*([\\d\\.]+%?)\\s*(?:,\\s*([\\d\\.]+%?))?\\)/.exec(value);\r\n                    if (hsl) {\r\n                        return toRGB({\r\n                            h: parseInt(hsl[1]),\r\n                            s: parsePercent(hsl[2]),\r\n                            l: parsePercent(hsl[3]),\r\n                            a: hsl[4] ? parsePercent(hsl[4]) : undefined\r\n                        });\r\n                    } else {\r\n                        return {\r\n                            r: 0,\r\n                            g: 0,\r\n                            b: 0\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else if (typeof (value as HSLA).l === \"number\") {\r\n        value = {\r\n            r: hslToRGB(value as HSLA, 1 / 3),\r\n            g: hslToRGB(value as HSLA, 0),\r\n            b: hslToRGB(value as HSLA, -1 / 3),\r\n            a: (value as HSLA).a\r\n        };\r\n    }\r\n    return value as RGBA;\r\n}\r\n\r\nfunction parsePercent(value: string) {\r\n    const val = parseFloat(value);\r\n    return /%$/.test(value) ? val / 100 : val;\r\n}\r\n\r\nfunction hslToRGB(value: HSLA, cv: number) {\r\n    const h = value.h;\r\n    const s = parseFloat((value.s / 255).toFixed(10));\r\n    const l = parseFloat((value.l / 255).toFixed(10));\r\n    let t1, t2, color;\r\n    if (s == 0) {\r\n        return l;\r\n    } else {\r\n        if (l < 0.5) {\r\n            t2 = l * (1.0 + s);\r\n        } else {\r\n            t2 = l + s - l * s;\r\n        }\r\n        t1 = 2.0 * l - t2;\r\n    }\r\n    let t3 = parseFloat((h / 360 + cv).toFixed(10));\r\n    if (t3 < 0) {\r\n        t3 += 1.0;\r\n    } else if (t3 > 1) {\r\n        t3 -= 1.0;\r\n    }\r\n    if (t3 * 6.0 < 1) {\r\n        color = t1 + (t2 - t1) * 6.0 * t3;\r\n    } else if (2.0 * t3 < 1) {\r\n        color = t2;\r\n    } else if (3.0 * t3 < 2) {\r\n        color = t1 + (t2 - t1) * ((2.0 / 3.0) - t3) * 6.0;\r\n    } else {\r\n        color = t1;\r\n    }\r\n    color *= 255;\r\n    return Math.floor(color);\r\n}\r\n\r\n/**\r\n * 将任意颜色转为 HSL 格式。\r\n * @param color 要处理的颜色。\r\n * @return 返回包含 HSL 信息的对象。\r\n * @example toHSL(\"#000\") // {h: 0, s: 0, l: 0}\r\n * @example toHSL(\"#ff0000\") // {h: 0, s: 255, l: 128}\r\n * @example toHSL(\"#ff0000ff\") // {h: 0, s: 255, l: 128, a: 1}\r\n * @example toHSL(\"rgb(255,0,0)\") // {h: 0, s: 255, l: 128}\r\n * @example toHSL(\"rgba(255,0,0,1)\") // {h: 0, s: 255, l: 128, a: 1}\r\n * @example toHSL(\"hsl(0, 255, 128)\") // {h: 0, s: 255, l: 128}\r\n * @example toHSL(\"hsla(0, 255, 128, 1)\") // {h: 0, s: 255, l: 128, a: 1}\r\n * @example toHSL({r:255, g: 0, b: 0}) // {h: 0, s: 255, l: 128}\r\n * @example toHSL({r:255, g: 0, b: 0, a: 1}) // {h: 0, s: 255, l: 128, a: 1}\r\n */\r\nexport function toHSL(value: Color) {\r\n    if (typeof value === \"string\") {\r\n        const hex = /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?$/.exec(value);\r\n        if (hex) {\r\n            value = {\r\n                r: parseInt(hex[1], 16),\r\n                g: parseInt(hex[2], 16),\r\n                b: parseInt(hex[3], 16),\r\n                a: hex[4] ? parseInt(hex[4], 16) / 255 : undefined\r\n            };\r\n        } else {\r\n            const hexSimple = /^#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])$/.exec(value);\r\n            if (hexSimple) {\r\n                value = {\r\n                    r: parseInt(hexSimple[1] + hexSimple[1], 16),\r\n                    g: parseInt(hexSimple[2] + hexSimple[2], 16),\r\n                    b: parseInt(hexSimple[3] + hexSimple[3], 16)\r\n                };\r\n            } else {\r\n                const rgb = /rgba?\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*([\\d\\.]+%?))?\\)/.exec(value);\r\n                if (rgb) {\r\n                    value = {\r\n                        r: parseInt(rgb[1]),\r\n                        g: parseInt(rgb[2]),\r\n                        b: parseInt(rgb[3]),\r\n                        a: rgb[4] ? parsePercent(rgb[4]) : undefined\r\n                    };\r\n                } else {\r\n                    const hsl = /hsla?\\s*\\(\\s*(\\d+)\\s*,\\s*([\\d\\.]+%?)\\s*,\\s*([\\d\\.]+%?)\\s*(?:,\\s*([\\d\\.]+%?))?\\)/.exec(value);\r\n                    if (hsl) {\r\n                        return toRGB({\r\n                            h: parseInt(hsl[1]),\r\n                            s: parsePercent(hsl[2]),\r\n                            l: parsePercent(hsl[3]),\r\n                            a: hsl[4] ? parsePercent(hsl[4]) : undefined\r\n                        });\r\n                    } else {\r\n                        return {\r\n                            r: 0,\r\n                            g: 0,\r\n                            b: 0\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else if (typeof (value as HSLA).l === \"number\") {\r\n        value = {\r\n            r: hslToRGB(value as HSLA, 1 / 3),\r\n            g: hslToRGB(value as HSLA, 0),\r\n            b: hslToRGB(value as HSLA, -1 / 3),\r\n            a: (value as HSLA).a\r\n        };\r\n    }\r\n    return value as RGBA;\r\n}\r\n\r\nfunction convert<T extends Color>(value: HSLA, type: T) {\r\n\r\n}\r\n\r\n/**\r\n * 调整当前颜色的饱和度。\r\n * @param color 要处理的颜色。\r\n * @param value 要增加的数值。范围应在 0-1 之间。\r\n * @return 返回新颜色。\r\n * @example saturate(\"#fff\", 0.5)\r\n */\r\nexport function saturate<T extends Color>(color: T, value: number) {\r\n    const hsl = toHSL(color);\r\n    hsl.s += value;\r\n    return convert(hsl, type);\r\n}\r\n\r\n/**\r\n * 调整当前颜色的暗度。\r\n * @param color 要处理的颜色。\r\n * @param value 要减少的数值。范围应在 0-1 之间。\r\n * @return 返回新颜色。\r\n * @example darken(\"#fff\", 0.5)\r\n */\r\nexport function darken<T extends Color>(color: T, value: number) {\r\n    const hsl = toHSL(color);\r\n    hsl.l -= value;\r\n    return convert(hsl, type);\r\n}\r\n\r\n/**\r\n * 调整当前颜色的暗度。\r\n * @param color 要处理的颜色。\r\n * @param value 要增加的数值。范围应在 0-1 之间。\r\n * @return 返回新颜色。\r\n * @example darken(\"#fff\", 0.5)\r\n */\r\nexport function lighten<T extends Color>(color: T, value: number) {\r\n    const hsl = toHSL(color);\r\n    hsl.l += value;\r\n    return convert(hsl, type);\r\n}\r\n\r\n/**\r\n * 调整当前颜色的透明度。\r\n * @param color 要处理的颜色。\r\n * @param {Number} value 调整的幅度。值在 0 到 1 之间。\r\n * @return {Color} 返回新颜色。\r\n * @example new Color(\"#fff\").fadeBy(0.5) \r\n */\r\nexport function fadeBy(value) {\r\n    return this.fadeTo(this.a + value);\r\n}\r\n\r\n/**\r\n * 设置当前颜色的透明度。\r\n * @param {Number} value 调整的幅度。值在 0 到 1 之间。\r\n * @return {Color} 返回新颜色。 \r\n * @example new Color(\"#fff\").fadeTo(0.5) \r\n */\r\nexport function fadeTo(value) {\r\n    var me = this;\r\n    return new Color(me.r, me.g, me.b, value);\r\n}\r\n\r\n/**\r\n * 调整当前颜色的色相。\r\n * @param {Number} value 调整的幅度。值在 0 到 360 之间。\r\n * @return {Color} 返回新颜色。 \r\n * @example new Color(\"#fff\").spin(100) \r\n */\r\nexport function spin(value) {\r\n    var hsl = this.toHSL();\r\n    hsl.h += value;\r\n    return Color.fromHSL(hsl);\r\n}\r\n\r\n/**\r\n * 叠加当前颜色和目标颜色的值。\r\n * @param {Color} color 另一个颜色值。\r\n * @param {Number} [weight=0.5] 当前颜色叠加的透明度。\r\n * @return {Color} 返回叠加后的新颜色。 \r\n * @example new Color(\"#0f0\").mix(new Color(\"#f00\")) \r\n */\r\nexport function mix(color, weight) {\r\n    var me = this;\r\n    if (weight == null) {\r\n        weight = 0.5;\r\n    }\r\n    var w = weight * 2 - 1;\r\n    var a = me.a - color.a;\r\n\r\n    var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n    var w2 = 1 - w1;\r\n\r\n    return new Color(me.r * w1 + color.r * w2, me.g * w1 + color.g * w2, me.b * w1 + color.b * w2, me.a * weight + color.a * (1 - weight));\r\n}\r\n\r\n/**\r\n * 获取当前颜色的亮度。\r\n * @return {Number} 返回亮度。值在 0-1 之间。 \r\n * @example new Color(\"#fff\").luma() \r\n */\r\nexport function luma() {\r\n    var me = this;\r\n    var r = me.r / 255;\r\n    var g = me.g / 255;\r\n    var b = me.b / 255;\r\n\r\n    r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n    g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n    b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n\r\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n}\r\n\r\n/**\r\n * 计算当前颜色的最合理反色。\r\n * @param {Color} [dark=new Color(0, 0, 0)] 深色使用色。\r\n * @param {Color} [light=new Color(255, 255, 255)] 浅色使用色。\r\n * @param {Number} [threshold=0.43] 区分度阀值。\r\n * @return {Color} 返回 @dark 和 @light 中能用于区分的颜色。\r\n * @example new Color(\"#fff\").contrast() \r\n */\r\nexport function contrast(dark, light, threshold) {\r\n\r\n    if (!dark) {\r\n        dark = new Color(0, 0, 0);\r\n    }\r\n    if (!light) {\r\n        light = new Color(255, 255, 255);\r\n    }\r\n    if (threshold == null) {\r\n        threshold = 0.43;\r\n    }\r\n\r\n    // 确保明暗颜色值。\r\n    if (dark.luma() > light.luma()) {\r\n        var t = light;\r\n        light = dark;\r\n        dark = t;\r\n    }\r\n\r\n    return this.luma() < threshold ? light : dark;\r\n}\r\n\r\n/**\r\n * 获取当前颜色的反色。\r\n * @return {Color} 返回新颜色。\r\n * @example new Color(\"#fff\").invert()\r\n */\r\nexport function invert() {\r\n    var me = this;\r\n    return new Color(255 - me.r, 255 - me.g, 255 - me.b, me.a);\r\n}\r\n\r\n/**\r\n * 表示一个颜色对象。\r\n * @param {Number} [r] 颜色的 R 值。\r\n * @param {Number} [g] 颜色的 G 值。\r\n * @param {Number} [b] 颜色的 B 值。\r\n * @param {String} [color] 颜色字符串。支持的字符串颜色格式有：\r\n * - `\"#FFFFFF\"`\r\n * - `\"#FFFFFFFF\"`\r\n * - `\"#FFF\"`\r\n * - `\"rgb(255, 255, 255)\"`\r\n * - `\"rgba(255, 255, 255, .7)\"`\r\n * - `\"hsl(360, 100%, 100%)\"`\r\n * - `\"hsla(360, 100%, 100%, .7)\"`\r\n * - `\"transparent\"`/`\"none\"`/其它内置颜色名\r\n * @param {Number} [a=1.0] \r\n * @class\r\n * @example \r\n * new Color(255, 255, 255, 0.5)\r\n * \r\n * new Color(\"#FFFFFF\", 0.5)\r\n * \r\n * new Color(\"rbga(255, 255, 255, 0.5)\")\r\n */\r\nfunction Color(r, g, b, a) {\r\n\r\n    if (arguments.length < 3) {\r\n\r\n        typeof console === \"object\" && console.assert(typeof r === \"string\", \"new Color(rgb: 必须是字符串, [a])\");\r\n\r\n        // 转换系统内置颜色。\r\n        r = Color.colors[r] || r;\r\n\r\n    }\r\n\r\n    var me = this;\r\n    me.r = Math.max(0, Math.min(256, r)) || 0;\r\n    me.g = Math.max(0, Math.min(256, g)) || 0;\r\n    me.b = Math.max(0, Math.min(256, b)) || 0;\r\n    me.a = a != null ? Math.max(0, Math.min(1, a)) || 0 : 1;\r\n}\r\n\r\nColor.prototype = {\r\n    constructor: Color,\r\n\r\n    /**\r\n     * 获取当前颜色的 HSL 格式。\r\n     * @return {Object} 返回一个对象：\r\n     * * @param {Number} h 当前颜色的色调。\r\n     * * @param {Number} s 当前颜色的饱和度。\r\n     * * @param {Number} l 当前颜色的亮度。\r\n     * @example new Color(\"#fff\").toHSL()\r\n     */\r\n    toHSL: function () {\r\n        var me = this;\r\n        var r = me.r / 255;\r\n        var g = me.g / 255;\r\n        var b = me.b / 255;\r\n\r\n        var max = Math.max(r, g, b);\r\n        var min = Math.min(r, g, b);\r\n        var h;\r\n        var s;\r\n        var l = (max + min) / 2;\r\n        var d = max - min;\r\n\r\n        if (d) {\r\n            h = (max === r ? (g - b) / d + (g < b ? 6 : 0) :\r\n                max === g ? (b - r) / d + 2 :\r\n                    (r - g) / d + 4) * 60;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        } else {\r\n            h = s = 0;\r\n        }\r\n        return { h: h, s: s, l: l, v: max, a: me.a };\r\n    },\r\n\r\n    /**\r\n     * 获取当前颜色的 HSV 格式。\r\n     * @return {Object} 返回一个对象：\r\n     * * @param {Number} h 当前颜色的色调。\r\n     * * @param {Number} s 当前颜色的饱和度。\r\n     * * @param {Number} l 当前颜色的亮度。\r\n     * @example new Color(\"#fff\").toHSV()\r\n     */\r\n    toHSV: function () {\r\n        var me = this;\r\n        var r = me.r / 255;\r\n        var g = me.g / 255;\r\n        var b = me.b / 255;\r\n\r\n        var max = Math.max(r, g, b);\r\n        var min = Math.min(r, g, b);\r\n\r\n        var d = max - min;\r\n\r\n        return {\r\n            h: d ? (max === r ? (g - b) / d + (g < b ? 6 : 0) :\r\n                max === g ? (b - r) / d + 2 :\r\n                    (r - g) / d + 4) * 60 : 0,\r\n            s: max ? d / max : 0,\r\n            v: max,\r\n            a: me.a\r\n        };\r\n    },\r\n\r\n    /**\r\n     * 获取当前颜色的 RGB 格式。\r\n     * @return {Object} 返回一个对象：\r\n     * * @param {Number} r 当前颜色的 R 值。\r\n     * * @param {Number} g 当前颜色的 G 值。\r\n     * * @param {Number} b 当前颜色的 B 值。\r\n     * @example new Color(\"#fff\").toRGB()\r\n     */\r\n    toRGB: function () {\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 获取当前颜色的哈希值表示形式。\r\n     * @return {String} 返回哈希值表示形式。如 \"#FFFFFF\"。\r\n     * @example new Color(\"#fff\").toHex()\r\n     */\r\n    toHex: function () {\r\n        var me = this;\r\n        function toHex(val) {\r\n            val = Math.round(val).toString(16);\r\n            return val.length < 2 ? '0' + val : val;\r\n        }\r\n        return '#' + (me.a < 1 ? toHex(me.a) : \"\") + toHex(me.r) + toHex(me.g) + toHex(me.b);\r\n    },\r\n\r\n    /**\r\n     * 获取当前颜色的整数表示形式。\r\n     * @return {Number} 返回整数表示形式。\r\n     * @example new Color(\"#fff\").toInt()\r\n     */\r\n    toInt: function () {\r\n        var me = this;\r\n        return me.r << 16 | me.g << 8 | me.b | me.a << 24;\r\n    },\r\n\r\n    /**\r\n     * 获取当前颜色的字符串形式。\r\n     * @return {String} 返回可以直接在 CSS 代码中使用的字符串形式。\r\n     * @example new Color(\"#fff\").toString()\r\n     */\r\n    toString: function () {\r\n        var me = this;\r\n        return me.a < 1 ? \"rgba(\" + me.r + \",\" + me.g + \",\" + me.b + \",\" + me.a + \")\" : me.toHex();\r\n    },\r\n\r\n};\r\n\r\n/**\r\n * 从已有的 HSL 格式颜色值创造新的颜色值。\r\n * @param {Number} [h] 当前颜色的色调。\r\n * @param {Number} [s] 当前颜色的饱和度。\r\n * @param {Number} [l] 当前颜色的亮度。\r\n * @param {Object} [hsl] 当前颜色的 HSL 对象。\r\n * @param {Number} [a=1] 当前颜色的透明度。\r\n * @return {Color} 返回新颜色对象。 \r\n * @example \r\n * Color.fromHSL(0, 0, 1, 1)\r\n * Color.fromHSL({h: 0, s:0, l:1, a:1})\r\n */\r\nColor.fromHSL = function (h, s, l, a) {\r\n\r\n};\r\n"],"mappings":"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"}