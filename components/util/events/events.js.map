{"version":3,"file":"events.js","sourceRoot":"../../..","sources":["components/util/events/events.ts"],"sourcesContent":["/**\r\n * 表示一个事件分发器。\r\n */\r\nexport default class EventEmitter {\r\n\r\n    /**\r\n     * 存储所有事件。\r\n     */\r\n    private _events: { [eventName: string]: Function | Function[] };\r\n\r\n    /**\r\n     * 添加一个事件监听器。\r\n     * @param eventName 要添加的事件名。\r\n     * @param eventListener 要添加的事件监听器。\r\n     * @example new EventEmitter().on(\"click\", function (e) {  });\r\n     */\r\n    on(eventName: string, eventListener: Function) {\r\n        const events = this._events || (this._events = { __proto__: null! });\r\n        const eventListeners = events[eventName];\r\n        if (Array.isArray(eventListeners)) {\r\n            eventListeners.push(eventListener);\r\n        } else {\r\n            events[eventName] = eventListener;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 删除指定或所有的事件监听器。\r\n     * @param eventName 要删除的事件名。如果不传递此参数，则删除所有事件监听器。\r\n     * @param eventListener 要删除的事件监听器。如果不传递此参数，则删除指定事件的所有监听器。如果同一个事件被多次添加，则只删除第一个。\r\n     * @example\r\n     * var fn =  function () {}; // 必须保存函数的引用才能删除。\r\n     * var ee = new EventEmitter();\r\n     * ee.on(\"click\", fn); // 绑定一个 click 事件。\r\n     * ee.off(\"click\", fn); // 删除一个 click 事件。\r\n     */\r\n    off(eventName?: string, eventListener?: Function) {\r\n        const events = this._events;\r\n        if (events) {\r\n            if (eventName) {\r\n                const eventListeners = events[eventName];\r\n                if (eventListeners) {\r\n                    if (eventListener) {\r\n                        if (Array.isArray(eventListeners)) {\r\n                            const index = eventListeners.indexOf(eventListener);\r\n                            if (index >= 0) {\r\n                                eventListeners.splice(index, 1);\r\n                                eventListener = eventListeners.length as any;\r\n                            }\r\n                        } else if (eventListeners === eventListener) {\r\n                            eventListener = undefined;\r\n                        }\r\n                    }\r\n                    if (!eventListener) {\r\n                        delete events[eventName];\r\n                    }\r\n                }\r\n            } else {\r\n                delete this._events;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 触发一个事件。\r\n     * @param eventName 要触发的事件名。\r\n     * @param eventArgs 传递给监听器的所有参数。\r\n     * @return 如果事件被阻止则返回 false，否则返回 true。\r\n     * @example\r\n     * var ee = new EventEmitter(); // 创建一个实例。\r\n     * ee.on(\"click\", function (e) { console.log(\"haha\"); }); // 绑定一个 click 事件。\r\n     * ee.emit(\"click\"); // 手动触发 click。\r\n     */\r\n    emit(eventName: string, ...eventArgs: any[]) {\r\n        let t: any = this._events;\r\n        if (t && (t = t[eventName])) {\r\n            if (typeof t === \"function\") {\r\n                t.apply(this, eventArgs);\r\n            } else {\r\n                for (const eventListener of t.slice(0)) {\r\n                    eventListener.apply(this, eventArgs);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n"],"mappings":";;IAAA;;OAEG;IACH;QAOI;;;;;WAKG;QACH,EAAE,CAAC,SAAiB,EAAE,aAAuB;YACzC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,SAAS,EAAE,IAAK,EAAE,CAAC,CAAC;YACrE,MAAM,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;YACzC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBAChC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACvC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,SAAS,CAAC,GAAG,aAAa,CAAC;YACtC,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED;;;;;;;;;WASG;QACH,GAAG,CAAC,SAAkB,EAAE,aAAwB;YAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBACZ,MAAM,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;oBACzC,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;wBACjB,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;4BAChB,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gCAChC,MAAM,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;gCACpD,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;oCACb,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oCAChC,aAAa,GAAG,cAAc,CAAC,MAAa,CAAC;gCACjD,CAAC;4BACL,CAAC;4BAAC,IAAI,CAAC,EAAE,CAAC,CAAC,cAAc,KAAK,aAAa,CAAC,CAAC,CAAC;gCAC1C,aAAa,GAAG,SAAS,CAAC;4BAC9B,CAAC;wBACL,CAAC;wBACD,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;4BACjB,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC;wBAC7B,CAAC;oBACL,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,OAAO,IAAI,CAAC,OAAO,CAAC;gBACxB,CAAC;YACL,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED;;;;;;;;;WASG;QACH,IAAI,CAAC,SAAiB,EAAE,GAAG,SAAgB;YACvC,IAAI,CAAC,GAAQ,IAAI,CAAC,OAAO,CAAC;YAC1B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;oBAC1B,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;gBAC7B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,GAAG,CAAC,CAAC,MAAM,aAAa,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;oBACzC,CAAC;gBACL,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;KAEJ;IAvFD,+BAuFC"}