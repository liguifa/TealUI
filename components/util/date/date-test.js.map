{"version":3,"file":"date-test.js","sourceRoot":"../../..","sources":["components/util/date/date-test.ts"],"sourcesContent":["import * as assert from \"assert\";\r\nimport * as date from \"./date\";\r\n\r\nexport function formatTest() {\r\n    assert.strictEqual(date.format(new Date(\"2016/01/01 00:00:00\")), \"2016/01/01 00:00:00\");\r\n    assert.strictEqual(date.format(new Date(\"2016/01/01 00:00:00\"), \"yyyyMMdd\"), \"20160101\");\r\n}\r\n\r\nexport function parseTest() {\r\n    assert.strictEqual(+date.parse(\"2014-1-1\"), +new Date(\"2014/1/1\"));\r\n    assert.strictEqual(+date.parse(\"20140101\"), +new Date(\"2014/1/1\"));\r\n    assert.strictEqual(+date.parse(\"2014年1月1日\", \"yyyy年MM月dd日\"), +new Date(\"2014/1/1\"));\r\n}\r\n\r\nexport function cloneTest() {\r\n    assert.strictEqual(+date.clone(new Date(\"2014/1/1\")), +new Date(\"2014/1/1\"));\r\n}\r\n\r\nexport function addYearTest() {\r\n    assert.strictEqual(+date.addYear(new Date(\"2014/1/1\"), 1), +new Date(\"2015/1/1\"));\r\n}\r\n\r\nexport function addMonthTest() {\r\n    assert.strictEqual(+date.addMonth(new Date(\"2014/1/1\"), 1), +new Date(\"2014/2/1\"));\r\n}\r\n\r\nexport function addWeekTest() {\r\n    assert.strictEqual(+date.addWeek(new Date(\"2014/1/1\"), 1), +new Date(\"2014/1/8\"));\r\n}\r\n\r\nexport function addDayTest() {\r\n    assert.strictEqual(+date.addDay(new Date(\"2014/1/1\"), 1), +new Date(\"2014/1/2\"));\r\n}\r\n\r\nexport function addHoursTest() {\r\n    assert.strictEqual(+date.addHours(new Date(\"2014/1/1\"), 1), +new Date(\"2014/1/1 01:00:00\"));\r\n}\r\n\r\nexport function addMinutesTest() {\r\n    assert.strictEqual(+date.addMinutes(new Date(\"2014/1/1\"), 1), +new Date(\"2014/1/1 00:01:00\"));\r\n}\r\n\r\nexport function addSecondsTest() {\r\n    assert.strictEqual(+date.addSeconds(new Date(\"2014/1/1\"), 1), +new Date(\"2014/1/1 00:00:01\"));\r\n}\r\n\r\nexport function addMillisecondsTest() {\r\n    assert.strictEqual(+date.addMilliseconds(new Date(\"2014/1/1\"), 1000), +new Date(\"2014/1/1 00:00:01\"));\r\n}\r\n\r\nexport function toDayTest() {\r\n    assert.strictEqual(+date.toDay(new Date(\"2014/1/1 12:00:00\")), +new Date(\"2014/1/1\"));\r\n}\r\n\r\nexport function dayLeftTest() {\r\n    assert.strictEqual(date.dayLeft(new Date(\"2014/12/3\"), 12, 5), 2);\r\n    assert.strictEqual(date.dayLeft(new Date(\"2014/12/4\"), 12, 5), 1);\r\n    assert.strictEqual(date.dayLeft(new Date(\"2014/12/5\"), 12, 5), 0);\r\n    assert.strictEqual(date.dayLeft(new Date(\"2014/12/6\"), 12, 5), 364);\r\n}\r\n\r\nexport function compareDayTest() {\r\n    assert.strictEqual(date.compareDay(new Date(2014, 1, 1), new Date(2014, 1, 2)), 1);\r\n}\r\n\r\nexport function isLeapYearTest() {\r\n    assert.strictEqual(date.isLeapYear(2004), true);\r\n    assert.strictEqual(date.isLeapYear(2000), true);\r\n    assert.strictEqual(date.isLeapYear(2100), false);\r\n    assert.strictEqual(date.isLeapYear(2002), false);\r\n}\r\n\r\nexport function isValidTest() {\r\n    assert.strictEqual(date.isValid(2004, 2, 29), true);\r\n}\r\n\r\nexport function getDayInMonthTest() {\r\n    assert.strictEqual(date.getDayInMonth(2001, 1), 31);\r\n    assert.strictEqual(date.getDayInMonth(2001, 2), 28);\r\n    assert.strictEqual(date.getDayInMonth(2004, 2), 29);\r\n}\r\n\r\nexport function getWeekTest() {\r\n    assert.strictEqual(date.getWeek(new Date(\"2014/1/15\")), 3);\r\n    assert.strictEqual(date.getWeek(new Date(\"2014/1/15\"), new Date(\"2014/1/1\")), 3);\r\n}\r\n\r\nexport function getTimezoneTest() {\r\n    assert.strictEqual(date.getTimezone(new Date(\"Fri Feb 17 2017 16:54:41 GMT+0800\")), \"GMT\");\r\n}\r\n\r\nexport function toFirstDayTest() {\r\n    assert.strictEqual(+date.toFirstDay(new Date(\"2016/2/15\")), +new Date(\"2016/2/1\"));\r\n}\r\n\r\nexport function toLastDayTest() {\r\n    assert.strictEqual(+date.toLastDay(new Date(\"2016/2/15\")), +new Date(\"2016/2/29\"));\r\n}"],"mappings":"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"}