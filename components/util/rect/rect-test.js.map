{"version":3,"file":"rect-test.js","sourceRoot":"../../..","sources":["components/util/rect/rect-test.ts"],"sourcesContent":["import * as assert from \"assert\";\r\nimport * as drawing from \"./rect\";\r\n\r\nexport function offsetRectTest() {\r\n    assert.deepEqual(drawing.offsetRect({ x: 0, y: 0, width: 10, height: 10 }, { x: 10, y: 20 }), { x: 10, y: 20, width: 10, height: 10 });\r\n}\r\n\r\nexport function inRectTest() {\r\n    assert.deepEqual(drawing.inRect(\r\n        { x: 0, y: 0, width: 10, height: 10 },\r\n        { x: 20, y: 20 }),\r\n        false\r\n    );\r\n    assert.deepEqual(drawing.inRect(\r\n        { x: 0, y: 0, width: 10, height: 10 },\r\n        { x: 5, y: 5 }),\r\n        true\r\n    );\r\n    assert.deepEqual(drawing.inRect(\r\n        { x: 0, y: 0, width: 10, height: 10 },\r\n        { x: 0, y: 0 }),\r\n        true\r\n    );\r\n}\r\n\r\nexport function onRectTest() {\r\n    assert.deepEqual(drawing.onRect(\r\n        { x: 0, y: 0, width: 10, height: 10 },\r\n        { x: 20, y: 20 }),\r\n        false\r\n    );\r\n    assert.deepEqual(drawing.onRect(\r\n        { x: 0, y: 0, width: 10, height: 10 },\r\n        { x: 5, y: 5 }),\r\n        false\r\n    );\r\n    assert.deepEqual(drawing.onRect(\r\n        { x: 0, y: 0, width: 10, height: 10 },\r\n        { x: 0, y: 0 }),\r\n        true\r\n    );\r\n    assert.deepEqual(drawing.onRect(\r\n        { x: 0, y: 0, width: 10, height: 10 },\r\n        { x: 0, y: 3 }),\r\n        true\r\n    );\r\n    assert.deepEqual(drawing.onRect(\r\n        { x: 0, y: 0, width: 10, height: 10 },\r\n        { x: 0, y: 22 }),\r\n        false\r\n    );\r\n}\r\n\r\nexport function intersectRectTest() {\r\n    assert.deepEqual(drawing.intersectRect(\r\n        { x: 0, y: 0, width: 10, height: 10 }, { x: 5, y: 5, width: 10, height: 10 }),\r\n        { x: 5, y: 5, width: 5, height: 5 }\r\n    );\r\n    assert.deepEqual(drawing.intersectRect(\r\n        { x: 0, y: 0, width: 10, height: 10 }, { x: 11, y: 11, width: 10, height: 10 }),\r\n        { x: 0, y: 0, width: 0, height: 0 }\r\n    );\r\n}\r\n\r\nexport function unionRectTest() {\r\n    assert.deepEqual(drawing.unionRect(\r\n        { x: 0, y: 0, width: 10, height: 10 }, { x: 5, y: 5, width: 10, height: 10 }),\r\n        { x: 0, y: 0, width: 15, height: 15 }\r\n    );\r\n    assert.deepEqual(drawing.unionRect(\r\n        { x: 0, y: 0, width: 10, height: 10 }, { x: 5, y: 5, width: 2, height: 2 }),\r\n        { x: 0, y: 0, width: 10, height: 10 }\r\n    );\r\n    assert.deepEqual(drawing.unionRect(\r\n        { x: 0, y: 0, width: 10, height: 10 }, { x: 15, y: 15, width: 10, height: 10 }),\r\n        { x: 0, y: 0, width: 25, height: 25 }\r\n    );\r\n}\r\n\r\nexport function inCircleTest() {\r\n    assert.deepEqual(drawing.inCircle(\r\n        { x: 2, y: 2, r: 1 }, { x: 2, y: 2 }),\r\n        true\r\n    );\r\n    assert.deepEqual(drawing.inCircle(\r\n        { x: 2, y: 2, r: 1 }, { x: 3, y: 2 }),\r\n        true\r\n    );\r\n    assert.deepEqual(drawing.inCircle(\r\n        { x: 2, y: 2, r: 1 }, { x: 4, y: 2 }),\r\n        false\r\n    );\r\n    assert.deepEqual(drawing.inCircle(\r\n        { x: 2, y: 2, r: 1 }, { x: 3, y: 3 }),\r\n        false\r\n    );\r\n}"],"mappings":"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"}