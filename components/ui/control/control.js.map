{"version":3,"file":"control.js","sourceRoot":"../../..","sources":["components/ui/control/control.tsx"],"sourcesContent":["/// <reference path=\"jsx.d.ts\" />\r\nimport * as dom from \"ux/dom\";\r\nimport nextTick from \"ux/nextTick\";\r\n\r\n/**\r\n * 表示一个控件。\r\n */\r\nexport default class Control {\r\n\r\n    /**\r\n     * 获取当前控件的状态。\r\n     */\r\n    readyState: ControlState;\r\n\r\n    /**\r\n     * 存储关联的元素。\r\n     */\r\n    private _elem: HTMLElement;\r\n\r\n    /**\r\n     * 关联的元素。\r\n     */\r\n    get elem() {\r\n        if (this.readyState !== ControlState.rendered) {\r\n            this.update();\r\n        }\r\n        return this._elem;\r\n    }\r\n    set elem(value) {\r\n        this.readyState = ControlState.rendered;\r\n        const oldElem = this._elem;\r\n        if (value != oldElem) {\r\n            if (oldElem) {\r\n                this.uninit();\r\n                const parent = oldElem.parentNode;\r\n                if (parent) {\r\n                    if (value) {\r\n                        parent.replaceChild(value, oldElem);\r\n                    } else {\r\n                        parent.removeChild(oldElem);\r\n                    }\r\n                }\r\n                delete (oldElem as any as JSX.ElementExtension).__control__;\r\n            }\r\n            this._elem = value;\r\n            if (value) {\r\n                (value as any as JSX.ElementExtension).__control__ = (value as any as JSX.ElementExtension).__control__ || this;\r\n                this.init();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当被子类重写时负责在关联元素后初始化当前控件。\r\n     */\r\n    protected init() { }\r\n\r\n    /**\r\n     * 当被子类重写时负责在元素被取消关联前取消初始化当前控件。\r\n     */\r\n    protected uninit() { }\r\n\r\n    /**\r\n     * 获取当前控件关联的虚拟节点。\r\n     */\r\n    protected vNode: VNode | null;\r\n\r\n    /**\r\n     * 重新渲染当前控件。\r\n     */\r\n    update() {\r\n        if (this.readyState !== ControlState.rendering) {\r\n            this.readyState = ControlState.rendering;\r\n            const oldVNode = this.vNode;\r\n            const newVNode = this.vNode = this.render() || VNode.create(null, \"\");\r\n            VNode.sync(newVNode, oldVNode);\r\n            const result = newVNode.result as HTMLElement | Control;\r\n            this.elem = result instanceof Control ? result.elem : result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当被子类重写时负责返回当前控件的虚拟节点。\r\n     * @return 返回表示当前控件内容的虚拟节点。如果当前控件不渲染任何内容则返回 null。\r\n     */\r\n    protected render(): VNode | null {\r\n        return <div />;\r\n    }\r\n\r\n    /**\r\n     * 使当前控件无效并在下一帧重新渲染。\r\n     */\r\n    invalidate() {\r\n        if (this.readyState === ControlState.rendered) {\r\n            this.readyState = ControlState.invalidated;\r\n            nextTick(() => {\r\n                if (this.readyState === ControlState.invalidated) {\r\n                    this.update();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 如果当前控件是一个普通容器则返回用于包含子节点的根元素。\r\n     */\r\n    body: HTMLElement | null;\r\n\r\n    /**\r\n     * 内部子节点。\r\n     */\r\n    get children() {\r\n        return data(this).children as VNode[];\r\n    }\r\n    set children(value) {\r\n        data(this).children = value;\r\n\r\n        const body = this.body;\r\n        if (body) {\r\n            body.innerHTML = \"\";\r\n            value.forEach(child => {\r\n                render(body, child);\r\n            });\r\n        } else {\r\n            this.update();\r\n        }\r\n        this.layout();\r\n    }\r\n\r\n    /**\r\n     * 重新布局当前控件。\r\n     */\r\n    layout() { }\r\n\r\n    /**\r\n     * 将当前控件渲染到指定的父控件或节点。\r\n     * @param parent 要渲染的目标控件或节点。如果为 null 则移除当前控件。\r\n     * @param refChild 在指定的子控件或节点前添加，如果为空则添加到末尾。\r\n     */\r\n    renderTo(parent: Control | Node | null, refChild?: Control | Node | null) {\r\n        if (parent) {\r\n            if (this.elem) {\r\n                if (parent instanceof Control) {\r\n                    parent = parent.body || parent.elem;\r\n                }\r\n                if (refChild) {\r\n                    parent.insertBefore(this.elem, refChild instanceof Control ? refChild.elem : refChild);\r\n                } else {\r\n                    parent.appendChild(this.elem);\r\n                }\r\n            }\r\n        } else if (this._elem && this._elem.parentNode) {\r\n            this._elem.parentNode.removeChild(this._elem);\r\n        }\r\n        this.layout();\r\n    }\r\n\r\n    /**\r\n     * 在当前控件查找指定的子控件或节点。\r\n     * @param selector 要查找的 CSS 选择器。如果为空则返回根控件或节点。\r\n     * @return 返回子控件或节点。如果找不到则返回 null。\r\n     */\r\n    find(selector: string) {\r\n        let elem = this.elem as HTMLElement | null;\r\n        if (selector) {\r\n            elem = elem && dom.find(elem, selector);\r\n            return elem && (elem as any as JSX.ElementExtension).__control__ || elem;\r\n        }\r\n        return this.vNode ? this.vNode.result as HTMLElement | Control : elem;\r\n    }\r\n\r\n    /**\r\n     * 在当前控件查找匹配的所有子控件或节点。\r\n     * @param selector 要查找的 CSS 选择器。如果为空则返回根控件或节点。\r\n     * @return 返回子控件或节点列表。\r\n     */\r\n    query(selector: string) {\r\n        if (selector) {\r\n            return this.elem ? dom.query(this.elem, selector).map(elem => (elem as any as JSX.ElementExtension).__control__ || elem) : [];\r\n        }\r\n        const root = this.find(selector);\r\n        return root ? [root] : [];\r\n    }\r\n\r\n    /**\r\n     * 使用 JSX 语法定义控件时支持的属性。\r\n     */\r\n    private \"__props__\": Partial<this>;\r\n\r\n    /**\r\n     * 渐变的持续毫秒数。如果为 0 则不使用渐变。\r\n     */\r\n    duration: number;\r\n\r\n    /**\r\n     * 是否隐藏。\r\n     */\r\n    @bind(\"\", \"hidden\") hidden: boolean;\r\n\r\n    /**\r\n     * 存储上次设置的类名。\r\n     */\r\n    private _class: string;\r\n\r\n    /**\r\n     * CSS 类名。\r\n     */\r\n    get class() {\r\n        return this._class || \"\";\r\n    }\r\n    set class(value) {\r\n        if (this._class) {\r\n            this._class.split(\" \").forEach((c: string) => dom.removeClass(this.elem, c));\r\n        }\r\n        this._class = value;\r\n        if (value) {\r\n            value.split(\" \").forEach((c: string) => dom.addClass(this.elem, c));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 控件样式。\r\n     */\r\n    @bind(\"\", \"style\") style: { [key: string]: string | number } | string;\r\n\r\n    /**\r\n     * 控件序号。\r\n     */\r\n    @bind(\"\", \"id\") id: string;\r\n\r\n    /**\r\n     * 选择开始事件。\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselectstart\r\n     */\r\n    @bind(\"\", \"onSelectStart\") onSelectStart: (e: Event, sender: this) => void;\r\n\r\n    /**\r\n     * 点击事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onclick\r\n     */\r\n    @bind(\"\", \"onClick\") onClick: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 中键点击事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onauxclick\r\n     */\r\n    @bind(\"\", \"onAuxClick\") onAuxClick: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 双击事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/ondblclick\r\n     */\r\n    @bind(\"\", \"onDblClick\") onDblClick: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 右键菜单事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/oncontextmenu\r\n     */\r\n    @bind(\"\", \"onContextMenu\") onContextMenu: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标按下事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmousedown\r\n     */\r\n    @bind(\"\", \"onMouseDown\") onMouseDown: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标按上事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmouseup\r\n     */\r\n    @bind(\"\", \"onMouseUp\") onMouseUp: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标移入事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmouseover\r\n     */\r\n    @bind(\"\", \"onMouseOver\") onMouseOver: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标移开事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmouseout\r\n     */\r\n    @bind(\"\", \"onMouseOut\") onMouseOut: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标进入事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmouseenter\r\n     */\r\n    @bind(\"\", \"onMouseEnter\") onMouseEnter: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标离开事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmouseleave\r\n     */\r\n    @bind(\"\", \"onMouseLeave\") onMouseLeave: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标移动事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmousemove\r\n     */\r\n    @bind(\"\", \"onMouseMove\") onMouseMove: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标滚轮事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/Events/wheel\r\n     */\r\n    @bind(\"\", \"onWheel\") onWheel: (e: WheelEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 滚动事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onscroll\r\n     */\r\n    @bind(\"\", \"onScroll\") onScroll: (e: UIEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 触摸开始事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/ontouchstart\r\n     */\r\n    @bind(\"\", \"onTouchStart\") onTouchStart: (e: TouchEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 触摸移动事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/ontouchmove\r\n     */\r\n    @bind(\"\", \"onTouchMove\") onTouchMove: (e: TouchEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 触摸结束事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/ontouchend\r\n     */\r\n    @bind(\"\", \"onTouchEnd\") onTouchEnd: (e: TouchEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 触摸撤销事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/ontouchcancel\r\n     */\r\n    @bind(\"\", \"onTouchCancel\") onTouchCancel: (e: TouchEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针进入事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointerenter\r\n     */\r\n    @bind(\"\", \"onPointerEnter\") onPointerEnter: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针离开事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointerleave\r\n     */\r\n    @bind(\"\", \"onPointerLeave\") onPointerLeave: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针移入事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointerover\r\n     */\r\n    @bind(\"\", \"onPointerOver\") onPointerOver: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针移开事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointerout\r\n     */\r\n    @bind(\"\", \"onPointerOut\") onPointerOut: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针按下事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointerdown\r\n     */\r\n    @bind(\"\", \"onPointerDown\") onPointerDown: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针移动事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointermove\r\n     */\r\n    @bind(\"\", \"onPointerMove\") onPointerMove: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针松开事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointerup\r\n     */\r\n    @bind(\"\", \"onPointerUp\") onPointerUp: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针取消事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointercancel\r\n     */\r\n    @bind(\"\", \"onPointerCancel\") onPointerCancel: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针开始捕获事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/ongotpointercapture\r\n     */\r\n    @bind(\"\", \"onGotPointerCapture\") onGotPointerCapture: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针停止捕获事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onlostpointercapture\r\n     */\r\n    @bind(\"\", \"onLostPointerCapture\") onLostPointerCapture: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 当前控件的属性列表。\r\n     */\r\n    static propTypes: { [prop: string]: PropType };\r\n\r\n}\r\n\r\n/**\r\n * 表示控件的状态。\r\n */\r\nexport const enum ControlState {\r\n\r\n    /**\r\n     * 初始状态。\r\n     */\r\n    initial = 1,\r\n\r\n    /**\r\n     * 需要重新渲染。\r\n     */\r\n    invalidated = 2,\r\n\r\n    /**\r\n     * 正在渲染。\r\n     */\r\n    rendering = 3,\r\n\r\n    /**\r\n     * 已渲染。\r\n     */\r\n    rendered = 4,\r\n\r\n}\r\n\r\nControl.prototype.readyState = ControlState.initial;\r\nControl.prototype.duration = 200;\r\n\r\nconst emptyArray: any = Object.freeze([]);\r\n\r\n/**\r\n * 表示一个虚拟节点。\r\n */\r\nexport class VNode {\r\n\r\n    /**\r\n     * 初始化新的虚拟节点。\r\n     * @param type 节点类型。如果是 null 表示文本节点；如果是字符串表示 HTML 原生节点；如果是函数表示控件。\r\n     * @param props 节点属性。如果是文本节点则表示节点内容。\r\n     * @param children 所有子节点。\r\n     */\r\n    constructor(public type: null | string | (new () => Control), public props: any | { [name: string]: any; } | null, public children: VNode[]) { }\r\n\r\n    /**\r\n     * 获取同步后生成的控件或节点。\r\n     */\r\n    result: Text | HTMLElement | Control;\r\n\r\n    /**\r\n     * 添加一个或多个子节点。\r\n     * @param child 要添加的子内容。\r\n     * @return 返回 *child*。\r\n     */\r\n    append<T extends any>(child: T | null) {\r\n        if (child != null) {\r\n            if (Array.isArray(child)) {\r\n                for (const item of child) {\r\n                    this.append(item);\r\n                }\r\n            } else {\r\n                this.children.push(child instanceof VNode ? child : new VNode(null, child, emptyArray));\r\n            }\r\n        }\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * 创建一个虚拟节点。\r\n     * @param type 节点类型。如果是 null 表示文本节点；如果是字符串表示 HTML 原生节点；如果是函数表示控件。\r\n     * @param props 节点属性。\r\n     * @param children 所有子内容。\r\n     * @return 返回创建的虚拟节点。\r\n     */\r\n    static create(type: VNode[\"type\"], props: VNode[\"props\"], ...children: any[]) {\r\n        const result = new VNode(type, props, []);\r\n        result.append(children);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 同步虚拟节点，创建虚拟节点对应的真实节点。\r\n     * @param newVNode 新虚拟节点。\r\n     * @param oldVNode 如果指定了原虚拟节点，则同步时尽量重用上次创建的真实节点。\r\n     * @return 如果根节点发生改变则返回 true，否则返回 false。\r\n     */\r\n    static sync(newVNode: VNode, oldVNode?: VNode | null) {\r\n\r\n        // 第一步：同步根节点。\r\n        // 如果节点类型和 ID 不变，则重用上一次生成的节点，否则重新生成。\r\n        const type = newVNode.type;\r\n        const changed = !oldVNode || type !== oldVNode.type || type && newVNode.props && oldVNode.props && newVNode.props.id && oldVNode.props.id && newVNode.props.id !== oldVNode.props.id;\r\n        const isControl = typeof type === \"function\";\r\n        const result = newVNode.result = changed ? type ? isControl ? new (type as (new () => Control))() : document.createElement(type as string) : document.createTextNode(newVNode.props) : oldVNode!.result;\r\n\r\n        if (type) {\r\n\r\n            // 第二步：同步属性。\r\n            let body: HTMLElement | null;\r\n            let setters: string[] | undefined;\r\n            let deletedCount: number | undefined;\r\n            let forceSetSetters: any;\r\n            if (isControl) {\r\n\r\n                // 控件的属性分为：\r\n                // - 自定义属性：直接赋值并标记 invalidated。\r\n                // - @bind 绑定的属性：更新属性值并标记 invalidated。\r\n                // - @bind(...) 绑定的属性：等待当前节点和子节点同步完成后设置。\r\n                if (!changed) {\r\n                    for (const prop in oldVNode!.props) {\r\n                        if (!newVNode.props || !(prop in newVNode.props)) {\r\n                            const propType = VNode.getPropType(type as any, prop);\r\n                            if (propType === PropType.state) {\r\n                                delete data(result)[prop];\r\n                                (result as Control).readyState = forceSetSetters = ControlState.invalidated;\r\n                            } else if (propType === PropType.setter) {\r\n                                setters = setters || [];\r\n                                deletedCount = deletedCount! + 1 || 1;\r\n                                setters.push(prop);\r\n                            } else {\r\n                                delete (result as any)[prop];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                for (const prop in newVNode.props) {\r\n                    const value = newVNode.props[prop];\r\n                    const propType = VNode.getPropType(type as any, prop);\r\n                    if (propType === PropType.state) {\r\n                        if (changed || !oldVNode!.props || value !== oldVNode!.props[prop]) {\r\n                            data(result)[prop] = value;\r\n                            (result as Control).readyState = forceSetSetters = ControlState.invalidated;\r\n                        }\r\n                    } else if (propType === PropType.setter) {\r\n                        setters = setters || [];\r\n                        setters.push(prop);\r\n                    } else {\r\n                        if (changed || !oldVNode!.props || value !== oldVNode!.props[prop]) {\r\n                            (result as any)[prop] = value;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // 控件的子节点有两种更新策略：\r\n                // 1. 如果控件提供了 body，则将控件作为普通容器节点处理，不再重新渲染控件。\r\n                // 2. 否则将子节点传递给控件，控件自行处理。\r\n                body = (result as Control).body;\r\n                if (!body && (newVNode.children.length || !changed && oldVNode!.children.length)) {\r\n                    data(result as Control).children = newVNode.children;\r\n                    (result as Control).readyState = forceSetSetters = ControlState.invalidated;\r\n                }\r\n\r\n                // 如果之前修改了属性则重新渲染当前控件。\r\n                if ((result as Control).readyState !== ControlState.rendered) {\r\n                    (result as Control).update();\r\n                }\r\n            } else {\r\n\r\n                // HTML 元素可以直接设置所有已更改的属性。\r\n                for (const prop in newVNode.props) {\r\n                    const value = newVNode.props[prop];\r\n                    if (changed || !oldVNode!.props || value !== oldVNode!.props[prop] || VNode.forceSet(type, prop, result)) {\r\n                        VNode.set(result as HTMLElement, prop, value);\r\n                    }\r\n                }\r\n                if (!changed) {\r\n                    for (const prop in oldVNode!.props) {\r\n                        if (!newVNode.props || !(prop in newVNode.props)) {\r\n                            VNode.set(result as HTMLElement, prop, null);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                body = result as HTMLElement;\r\n            }\r\n\r\n            // 第三步：同步子节点。\r\n            if (body) {\r\n                let index = 0;\r\n                for (const newChild of newVNode.children) {\r\n                    const oldChild = (!changed && oldVNode!.children[index++]) as VNode | null;\r\n                    if (VNode.sync(newChild, oldChild)) {\r\n                        forceSetSetters = true;\r\n                        index--;\r\n                        const newChildResult = newChild.result;\r\n                        const oldChildResult = oldChild ? oldChild.result : null;\r\n                        if (newChildResult instanceof Control) {\r\n                            newChildResult.renderTo(result, oldChildResult);\r\n                        } else if (oldChildResult) {\r\n                            body.insertBefore(newChildResult, oldChildResult instanceof Control ? oldChildResult.elem : oldChildResult);\r\n                        } else {\r\n                            body.appendChild(newChildResult);\r\n                        }\r\n                    }\r\n                }\r\n                if (!changed) {\r\n                    for (; index < oldVNode!.children.length; index++) {\r\n                        forceSetSetters = true;\r\n                        const oldChildResult = oldVNode!.children[index].result;\r\n                        if (oldChildResult instanceof Control) {\r\n                            oldChildResult.renderTo(null);\r\n                        } else {\r\n                            body.removeChild(oldChildResult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 第四步：当前控件和子控件全部同步完毕，重新布局。\r\n            if (isControl) {\r\n                if (setters) {\r\n                    let i = 0;\r\n                    if (deletedCount) {\r\n                        for (; i < deletedCount; i++) {\r\n                            (result as any)[setters[i]] = null;\r\n                        }\r\n                    }\r\n                    forceSetSetters = forceSetSetters || changed;\r\n                    for (; i < setters.length; i++) {\r\n                        const setter = setters[i];\r\n                        const value = newVNode.props[setter];\r\n                        if (forceSetSetters || !oldVNode!.props || value !== oldVNode!.props[setter]) {\r\n                            (result as any)[setter] = value;\r\n                        }\r\n                    }\r\n                }\r\n                (result as Control).layout();\r\n            }\r\n\r\n        } else if (!changed && oldVNode!.props !== newVNode.props) {\r\n            // 第二步：同步属性。\r\n            (result as Text).textContent = newVNode.props;\r\n        }\r\n\r\n        return changed;\r\n    }\r\n\r\n    /**\r\n     * 判断控件类型是否包含指定的属性。\r\n     * @param type 要判断的控件类型。\r\n     * @param prop 要判断的属性名。\r\n     * @return 如果属性无 get/set 操作则返回 true，否则返回 false。\r\n     */\r\n    static getPropType(type: typeof Control, prop: string): PropType {\r\n        const propTypes = VNode.getOwnPropTypes(type);\r\n        let value = propTypes[prop];\r\n        if (value == undefined) {\r\n            if (type.prototype.hasOwnProperty(prop)) {\r\n                const descriptor = Object.getOwnPropertyDescriptor(type.prototype, prop);\r\n                value = descriptor && (descriptor.get || descriptor.set) ? PropType.setter : PropType.value;\r\n            } else {\r\n                const proto = Object.getPrototypeOf(type.prototype);\r\n                value = proto && proto !== Object.prototype ? VNode.getPropType(proto.constructor, prop) : PropType.value;\r\n            }\r\n            propTypes[prop] = value;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 获取控件类型本身的属性列表。\r\n     * @param type 控件类型。\r\n     * @return 返回属性列表。\r\n     */\r\n    static getOwnPropTypes(type: typeof Control) {\r\n        return type.hasOwnProperty(\"propTypes\") ? type.propTypes : (type.propTypes = { __proto__: null! });\r\n    }\r\n\r\n    /**\r\n     * 设置节点特殊属性的读写方式。\r\n     */\r\n    static props: { [prop: string]: { get(elem: HTMLElement, args?: any): any, set(elem: HTMLElement, value: any, args?: any): void } } = {\r\n        __proto__: null!,\r\n        class: {\r\n            get(elem: HTMLElement, args?: string) {\r\n                if (args) {\r\n                    return dom.hasClass(elem, args);\r\n                }\r\n                return elem.className;\r\n            },\r\n            set(elem: HTMLElement, value: string | boolean, args?: string) {\r\n                if (args) {\r\n                    dom.toggleClass(elem, args, value as boolean);\r\n                } else {\r\n                    elem.className = value as string;\r\n                }\r\n            }\r\n        },\r\n        style: {\r\n            get(elem: HTMLElement, args?: string) {\r\n                if (args) {\r\n                    return dom.getStyle(elem, args);\r\n                }\r\n                return elem.style;\r\n            },\r\n            set(elem: HTMLElement, value: { [key: string]: string | number } | string | number, args?: string) {\r\n                if (args) {\r\n                    dom.setStyle(elem, args, value as string | number);\r\n                } else if (value == null || typeof value === \"string\") {\r\n                    elem.style.cssText = value;\r\n                } else {\r\n                    for (const key in value as { [key: string]: string | number }) {\r\n                        dom.setStyle(elem, key, (value as { [key: string]: string | number })[key]);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        hidden: {\r\n            get: dom.isHidden,\r\n            set(elem: HTMLElement, value: boolean, args?: dom.ToggleAnimation) {\r\n                dom.toggle(elem, !value, args);\r\n            }\r\n        },\r\n        innerHTML: {\r\n            get: dom.getHtml,\r\n            set(elem: HTMLElement, value: NodeLike | NodeLike[]) {\r\n                if (typeof value === \"string\") {\r\n                    dom.setHtml(elem, value);\r\n                } else {\r\n                    elem.innerHTML = \"\";\r\n                    if (Array.isArray(value)) {\r\n                        for (const item of value) {\r\n                            render(elem, item);\r\n                        }\r\n                    } else {\r\n                        render(elem, value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 判断是否需要强制更新指定的属性。\r\n     * @param type 节点类型。\r\n     * @param prop 节点属性。\r\n     * @param target 要重置的控件或节点。\r\n     * @return 如果需要强制更新则返回 true，否则返回 false。\r\n     */\r\n    static forceSet(type: VNode[\"type\"], prop: string, target: VNode[\"result\"]) {\r\n        if (prop === \"value\") {\r\n            return type === \"input\" || type === \"textarea\" || type === \"select\";\r\n        }\r\n        if (type === \"input\") {\r\n            return prop === \"checked\";\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取节点的属性。\r\n     * @param target 要获取的节点。\r\n     * @param prop 要获取的属性名。\r\n     * @param args 附加参数。部分属性需要附加参数。\r\n     * @param root 事件作用域。\r\n     * @return 返回属性值。\r\n     */\r\n    static get(target: HTMLElement, prop: string, args?: any, root?: any) {\r\n        const hook = VNode.props[prop];\r\n        if (hook) {\r\n            return hook.get(target, args);\r\n        }\r\n        if (/^on[^a-z]/.test(prop)) {\r\n            return data(root || target)[args ? prop + \" \" + args : prop];\r\n        }\r\n        return dom.getAttr(target, prop);\r\n    }\r\n\r\n    /**\r\n     * 设置节点的属性。\r\n     * @param target 要设置的节点。\r\n     * @param prop 要设置的属性名。\r\n     * @param value 要设置的属性值。\r\n     * @param args 附加参数。部分属性需要附加参数。\r\n     * @param root 事件作用域。\r\n     */\r\n    static set(target: HTMLElement, prop: string, value = null, args?: any, root?: any) {\r\n        const hook = VNode.props[prop];\r\n        if (hook) {\r\n            hook.set(target, value, args);\r\n        } else if (/^on[^a-z]/.test(prop)) {\r\n            const eventName = prop.slice(2).toLowerCase();\r\n            const datas = data(root || target);\r\n            const key = args ? prop + \" \" + args : prop;\r\n            if (datas[key]) {\r\n                dom.off(target, eventName, args || \"\", datas[key], root || (target as any as JSX.ElementExtension).__control__);\r\n            }\r\n            if ((datas[key] = value)) {\r\n                dom.on(target, eventName, args || \"\", value!, root || (target as any as JSX.ElementExtension).__control__);\r\n            }\r\n        } else {\r\n            dom.setAttr(target, prop, value);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * 获取属性的类型。\r\n */\r\nexport const enum PropType {\r\n\r\n    /**\r\n     * 该属性是一个普通值。\r\n     */\r\n    value,\r\n\r\n    /**\r\n     * 该属性是一个状态值。更改该属性后需要更新控件。\r\n     */\r\n    state,\r\n\r\n    /**\r\n     * 该属性是一个自定义访问器。\r\n     */\r\n    setter\r\n\r\n}\r\n\r\n/**\r\n * 获取指定对象关联的数据对象。\r\n * @param obj 要获取的对象。\r\n * @return 返回一个数据对象。\r\n */\r\nexport function data(obj: any) {\r\n    return obj.__data__ || (obj.__data__ = { __proto__: null });\r\n}\r\n\r\n/**\r\n * 绑定当前属性到指定控件或节点的属性或事件。\r\n * @param target 要绑定的控件。\r\n * @param propertyName 要绑定的控件属性。\r\n * @param selector 用于查找控件或节点的 CSS 选择器。空字符串表示根控件或节点。如果是 @ 开头表示当前控件内的属性。\r\n * @param prop 要绑定的属性或事件。\r\n * @param args 附加参数。\r\n * @param descriptor 已存在的属性描述器。\r\n */\r\nexport function bind(target: Control, propertyName: string, selector: string, prop: string, args?: any, descriptor?: PropertyDescriptor): void;\r\n\r\n/**\r\n * 绑定当前属性。如果属性被重新赋值则在下一帧重新渲染整个控件。\r\n * @param target 要绑定的控件。\r\n * @param propertyName 要绑定的控件属性。\r\n * @param descriptor 要绑定的属性描述器。\r\n */\r\nexport function bind(target: Control, propertyName: string, descriptor?: PropertyDescriptor): void;\r\n\r\n/**\r\n * 绑定当前属性到指定控件或节点的属性或事件。\r\n * @param selector 用于查找控件或节点的 CSS 选择器。空字符串表示根控件或节点。如果是 @ 开头表示当前控件内的属性。\r\n * @param prop 要绑定的属性或事件。\r\n * @param args 附加参数。\r\n */\r\nexport function bind(selector: string, prop: string, args?: any): PropertyDecorator;\r\n\r\n/**\r\n * 绑定当前属性到指定的控件或节点。\r\n * @param selector 用于查找控件或节点的 CSS 选择器。空字符串表示根控件或节点。如果是 @ 开头表示当前控件内的属性。\r\n */\r\nexport function bind(selector: string): PropertyDecorator;\r\n\r\n/**\r\n * 绑定当前属性。如果属性被重新赋值则在下一帧重新渲染整个控件。\r\n */\r\nexport function bind(): PropertyDecorator;\r\n\r\nexport function bind(target?: any, propertyName?: string, selector?: any, prop?: string, args?: any, descriptor?: PropertyDescriptor) {\r\n\r\n    // 支持 @bind(...) 语法。\r\n    if (!target || typeof target === \"string\") {\r\n        return (target2: Control, propertyName2: string, descriptor2?: PropertyDescriptor) => {\r\n            bind(target2, propertyName2, target, propertyName!, selector, descriptor2);\r\n        };\r\n    }\r\n\r\n    // 将 @bind 的属性添加为绑定属性。\r\n    if (selector == undefined) {\r\n        VNode.getOwnPropTypes(target.constructor)[propertyName!] = PropType.state;\r\n    }\r\n\r\n    Object.defineProperty(target, propertyName!, selector == undefined ?\r\n        descriptor ?\r\n            {\r\n                get(this: Control) {\r\n                    const datas = data(this);\r\n                    if (descriptor.get && !(propertyName! in datas)) {\r\n                        return descriptor.get.call(this);\r\n                    }\r\n                    return datas[propertyName!];\r\n                },\r\n                set(this: Control, value: any) {\r\n                    data(this)[propertyName!] = value;\r\n                    if (descriptor.set) {\r\n                        descriptor.set.call(this, value);\r\n                    }\r\n                    this.invalidate();\r\n                }\r\n            } : {\r\n                get(this: Control) {\r\n                    return data(this)[propertyName!];\r\n                },\r\n                set(this: Control, value: any) {\r\n                    data(this)[propertyName!] = value;\r\n                    this.invalidate();\r\n                }\r\n            }\r\n        : selector.charCodeAt(0) === 64 /*@*/ && (selector = selector.slice(1)) ?\r\n            prop == undefined ?\r\n                {\r\n                    get(this: any) {\r\n                        return this[selector];\r\n                    },\r\n                    set(this: any, value: any) {\r\n                        this[selector] = value;\r\n                    }\r\n                } : {\r\n                    get(this: any) {\r\n                        return getBindProp(this[selector], prop, args, this);\r\n                    },\r\n                    set(this: any, value: any) {\r\n                        setBindProp(this[selector], prop, value, args, this);\r\n                    }\r\n                }\r\n            : prop == undefined ?\r\n                {\r\n                    get(this: Control) {\r\n                        return this.find(selector);\r\n                    },\r\n                    set(this: Control, value: any) {\r\n                        Object.defineProperty(this, propertyName!, {\r\n                            value: value\r\n                        });\r\n                    }\r\n                } : {\r\n                    get(this: Control) {\r\n                        return getBindProp(this.find(selector), prop, args, this);\r\n                    },\r\n                    set(this: Control, value: any) {\r\n                        setBindProp(this.find(selector), prop, value, args, this);\r\n                    }\r\n                });\r\n}\r\n\r\nfunction getBindProp(target: any, prop: string, args: any, root: Control) {\r\n    if (target != null) {\r\n        if (target instanceof Node) {\r\n            return VNode.get(target as HTMLElement, prop, args, root);\r\n        }\r\n        let value = (target as any)[prop];\r\n        if (value && /^on[^a-z]/.test(prop)) {\r\n            value = value.__original__ || value;\r\n        }\r\n        return value;\r\n    }\r\n}\r\n\r\nfunction setBindProp(target: any, prop: string, value: any, args: any, root: Control) {\r\n    if (target != null) {\r\n        if (target instanceof Node) {\r\n            VNode.set(target as HTMLElement, prop, value, args, root);\r\n        } else {\r\n            if (value && /^on[^a-z]/.test(prop)) {\r\n                const original = value;\r\n                value = function () {\r\n                    if (arguments[arguments.length - 1] === target) {\r\n                        arguments[arguments.length - 1] = root;\r\n                    }\r\n                    return original.apply(root, arguments);\r\n                };\r\n                value.__original__ = original;\r\n            }\r\n            (target as any)[prop] = value;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 表示类节点内容。\r\n */\r\nexport type NodeLike = Control | Node | VNode | string;\r\n\r\n/**\r\n * 获取一个控件或节点。\r\n * @param value 一个虚拟节点、节点、控件、选择器或 HTML 片段。]\r\n * @param oldVNode 上一次生成的节点。\r\n * @return 返回一个控件或节点。如果找不到则返回 null。\r\n */\r\nexport function from(value: NodeLike | null, oldVNode?: VNode) {\r\n    if (value instanceof VNode) {\r\n        if (!value.result) {\r\n            VNode.sync(value, oldVNode);\r\n        }\r\n        value = value.result;\r\n    } else {\r\n        if (typeof value === \"string\") {\r\n            if (value.charCodeAt(0) === 60/*<*/) {\r\n                value = dom.parse(value);\r\n            } else {\r\n                value = dom.find(value)!;\r\n            }\r\n        } else if (typeof value !== \"object\") {\r\n            value = dom.parse(JSON.stringify(value));\r\n        }\r\n        value = value && (value as any as JSX.ElementExtension).__control__ || value;\r\n    }\r\n    return value as HTMLElement | Text | DocumentFragment | Control | null;\r\n}\r\n\r\n/**\r\n * @param parent 要渲染的容器节点。\r\n * 将指定的内容渲染到指定的容器。\r\n * @param content 要渲染的内容。可以是一个虚拟节点、节点、控件、选择器或 HTML 片段。\r\n * @param oldVNode 上一次生成的节点。\r\n * @return 返回生成的节点。\r\n */\r\nexport function render(parent: HTMLElement | Control, content: NodeLike | null, oldVNode?: VNode) {\r\n    content = from(content, oldVNode);\r\n    if (content instanceof Control) {\r\n        content.renderTo(parent);\r\n    } else if (content) {\r\n        (parent instanceof Control ? parent.elem : parent).appendChild(content!);\r\n    }\r\n    return content;\r\n}\r\n"],"mappings":"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"}