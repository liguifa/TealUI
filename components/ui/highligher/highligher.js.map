{"version":3,"file":"highligher.js","sourceRoot":"../../..","sources":["components/ui/highligher/highligher.tsx"],"sourcesContent":["import { Control, VNode, bind } from \"control\";\r\nimport \"./syntaxHighligher.scss\";\r\n\r\n/**\r\n * 表示一个语法高亮。\r\n */\r\nexport class SyntaxHighligher extends Control {\r\n\r\n    /**\r\n     * 当被子类重写时负责渲染当前控件。\r\n     * @return 返回一个虚拟节点。\r\n     */\r\n    protected render() {\r\n        return <div class=\"x-syntaxhighligher\"></div>;\r\n    }\r\n\r\n}\r\n\r\nexport default SyntaxHighligher;\r\n// #todo\r\n\r\n/**\r\n * @author xuld@vip.qq.com\r\n */\r\n\r\n/**\r\n * 提供语法高亮功能。\r\n */\r\nvar SyntaxHighligher = {\r\n\r\n    /**\r\n     * 所有可用的语法定义。\r\n     */\r\n    languages: {\r\n        'c-like': [\r\n            {\r\n                pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\r\n                matchRest: true,\r\n                type: 'comment'\r\n            },\r\n            {\r\n                pattern: /(^|[^\\\\:])\\/\\/.*/,\r\n                matchRest: true,\r\n                type: 'comment'\r\n            },\r\n            {\r\n                pattern: /(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n                type: 'string'\r\n            },\r\n            {\r\n                pattern: /(?:(class|interface|extends|implements|trait|instanceof|new)\\s+)[\\w\\$\\.\\\\]+/,\r\n                type: 'class-name'\r\n            },\r\n            {\r\n                pattern: /\\b[A-Z](\\b|[a-z])/,\r\n                type: 'class-name'\r\n            },\r\n            {\r\n                pattern: /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\r\n                type: 'keyword'\r\n            },\r\n            {\r\n                pattern: /\\b(true|false|null)\\b/,\r\n                type: 'const'\r\n            },\r\n            {\r\n                pattern: /[a-z0-9_]+\\(/i,\r\n                type: 'function',\r\n                inside: {\r\n                    pattern: /\\(/,\r\n                    type: 'punctuation'\r\n                }\r\n            },\r\n            {\r\n                pattern: /\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee]-?\\d+)?)\\b/,\r\n                type: 'number'\r\n            },\r\n            {\r\n                pattern: /[-+]{1,2}|!|<=?|>=?|={1,3}|&{1,2}|\\|?\\||\\?|\\*|\\/|~|\\^|%/,\r\n                type: 'operator'\r\n            },\r\n            {\r\n                pattern: /&(lt|gt|amp);/i\r\n            },\r\n            {\r\n                pattern: /[{}[\\];(),.:]/,\r\n                type: 'punctuation'\r\n            }\r\n        ]\r\n    },\r\n\r\n    /**\r\n     * 高亮单一的节点。\r\n     * @param {Element} elem 要高亮的节点。\r\n     * @param {String} [language] 高亮的语法。系统会自动根据源码猜测语言。\r\n     */\r\n    one: function (element, language) {\r\n\r\n    },\r\n\r\n    /**\r\n     * 根据源码猜测对应的刷子。\r\n     * @param {String} sourceCode 需要高亮的源码。\r\n     * @return {String} 返回一个语言名。\r\n     */\r\n    guessLanguage: function (sourceCode) {\r\n        // Treat it as markup if the first non whitespace character is a < and\r\n        // the last non-whitespace character is a >.\r\n        return /^\\s*</.test(sourceCode) ? 'html' : /\\w\\s*\\{/.test(sourceCode) ? 'css' : /=|\\w\\s+\\w|\\w\\(|\\)\\./.test(sourceCode) ? 'js' : null;\r\n    },\r\n\r\n    /**\r\n     * 对指定文本内容进行高亮，返回高亮后的 HTML 字符串。\r\n     * @param {Element} text 要高亮的内容。\r\n     * @param {String} [language] 高亮的语法。如果未指定系统会自动根据源码猜测语言。\r\n     */\r\n    highlight: function (text, language) {\r\n        return SyntaxHighligher._stringify(SyntaxHighligher._tokenize(text, SyntaxHighligher.languages[language] || []));\r\n    },\r\n\r\n    /**\r\n     * 将指定文本根据语法解析为标记序列。\r\n     */\r\n    _tokenize: function (text, grammars) {\r\n\r\n        // 一次处理一段文本。\r\n        function proc(text, grammars, tokens) {\r\n            for (var i = 0, grammar, pattern, match, from, content, t; grammar = grammars[i]; i++) {\r\n\r\n                // 如果语法本身是一个字符串则递归解析。\r\n                if (grammar.constructor === String) {\r\n                    return proc(text, SyntaxHighligher.languages[grammar], tokens);\r\n                }\r\n\r\n                // 尝试使用正则匹配。\r\n                pattern = grammar.pattern;\r\n                pattern.lastIndex = 0;\r\n                if (match = pattern.exec(text)) {\r\n\r\n                    // 记录匹配结果。\r\n                    from = match.index;\r\n                    content = match[0];\r\n\r\n                    // 有些正则由于匹配了无关前缀，在这里重写为匹配末尾。\r\n                    if (grammar.matchRest) {\r\n                        t = match[1].length;\r\n                        from += t;\r\n                        content = content.substr(t);\r\n                    }\r\n\r\n                    // 如果匹配的文本之前存在内容，则继续解析。\r\n                    if (from) {\r\n                        proc(text.substr(0, from), grammars, tokens);\r\n                    }\r\n\r\n                    // 处理当前标记。\r\n                    if (grammar.inside) {\r\n                        content = proc(content, grammar.inside, t = []);\r\n                    }\r\n                    tokens.push({\r\n                        type: grammar.type,\r\n                        content: content,\r\n                    });\r\n\r\n                    // 如果匹配的文本之后存在内容，则继续解析。\r\n                    t = from + content.length;\r\n                    if (t > text.length) {\r\n                        proc(text.substr(t), grammars, tokens);\r\n                    }\r\n\r\n                    // 符合任何一个正则则停止解析。\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            // 当前文本不属于任何已知标记，直接存入标记队列。\r\n            tokens.push(text);\r\n            return false;\r\n        }\r\n\r\n        var tokens = [];\r\n        proc(text, grammars, tokens);\r\n        return tokens;\r\n    },\r\n\r\n    /**\r\n     * 将指定标记序列合并为字符串。\r\n     */\r\n    _stringify: function (tokens) {\r\n\r\n        function proc(tokens, segments) {\r\n            for (var i = 0, token; token = tokens[i]; i++) {\r\n                if (token.constructor === String) {\r\n                    segments.push('<span class=\"x-code-plain\">', token, '</span>');\r\n                } else {\r\n                    segments.push('<span class=\"x-code-', token.type || 'plain', '\">');\r\n                    if (token.content.constructor === String) {\r\n                        segments.push(token.content);\r\n                    } else {\r\n                        proc(token.content, segments);\r\n                    }\r\n                    segments.push('</span>');\r\n                }\r\n            }\r\n        }\r\n\r\n        var segments = [];\r\n        proc(tokens, segments);\r\n        return segments.join('');\r\n        \r\n    }\r\n\r\n};\r\n"],"mappings":";;IAGA;;OAEG;IACH,sBAA8B,SAAQ,iBAAO;QAEzC;;;WAGG;QACO,MAAM;YACZ,MAAM,CAAC,gCAAK,KAAK,EAAC,oBAAoB,GAAO,CAAC;QAClD,CAAC;KAEJ;IAVD,4CAUC;IAED,kBAAe,gBAAgB,CAAC;IAChC,QAAQ;IAER;;OAEG;IAEH;;OAEG;IACH,IAAI,gBAAgB,GAAG;QAEnB;;WAEG;QACH,SAAS,EAAE;YACP,QAAQ,EAAE;gBACN;oBACI,OAAO,EAAE,2BAA2B;oBACpC,SAAS,EAAE,IAAI;oBACf,IAAI,EAAE,SAAS;iBAClB;gBACD;oBACI,OAAO,EAAE,kBAAkB;oBAC3B,SAAS,EAAE,IAAI;oBACf,IAAI,EAAE,SAAS;iBAClB;gBACD;oBACI,OAAO,EAAE,oCAAoC;oBAC7C,IAAI,EAAE,QAAQ;iBACjB;gBACD;oBACI,OAAO,EAAE,6EAA6E;oBACtF,IAAI,EAAE,YAAY;iBACrB;gBACD;oBACI,OAAO,EAAE,mBAAmB;oBAC5B,IAAI,EAAE,YAAY;iBACrB;gBACD;oBACI,OAAO,EAAE,0GAA0G;oBACnH,IAAI,EAAE,SAAS;iBAClB;gBACD;oBACI,OAAO,EAAE,uBAAuB;oBAChC,IAAI,EAAE,OAAO;iBAChB;gBACD;oBACI,OAAO,EAAE,eAAe;oBACxB,IAAI,EAAE,UAAU;oBAChB,MAAM,EAAE;wBACJ,OAAO,EAAE,IAAI;wBACb,IAAI,EAAE,aAAa;qBACtB;iBACJ;gBACD;oBACI,OAAO,EAAE,6CAA6C;oBACtD,IAAI,EAAE,QAAQ;iBACjB;gBACD;oBACI,OAAO,EAAE,yDAAyD;oBAClE,IAAI,EAAE,UAAU;iBACnB;gBACD;oBACI,OAAO,EAAE,gBAAgB;iBAC5B;gBACD;oBACI,OAAO,EAAE,eAAe;oBACxB,IAAI,EAAE,aAAa;iBACtB;aACJ;SACJ;QAED;;;;WAIG;QACH,GAAG,EAAE,UAAU,OAAO,EAAE,QAAQ;QAEhC,CAAC;QAED;;;;WAIG;QACH,aAAa,EAAE,UAAU,UAAU;YAC/B,sEAAsE;YACtE,4CAA4C;YAC5C,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,GAAG,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QACzI,CAAC;QAED;;;;WAIG;QACH,SAAS,EAAE,UAAU,IAAI,EAAE,QAAQ;YAC/B,MAAM,CAAC,gBAAgB,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACrH,CAAC;QAED;;WAEG;QACH,SAAS,EAAE,UAAU,IAAI,EAAE,QAAQ;YAE/B,YAAY;YACZ,cAAc,IAAI,EAAE,QAAQ,EAAE,MAAM;gBAChC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBAEpF,qBAAqB;oBACrB,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,KAAK,MAAM,CAAC,CAAC,CAAC;wBACjC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC,CAAC;oBACnE,CAAC;oBAED,YAAY;oBACZ,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;oBAC1B,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;oBACtB,EAAE,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAE7B,UAAU;wBACV,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;wBACnB,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBAEnB,4BAA4B;wBAC5B,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;4BACpB,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;4BACpB,IAAI,IAAI,CAAC,CAAC;4BACV,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBAChC,CAAC;wBAED,uBAAuB;wBACvB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;4BACP,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;wBACjD,CAAC;wBAED,UAAU;wBACV,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;4BACjB,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;wBACpD,CAAC;wBACD,MAAM,CAAC,IAAI,CAAC;4BACR,IAAI,EAAE,OAAO,CAAC,IAAI;4BAClB,OAAO,EAAE,OAAO;yBACnB,CAAC,CAAC;wBAEH,uBAAuB;wBACvB,CAAC,GAAG,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;wBAC1B,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;4BAClB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;wBAC3C,CAAC;wBAED,iBAAiB;wBACjB,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC;gBACL,CAAC;gBAED,0BAA0B;gBAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClB,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YAED,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC7B,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QAED;;WAEG;QACH,UAAU,EAAE,UAAU,MAAM;YAExB,cAAc,MAAM,EAAE,QAAQ;gBAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC5C,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,KAAK,MAAM,CAAC,CAAC,CAAC;wBAC/B,QAAQ,CAAC,IAAI,CAAC,6BAA6B,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;oBACnE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,QAAQ,CAAC,IAAI,CAAC,sBAAsB,EAAE,KAAK,CAAC,IAAI,IAAI,OAAO,EAAE,IAAI,CAAC,CAAC;wBACnE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,KAAK,MAAM,CAAC,CAAC,CAAC;4BACvC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;wBACjC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;wBAClC,CAAC;wBACD,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC7B,CAAC;gBACL,CAAC;YACL,CAAC;YAED,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YACvB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAE7B,CAAC;KAEJ,CAAC"}