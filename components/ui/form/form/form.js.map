{"version":3,"file":"form.js","sourceRoot":"../../../..","sources":["components/ui/form/form/form.tsx"],"sourcesContent":["import Control, { VNode, bind } from \"ui/control\";\r\nimport { CheckBoxBase } from \"ui/checkBox\";\r\nimport Input, { ValidityResult } from \"ui/input\";\r\nimport { scrollIntoViewIfNeeded } from \"util/scroll\";\r\nimport \"./form.scss\";\r\n\r\n/**\r\n * 表示一个表单。\r\n */\r\nexport default class Form extends Control {\r\n\r\n    elem: HTMLFormElement;\r\n\r\n    protected render() {\r\n        return <form class=\"x-form\" onSubmit={this.handleSubmit} onReset={this.handleReset}></form>;\r\n    }\r\n\r\n    /**\r\n     * 表单的提交地址。\r\n     */\r\n    @bind(\"\", \"action\") action: string;\r\n\r\n    /**\r\n     * 表单的提交谓词。\r\n     */\r\n    @bind(\"\", \"method\") method: string;\r\n\r\n    /**\r\n     * 是否异步提交表单。\r\n     */\r\n    async: boolean;\r\n\r\n    /**\r\n     * 是否禁用验证。\r\n     */\r\n    noValidate: boolean;\r\n\r\n    /**\r\n     * 提交的附加数据。\r\n     */\r\n    data: { [key: string]: any };\r\n\r\n    /**\r\n     * 最终提交的数据。\r\n     */\r\n    get value() {\r\n        return this.getValue({ hidden: true });\r\n    }\r\n    set value(value) {\r\n        this.data = { ...value };\r\n        for (const input of this.inputs) {\r\n            if (input.name in value) {\r\n                delete this.data[input.name];\r\n                if (input instanceof CheckBoxBase) {\r\n                    input.checked = value[input.name] === input.value || Array.isArray(value[input.name]) && value[input.name].indexOf(input.value) >= 0;\r\n                } else {\r\n                    input.value = value[input.name];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getValue({ hidden = false, disabled = false }) {\r\n        const result = { ...this.data };\r\n        for (const input of this.inputs) {\r\n            if (input.name) {\r\n                if (disabled == false && input.disabled) {\r\n                    continue;\r\n                }\r\n                if (hidden == false && input.hidden) {\r\n                    continue;\r\n                }\r\n                if (input instanceof CheckBoxBase) {\r\n                    if (input.checked) {\r\n                        if (Array.isArray(result[input.name])) {\r\n                            result[input.name].push(input.value);\r\n                        } else if (input.name in result) {\r\n                            result[input.name] = [result[input.name], input.value];\r\n                        } else {\r\n                            result[input.name] = input.value;\r\n                        }\r\n                    }\r\n                } else {\r\n                    result[input.name] = input.value;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 是否禁用。禁用后数据不会被提交到服务端。\r\n     */\r\n    get disabled() {\r\n        return (this.inputs[0] || 0).disabled;\r\n    }\r\n    set disabled(value: boolean) {\r\n        this.inputs.forEach(input => { input.disabled = value; });\r\n    }\r\n\r\n    /**\r\n     * 是否只读。\r\n     */\r\n    get readOnly() {\r\n        return (this.inputs[0] || 0).readOnly;\r\n    }\r\n    set readOnly(value: boolean) {\r\n        this.inputs.forEach(input => { input.readOnly = value; });\r\n    }\r\n\r\n    /**\r\n     * 当前表单内的所有输入域。\r\n     */\r\n    get inputs() {\r\n        return this.query(\"*\").filter(ctrl => ctrl instanceof Input) as Input[];\r\n    }\r\n\r\n    /**\r\n     * 判断当前表单是否需要验证。\r\n     */\r\n    get willValidate() {\r\n        return !this.noValidate && !this.disabled;\r\n    }\r\n\r\n    /**\r\n     * 处理表单提交事件。\r\n     */\r\n    protected handleSubmit = (e: Event) => {\r\n        if (this.willValidate) {\r\n            const result = this.reportValidity();\r\n            if (result instanceof Promise) {\r\n                // 立即终止当前表单提交。\r\n                // 等待验证成功后重新提交。\r\n                e.preventDefault();\r\n                result.then(result => {\r\n                    if (!result.valid) {\r\n                        return;\r\n                    }\r\n                    const noValidate = this.noValidate;\r\n                    this.noValidate = true;\r\n                    try {\r\n                        this.submit();\r\n                    } finally {\r\n                        this.noValidate = noValidate;\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n            if (!result.valid) {\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n\r\n        // 异步提交。\r\n        if (this.async) {\r\n            e.preventDefault();\r\n            // TODO: 异步提交。\r\n            throw (\"异步提交功能正在开发,请不要使用\");\r\n        } else {\r\n            this.onSubmit && this.onSubmit(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 处理表单重置事件。\r\n     */\r\n    protected handleReset = (e: Event) => {\r\n        this.inputs.forEach(input => input.reset());\r\n    }\r\n\r\n    /**\r\n     * 提交当前表单。\r\n     */\r\n    submit() {\r\n        this.elem.submit();\r\n    }\r\n\r\n    /**\r\n     * 重置当前表单。\r\n     */\r\n    reset() {\r\n        this.elem.reset();\r\n    }\r\n\r\n    /**\r\n     * 验证表单事件。\r\n     * @param result 当前验证的结果。\r\n     * @return 如果验证失败则返回 true，如果正在执行异步验证则返回一个确认对象。\r\n     */\r\n    onValidate: (result: FormValidityResult) => void | boolean | Promise<boolean>;\r\n\r\n    /**\r\n     * 提交表单事件。\r\n     */\r\n    onSubmit: (e: Event) => void;\r\n\r\n    /**\r\n     * 验证当前表单内的所有输入域。\r\n     * @return 返回验证后的出错的字段列表。如果返回空数组说明验证成功。如果正在执行异步验证则返回一个确认对象。\r\n     */\r\n    checkValidity() {\r\n        return this._checkValidity();\r\n    }\r\n\r\n    /**\r\n     * 向用户报告验证结果。\r\n     */\r\n    reportValidity() {\r\n        return this._checkValidity(true);\r\n    }\r\n\r\n    private _checkValidity(report?: boolean) {\r\n        const result: FormValidityResult = {\r\n            valid: true,\r\n            inputs: [],\r\n            results: []\r\n        };\r\n        const promises: Promise<void>[] = [];\r\n        let firstError;\r\n        for (const input of this.inputs) {\r\n            if (input.hidden) {\r\n                continue;\r\n            }\r\n            if (!input.willValidate) {\r\n                continue;\r\n            }\r\n            const inputResult = report ? input.reportValidity() : input.checkValidity();\r\n            if (inputResult instanceof Promise) {\r\n                promises.push(inputResult.then(inputResult => {\r\n                    if (!inputResult.valid) {\r\n                        result.valid = false;\r\n                    }\r\n                    result.inputs.push(input);\r\n                    result.results.push(inputResult);\r\n                }));\r\n            } else {\r\n                if (!inputResult.valid) {\r\n                    result.valid = false;\r\n                    firstError = firstError || input;\r\n                }\r\n                result.inputs.push(input);\r\n                result.results.push(inputResult);\r\n            }\r\n        }\r\n        if (this.onValidate) {\r\n            const newResult = this.onValidate(result);\r\n            if (newResult instanceof Promise) {\r\n                promises.push(newResult.then(newResult => {\r\n                    if (newResult === false) {\r\n                        result.valid = newResult;\r\n                    }\r\n                }));\r\n            } else if (newResult === false) {\r\n                result.valid = newResult;\r\n            }\r\n        }\r\n        if (promises.length) {\r\n            return Promise.all(promises).then(() => result);\r\n        }\r\n        if (report && firstError) {\r\n            scrollIntoViewIfNeeded(firstError.elem, true);\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * 表示一个表单验证结果。\r\n */\r\nexport interface FormValidityResult {\r\n\r\n    /**\r\n     * 是否验证通过。\r\n     */\r\n    valid: boolean;\r\n\r\n    /**\r\n     * 所有验证的字段。\r\n     */\r\n    inputs: Input[];\r\n\r\n    /**\r\n     * 所有验证的结果。\r\n     */\r\n    results: ValidityResult[];\r\n\r\n}\r\n"],"mappings":"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"}