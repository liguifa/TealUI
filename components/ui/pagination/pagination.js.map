{"version":3,"file":"pagination.js","sourceRoot":"../../..","sources":["components/ui/pagination/pagination.tsx"],"sourcesContent":["import * as dom from \"ux/dom\";\r\nimport Control, { VNode, bind } from \"ui/control\";\r\nimport { ListItem } from \"ui/listBox\";\r\nimport ComboBox from \"ui/comboBox\";\r\nimport TextBox from \"ui/textBox\";\r\nimport { NormalizedValidityResult } from \"ui/input\";\r\nimport \"./pagination.scss\";\r\n\r\n/**\r\n * 表示一个分页。\r\n */\r\nexport default class Pagination extends Control {\r\n\r\n    /**\r\n     * 总条数。\r\n     */\r\n    @bind total: number;\r\n\r\n    /**\r\n     * 当前页数。页数从 1 开始。\r\n     */\r\n    @bind currentPage = 1;\r\n\r\n    /**\r\n     * 每页的条数。\r\n     */\r\n    @bind pageSize = 20;\r\n\r\n    /**\r\n     * 首尾保留的页数。\r\n     */\r\n    @bind minSize = 2;\r\n\r\n    /**\r\n     * 最多显示的页数(不含上一页和下一页)。建议设置为奇数。\r\n     */\r\n    @bind maxSize = 7;\r\n\r\n    /**\r\n     * 总页数。\r\n     */\r\n    get pageCount() {\r\n        return this.total ? Math.ceil(this.total / this.pageSize) : 1;\r\n    }\r\n    set pageCount(value) {\r\n        this.total = this.pageSize * value;\r\n        this.invalidate();\r\n    }\r\n\r\n    @bind showTotal = true;\r\n\r\n    @bind showSizeChanger = true;\r\n\r\n    @bind showQuickJumper = true;\r\n\r\n    protected render() {\r\n        console.assert(this.currentPage > 0 && this.currentPage <= this.pageCount);\r\n        console.assert(this.minSize >= 0);\r\n        console.assert(this.maxSize > this.minSize * 2);\r\n        let html = \"\";\r\n        function append(tpl: string, page: number) {\r\n            html += tpl.replace(/{page}/g, page as any);\r\n        }\r\n        let start = Math.max(this.currentPage - Math.floor((this.maxSize - 1) / 2), 1);\r\n        let end = start + this.maxSize - 1;\r\n        if (end > this.pageCount) {\r\n            start = Math.max(start - end + this.pageCount, 1);\r\n            end = this.pageCount;\r\n        }\r\n        let leftEllipsis = false;\r\n        let rightEllipsis = false;\r\n        if (this.minSize > 0) {\r\n            if (start > 1) {\r\n                leftEllipsis = true;\r\n                start += this.minSize;\r\n            }\r\n            if (end < this.pageCount) {\r\n                rightEllipsis = true;\r\n                end -= this.minSize;\r\n            }\r\n        }\r\n        append(this.currentPage <= 1 ? Pagination.locale.prevDisabled : Pagination.locale.prev, this.currentPage - 1);\r\n        if (this.maxSize > 0) {\r\n            if (leftEllipsis) {\r\n                for (let p = 1; p <= this.minSize; p++) {\r\n                    append(Pagination.locale.item, p);\r\n                }\r\n                html += Pagination.locale.ellipsis;\r\n            }\r\n            for (let p = start; p <= end; p++) {\r\n                append(p === this.currentPage ? Pagination.locale.itemDisabled : Pagination.locale.item, p);\r\n            }\r\n            if (rightEllipsis) {\r\n                html += Pagination.locale.ellipsis;\r\n                for (let p = this.pageCount - this.minSize + 1; p <= this.pageCount; p++) {\r\n                    append(Pagination.locale.item, p);\r\n                }\r\n            }\r\n        }\r\n        append(this.currentPage >= this.pageCount ? Pagination.locale.nextDisabled : Pagination.locale.next, this.currentPage + 1);\r\n        return <nav class=\"x-pagination\">\r\n            <div class=\"x-pagination-header\">\r\n                {this.showSizeChanger ? [\"每页条数：\",\r\n                    <ComboBox class=\"x-pagination-sizechanger\" value={this.pageSize.toString()} onChange={this.handleSizeChange}>\r\n                        <ListItem>10</ListItem>\r\n                        <ListItem>20</ListItem>\r\n                        <ListItem>30</ListItem>\r\n                    </ComboBox>] : null}\r\n                {this.showTotal ? ` 共 ${this.total || 0} 条` : \"\"}\r\n            </div>\r\n            {this.showQuickJumper ? <form class=\"x-pagination-footer\" onSubmit={this.handleQuickJumperClick}>\r\n                跳至：<TextBox type=\"number\" class=\"x-textbox x-pagination-quickjumper\" value={this.currentPage.toString()} noValidate min={1} max={this.pageCount} /> 页\r\n                &nbsp;<input type=\"submit\" class=\"x-button x-page-goto-page\" value=\"跳转\" style=\"min-width: 60px;\" />\r\n            </form> : null}\r\n            <div class=\"x-pagination-body\" innerHTML={html} onClick={this.handleClick}></div>\r\n        </nav>;\r\n    }\r\n\r\n    /**\r\n     * 存储本地化文案配置。\r\n     */\r\n    static locale = {\r\n        item: `<a href=\"javascript://第 {page} 页\" title=\"转到：第 {page} 页\" data-value=\"{page}\">{page}</a>`,\r\n        itemDisabled: `<a class=\"x-pagination-active\">{page}</a>`,\r\n        prev: `<a href=\"javascript://第 {page} 页\" class=\"x-pagination-prev\" title=\"转到：第 {page} 页\" data-value=\"{page}\"><i class=\"x-icon\">⮜</i>上一页</a>`,\r\n        prevDisabled: ``,\r\n        next: `<a href=\"javascript://第 {page} 页\" class=\"x-pagination-next\" title=\"转到：第 {page} 页\" data-value=\"{page}\">下一页 <i class=\"x-icon\">⮞</i></a>`,\r\n        nextDisabled: ``,\r\n        ellipsis: ` ... `\r\n    };\r\n\r\n    protected handleClick = (e: MouseEvent) => {\r\n        const page = (e.target as HTMLElement).getAttribute(\"data-value\");\r\n        if (page) {\r\n            this.currentPage = +page;\r\n            this.onSelect && this.onSelect(this.currentPage, this.pageSize);\r\n        }\r\n    }\r\n\r\n    protected handleQuickJumperClick = (e: UIEvent) => {\r\n        e.preventDefault();\r\n        const input = this.find(\".x-pagination-quickjumper\") as TextBox;\r\n        const result = input.checkValidity() as NormalizedValidityResult;\r\n        if (result.valid) {\r\n            input.setCustomValidity({ status: null });\r\n            this.currentPage = +input.value;\r\n            this.onSelect && this.onSelect(this.currentPage, this.pageSize);\r\n        } else {\r\n            input.setCustomValidity(result);\r\n        }\r\n    }\r\n\r\n    protected handleSizeChange = (e: UIEvent) => {\r\n        const input = this.find(\".x-pagination-sizechanger\") as ComboBox;\r\n        // TODO: 添加字段验证。\r\n        this.pageSize = +input.value;\r\n        this.onSelect && this.onSelect(this.currentPage, this.pageSize);\r\n    }\r\n\r\n    onSelect: (page: number, pageSize: number) => void;\r\n\r\n}\r\n\r\n// /**\r\n//  * 生成包含指定分页信息的分页器 HTML。\r\n//  * @param {Element} elem 渲染的父节点。\r\n//  * @param {Number} totalCount 总的项数，这些项数将被分页。\r\n//  * @param {Number} [pageSize=20] 每页的项数。\r\n//  * @param {Number} [PaginationCount=5] 显示的分页计数器个数，超过将不再显示。尽量传递奇数。\r\n//  * @param {Number} [currentPage=1] 当前的页码，页数从 1 开始。\r\n//  * @param {Function / String} [callback] 点击分页后的回调函数或生成的链接个数。其中 {page} 表示当前的页码。{pageSize} 表示每页的项数。\r\n//  * @param {String} [href=\"?size={pageSize}&page={page}\"] 生成的链接格式。其中 {page} 表示当前的页码。{pageSize} 表示每页的项数。\r\n//  */\r\n// function initPagination(elem, totalCount, pageSize, PaginationCount, currentPage, callback) {\r\n//     var href;\r\n//     if (!callback || callback.constructor !== Function) {\r\n//         href = callback;\r\n//         callback = 0;\r\n//     }\r\n//     elem.on('click', 'a', function (e) {\r\n//         var hrefMatch = /page=(\\d+)/.exec(this.href);\r\n//         !hrefMatch || changePage(+hrefMatch[1]) !== true && e.preventDefault();\r\n//     });//\r\n//     changePage(currentPage || +(/page=(\\d+)/.exec(location.href) || [0, 1])[1]);//\r\n//     // 切换页码的逻辑。\r\n//     function changePage(page) {\r\n//         elem.innerHTML = generatePagination(totalCount, pageSize, PaginationCount, page, href);\r\n//         return callback && callback(page, pageSize * (page - 1), Math.min(pageSize * page - 1, totalCount));\r\n//     }//\r\n// }//\r\n// /**\r\n//  * 存储本地化文案配置。\r\n//  */\r\n// export const locale = {\r\n\r\n// };//\r\n// /**\r\n//  * 生成一段页码 HTML。\r\n//  * @param pageCount 总页数。\r\n//  * @param currentPage 当前页数。页码从 1 开始。\r\n//  * @param href 生成的链接地址。其中 {page} 表示当前的页码。\r\n//  * @param maxSize 最多显示的页数(不含上一页和下一页)。建议设置为奇数。\r\n//  * @param minSize 首尾保留的页数。\r\n//  */\r\n// export default function generatePagination(pageCount: number, currentPage = +(/[?&]page=(\\d+)/.exec(location.href) || 0)[1] || 1, href = /([?&]page)=(\\d+)/.test(location.search) ? location.search.replace(/([?&]page)=(\\d+)/, '$1={page}') : (location.search ? location.search + '&' : '?') + 'page={page}', maxSize = 9, minSize = 2) {\r\n\r\n// }//\r\n// /**\r\n//  * 生成包含指定分页信息的分页器 HTML。\r\n//  * @param elem 渲染的父节点。\r\n//  * @param callback 点击分页后的回调函数或生成的链接个数。其中 {page} 表示当前的页码。{pageSize} 表示每页的项数。\r\n//  * @param pageCount 总页数。\r\n//  * @param currentPage 当前页数。页码从 1 开始。\r\n//  * @param maxSize 最多显示的页数(不含上一页和下一页)。建议设置为奇数。\r\n//  * @param minSize 首尾保留的页数。\r\n//  */\r\n// export function initPagination(elem: HTMLElement, callback?: (page?: number) => boolean | void, pageCount?: number, currentPage = 1, maxSize?: number, minSize?: number) {\r\n//     elem.onclick = e => {\r\n//         const hrefMatch = /page=(\\d+)/.exec((<HTMLAnchorElement>e.target).href);\r\n//         if (hrefMatch) {\r\n//             const page = +hrefMatch[1];\r\n//             elem.innerHTML = generatePagination(pageCount, page, undefined, maxSize, minSize);\r\n//             if (callback && callback(page) !== true) {\r\n//                 e.preventDefault();\r\n//             }\r\n//         }\r\n//     };\r\n//     elem.innerHTML = generatePagination(pageCount, currentPage, undefined, maxSize, minSize);\r\n// }//\r\n"],"mappings":"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"}