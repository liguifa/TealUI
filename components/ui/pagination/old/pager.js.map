{"version":3,"file":"pager.js","sourceRoot":"../../../..","sources":["components/ui/pagination/old/pager.tsx"],"sourcesContent":["import { Control, VNode, bind } from \"control\";\r\nimport \"./pager.scss\";\r\n\r\n/**\r\n * 表示一个分页器。\r\n */\r\nexport class Pager extends Control {\r\n\r\n    /**\r\n     * 当被子类重写时负责渲染当前控件。\r\n     * @return 返回一个虚拟节点。\r\n     */\r\n    protected render() {\r\n        console.assert(this.currentPage > 0 && this.currentPage <= this.pageCount);\r\n        console.assert(this.minSize >= 0);\r\n        console.assert(this.maxSize > this.minSize * 2);\r\n        let html = \"\";\r\n        function append(tpl: string, page: number) {\r\n            html += tpl.replace(/{page}/g, page as any);\r\n        }\r\n        let start = Math.max(this.currentPage - Math.floor((this.maxSize - 1) / 2), 1);\r\n        let end = start + this.maxSize - 1;\r\n        if (end > this.pageCount) {\r\n            start = Math.max(start - end + this.pageCount, 1);\r\n            end = this.pageCount;\r\n        }\r\n        let leftEllipsis = false;\r\n        let rightEllipsis = false;\r\n        if (this.minSize > 0) {\r\n            if (start > 1) {\r\n                leftEllipsis = true;\r\n                start += this.minSize;\r\n            }\r\n            if (end < this.pageCount) {\r\n                rightEllipsis = true;\r\n                end -= this.minSize;\r\n            }\r\n        }\r\n        append(this.currentPage <= 1 ? Pager.locale.prevDisabled : Pager.locale.prev, this.currentPage - 1);\r\n        if (leftEllipsis) {\r\n            for (let p = 1; p <= this.minSize; p++) {\r\n                append(Pager.locale.item, p);\r\n            }\r\n            html += Pager.locale.ellipsis;\r\n        }\r\n        for (let p = start; p <= end; p++) {\r\n            append(p === this.currentPage ? Pager.locale.itemDisabled : Pager.locale.item, p);\r\n        }\r\n        if (rightEllipsis) {\r\n            html += Pager.locale.ellipsis;\r\n            for (let p = this.pageCount - this.minSize + 1; p <= this.pageCount; p++) {\r\n                append(Pager.locale.item, p);\r\n            }\r\n        }\r\n        append(this.currentPage >= this.pageCount ? Pager.locale.nextDisabled : Pager.locale.next, this.currentPage + 1);\r\n        return <nav class=\"x-pager\">\r\n            <div class=\"x-pager-header\">\r\n                每页\r\n                    <span class=\"x-picker\">\r\n                    <input type=\"text\" class=\"x-textbox\" value={this.pageSize.toString()} />\r\n                    <button class=\"x-button\"><i class=\"x-icon\">⮟</i></button>\r\n                </span>\r\n                行，共 200 条\r\n                </div>\r\n            <div class=\"x-pager-footer\" innerHTML={html} onClick={this.handleClick}>\r\n                <div>\r\n\r\n                </div>\r\n                <a href=\"###\"><span class=\"x-icon\">⮜</span>上一页</a>\r\n                <a class=\"x-pager-active\" href=\"###\">1</a>\r\n                <a href=\"###\">2</a>\r\n                ...\r\n                <a href=\"###\">99</a>\r\n                <a href=\"###\">100</a>\r\n                <a href=\"###\">下一页 <span class=\"x-icon\">⮞</span></a>\r\n                <form style=\"margin-left: 2em; display: inline\">\r\n                    跳至：<input type=\"number\" class=\"x-textbox x-page-current\" value=\"1\" min=\"1\" max=\"4\" /> 页\r\n                            <input type=\"submit\" class=\"x-button  x-page-goto-page\" value=\"跳转\" style=\"min-width: 60px;\" />\r\n                </form>\r\n            </div>\r\n        </nav>;\r\n    }\r\n\r\n    /**\r\n     * 存储本地化文案配置。\r\n     */\r\n    static locale = {\r\n        item: `<a href=\"javascript://第 {page} 页\" title=\"转到：第 {page} 页\" data-value=\"{page}\">{page}</a>`,\r\n        itemDisabled: `<a class=\"x-pager-active\">{page}</a>`,\r\n        prev: `<a href=\"javascript://第 {page} 页\" class=\"x-pager-prev\" title=\"转到：第 {page} 页\" data-value=\"{page}\"><i class=\"x-icon\">⮜</i>上一页</a>`,\r\n        prevDisabled: ``,\r\n        next: `<a href=\"javascript://第 {page} 页\" class=\"x-pager-next\" title=\"转到：第 {page} 页\" data-value=\"{page}\">下一页 <i class=\"x-icon\">⮞</i></a>`,\r\n        nextDisabled: ``,\r\n        ellipsis: ` ... `\r\n    };\r\n\r\n    /**\r\n     * 总条数。\r\n     */\r\n    @bind total: number;\r\n\r\n    /**\r\n     * 当前页数。页数从 1 开始。\r\n     */\r\n    @bind currentPage = 1;\r\n\r\n    /**\r\n     * 每页的条数。\r\n     */\r\n    @bind pageSize = 20;\r\n\r\n    /**\r\n     * 首尾保留的页数。\r\n     */\r\n    @bind minSize = 2;\r\n\r\n    /**\r\n     * 最多显示的页数(不含上一页和下一页)。建议设置为奇数。\r\n     */\r\n    @bind maxSize = 9;\r\n\r\n    /**\r\n     * 总页数。\r\n     */\r\n    get pageCount() {\r\n        return Math.ceil(this.total / this.pageSize);\r\n    }\r\n    @bind set pageCount(value) {\r\n        this.total = this.pageSize * value;\r\n    }\r\n\r\n    @bind showTotal: boolean;\r\n\r\n    @bind showSizeChanger: boolean;\r\n\r\n    @bind showQuickJumper: boolean;\r\n\r\n    protected handleClick(e: MouseEvent) {\r\n        const page = (e.target as HTMLElement).getAttribute(\"data-value\");\r\n        if (page) {\r\n            this.onSelect && this.onSelect(+page);\r\n        }\r\n    }\r\n\r\n    onSelect: (page: number) => void;\r\n\r\n}\r\n\r\nexport default Pager;\r\n\r\n// /**\r\n//  * 生成包含指定分页信息的分页器 HTML。\r\n//  * @param {Element} elem 渲染的父节点。\r\n//  * @param {Number} totalCount 总的项数，这些项数将被分页。\r\n//  * @param {Number} [pageSize=20] 每页的项数。\r\n//  * @param {Number} [pagerCount=5] 显示的分页计数器个数，超过将不再显示。尽量传递奇数。\r\n//  * @param {Number} [currentPage=1] 当前的页码，页数从 1 开始。\r\n//  * @param {Function / String} [callback] 点击分页后的回调函数或生成的链接个数。其中 {page} 表示当前的页码。{pageSize} 表示每页的项数。\r\n//  * @param {String} [href=\"?size={pageSize}&page={page}\"] 生成的链接格式。其中 {page} 表示当前的页码。{pageSize} 表示每页的项数。\r\n//  */\r\n// function initPager(elem, totalCount, pageSize, pagerCount, currentPage, callback) {\r\n//     var href;\r\n//     if (!callback || callback.constructor !== Function) {\r\n//         href = callback;\r\n//         callback = 0;\r\n//     }\r\n//     elem.on('click', 'a', function (e) {\r\n//         var hrefMatch = /page=(\\d+)/.exec(this.href);\r\n//         !hrefMatch || changePage(+hrefMatch[1]) !== true && e.preventDefault();\r\n//     });//\r\n//     changePage(currentPage || +(/page=(\\d+)/.exec(location.href) || [0, 1])[1]);//\r\n//     // 切换页码的逻辑。\r\n//     function changePage(page) {\r\n//         elem.innerHTML = generatePager(totalCount, pageSize, pagerCount, page, href);\r\n//         return callback && callback(page, pageSize * (page - 1), Math.min(pageSize * page - 1, totalCount));\r\n//     }//\r\n// }//\r\n// /**\r\n//  * 存储本地化文案配置。\r\n//  */\r\n// export const locale = {\r\n\r\n// };//\r\n// /**\r\n//  * 生成一段页码 HTML。\r\n//  * @param pageCount 总页数。\r\n//  * @param currentPage 当前页数。页码从 1 开始。\r\n//  * @param href 生成的链接地址。其中 {page} 表示当前的页码。\r\n//  * @param maxSize 最多显示的页数(不含上一页和下一页)。建议设置为奇数。\r\n//  * @param minSize 首尾保留的页数。\r\n//  */\r\n// export default function generatePager(pageCount: number, currentPage = +(/[?&]page=(\\d+)/.exec(location.href) || 0)[1] || 1, href = /([?&]page)=(\\d+)/.test(location.search) ? location.search.replace(/([?&]page)=(\\d+)/, '$1={page}') : (location.search ? location.search + '&' : '?') + 'page={page}', maxSize = 9, minSize = 2) {\r\n\r\n// }//\r\n// /**\r\n//  * 生成包含指定分页信息的分页器 HTML。\r\n//  * @param elem 渲染的父节点。\r\n//  * @param callback 点击分页后的回调函数或生成的链接个数。其中 {page} 表示当前的页码。{pageSize} 表示每页的项数。\r\n//  * @param pageCount 总页数。\r\n//  * @param currentPage 当前页数。页码从 1 开始。\r\n//  * @param maxSize 最多显示的页数(不含上一页和下一页)。建议设置为奇数。\r\n//  * @param minSize 首尾保留的页数。\r\n//  */\r\n// export function initPager(elem: HTMLElement, callback?: (page?: number) => boolean | void, pageCount?: number, currentPage = 1, maxSize?: number, minSize?: number) {\r\n//     elem.onclick = e => {\r\n//         const hrefMatch = /page=(\\d+)/.exec((<HTMLAnchorElement>e.target).href);\r\n//         if (hrefMatch) {\r\n//             const page = +hrefMatch[1];\r\n//             elem.innerHTML = generatePager(pageCount, page, undefined, maxSize, minSize);\r\n//             if (callback && callback(page) !== true) {\r\n//                 e.preventDefault();\r\n//             }\r\n//         }\r\n//     };\r\n//     elem.innerHTML = generatePager(pageCount, currentPage, undefined, maxSize, minSize);\r\n// }//\r\n"],"mappings":";;;;;;;;;;;;;;;;;;IAGA;;OAEG;IACH;QAA2B,yBAAO;QAAlC;YAAA,qEA4IC;YA7CG;;eAEG;YACG,iBAAW,GAAG,CAAC,CAAC;YAEtB;;eAEG;YACG,cAAQ,GAAG,EAAE,CAAC;YAEpB;;eAEG;YACG,aAAO,GAAG,CAAC,CAAC;YAElB;;eAEG;YACG,aAAO,GAAG,CAAC,CAAC;;QA2BtB,CAAC;QA1IG;;;WAGG;QACO,sBAAM,GAAhB;YACI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;YAC3E,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC;YAClC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YAChD,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,gBAAgB,GAAW,EAAE,IAAY;gBACrC,IAAI,IAAI,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,IAAW,CAAC,CAAC;YAChD,CAAC;YACD,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/E,IAAI,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACnC,EAAE,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBAClD,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;YACzB,CAAC;YACD,IAAI,YAAY,GAAG,KAAK,CAAC;YACzB,IAAI,aAAa,GAAG,KAAK,CAAC;YAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnB,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;oBACZ,YAAY,GAAG,IAAI,CAAC;oBACpB,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC;gBAC1B,CAAC;gBACD,EAAE,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,aAAa,GAAG,IAAI,CAAC;oBACrB,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC;gBACxB,CAAC;YACL,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;YACpG,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACf,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC;oBACrC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACjC,CAAC;gBACD,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC;YAClC,CAAC;YACD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;gBAChC,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACtF,CAAC;YACD,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAChB,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC;gBAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;oBACvE,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACjC,CAAC;YACL,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;YACjH,MAAM,CAAC,gCAAK,KAAK,EAAC,SAAS;gBACvB,gCAAK,KAAK,EAAC,gBAAgB;;oBAEnB,iCAAM,KAAK,EAAC,UAAU;wBACtB,kCAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAI;wBACxE,mCAAQ,KAAK,EAAC,UAAU;4BAAC,8BAAG,KAAK,EAAC,QAAQ,aAAM,CAAS,CACtD;oDAED;gBACV,gCAAK,KAAK,EAAC,gBAAgB,EAAC,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW;oBAClE,mCAEM;oBACN,8BAAG,IAAI,EAAC,KAAK;wBAAC,iCAAM,KAAK,EAAC,QAAQ,aAAS;6CAAO;oBAClD,8BAAG,KAAK,EAAC,gBAAgB,EAAC,IAAI,EAAC,KAAK,QAAM;oBAC1C,8BAAG,IAAI,EAAC,KAAK,QAAM;;oBAEnB,8BAAG,IAAI,EAAC,KAAK,SAAO;oBACpB,8BAAG,IAAI,EAAC,KAAK,UAAQ;oBACrB,8BAAG,IAAI,EAAC,KAAK;;wBAAK,iCAAM,KAAK,EAAC,QAAQ,aAAS,CAAI;oBACnD,iCAAM,KAAK,EAAC,mCAAmC;;wBACxC,kCAAO,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAC,0BAA0B,EAAC,KAAK,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,GAAG;;wBAC7E,kCAAO,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAC,4BAA4B,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,kBAAkB,GAAG,CACnG,CACL,CACJ,CAAC;QACX,CAAC;QA2CD,sBAAI,4BAAS;YAHb;;eAEG;iBACH;gBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjD,CAAC;iBACK,UAAc,KAAK;gBACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACvC,CAAC;;;WAHA;QAWS,2BAAW,GAArB,UAAsB,CAAa;YAC/B,IAAM,IAAI,GAAI,CAAC,CAAC,MAAsB,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAClE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACP,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC;QACL,CAAC;QA3DD;;WAEG;QACI,YAAM,GAAG;YACZ,IAAI,EAAE,iIAAwF;YAC9F,YAAY,EAAE,wCAAsC;YACpD,IAAI,EAAE,kMAAiI;YACvI,YAAY,EAAE,EAAE;YAChB,IAAI,EAAE,mMAAkI;YACxI,YAAY,EAAE,EAAE;YAChB,QAAQ,EAAE,OAAO;SACpB,CAAC;QAKI;YAAL,cAAI;4CAAe;QAKd;YAAL,cAAI;kDAAiB;QAKhB;YAAL,cAAI;+CAAe;QAKd;YAAL,cAAI;8CAAa;QAKZ;YAAL,cAAI;8CAAa;QAQZ;YAAL,cAAI;8CAEJ;QAEK;YAAL,cAAI;gDAAoB;QAEnB;YAAL,cAAI;sDAA0B;QAEzB;YAAL,cAAI;sDAA0B;QAWnC,YAAC;KAAA,AA5ID,CAA2B,iBAAO,GA4IjC;IA5IY,sBAAK;IA8IlB,kBAAe,KAAK,CAAC;;AAErB,MAAM;AACN,0BAA0B;AAC1B,mCAAmC;AACnC,+CAA+C;AAC/C,0CAA0C;AAC1C,+DAA+D;AAC/D,qDAAqD;AACrD,oGAAoG;AACpG,yGAAyG;AACzG,MAAM;AACN,sFAAsF;AACtF,gBAAgB;AAChB,4DAA4D;AAC5D,2BAA2B;AAC3B,wBAAwB;AACxB,QAAQ;AACR,2CAA2C;AAC3C,wDAAwD;AACxD,kFAAkF;AAClF,YAAY;AACZ,qFAAqF;AACrF,kBAAkB;AAClB,kCAAkC;AAClC,wFAAwF;AACxF,+GAA+G;AAC/G,UAAU;AACV,MAAM;AACN,MAAM;AACN,gBAAgB;AAChB,MAAM;AACN,0BAA0B;AAE1B,OAAO;AACP,MAAM;AACN,kBAAkB;AAClB,2BAA2B;AAC3B,uCAAuC;AACvC,4CAA4C;AAC5C,gDAAgD;AAChD,6BAA6B;AAC7B,MAAM;AACN,yUAAyU;AAEzU,MAAM;AACN,MAAM;AACN,0BAA0B;AAC1B,yBAAyB;AACzB,8EAA8E;AAC9E,2BAA2B;AAC3B,uCAAuC;AACvC,gDAAgD;AAChD,6BAA6B;AAC7B,MAAM;AACN,wKAAwK;AACxK,4BAA4B;AAC5B,mFAAmF;AACnF,2BAA2B;AAC3B,0CAA0C;AAC1C,4FAA4F;AAC5F,yDAAyD;AACzD,sCAAsC;AACtC,gBAAgB;AAChB,YAAY;AACZ,SAAS;AACT,2FAA2F;AAC3F,MAAM"}