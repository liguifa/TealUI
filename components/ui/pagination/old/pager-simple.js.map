{"version":3,"file":"pager-simple.js","sourceRoot":"../../../..","sources":["components/ui/pagination/old/pager-simple.ts"],"sourcesContent":["/**\r\n * @fileOverview 页码\r\n * @author xuld <xuld@vip.qq.com>\r\n */\r\nimport \"./pager.less\"\r\n\r\n/**\r\n * 存储本地化文案配置。\r\n */\r\nexport const locale = {\r\n    item: '<a href=\"{href}\" title=\"转到：第 {page} 页\">{page}</a>',\r\n    itemDisabled: '<a class=\"x-pager-actived\">{page}</a>',\r\n    // prev: '<a href=\"{href}\"{class} title=\"上一页：第{page}页\"><span class=\"x-icon\">«</span></a>',\r\n    // next: '<a href=\"{href}\"{class} title=\"下一页：第{page}页\"><span class=\"x-icon\">»</span></a>'\r\n    prev: '<a href=\"{href}\" class=\"x-pager-prev\" title=\"上一页：第 {page} 页\"><span class=\"x-icon\">☪</span>上一页</a>',\r\n    next: '<a href=\"{href}\" class=\"x-pager-next\" title=\"下一页：第 {page} 页\">下一页 <span class=\"x-icon\">↠</span></a>',\r\n    prevDisabled: '',\r\n    nextDisabled: '',\r\n    ellipsis: ' ... '\r\n};\r\n\r\n/**\r\n * 生成一段页码 HTML。\r\n * @param pageCount 总页数。\r\n * @param currentPage 当前页数。页码从 1 开始。\r\n * @param href 生成的链接地址。其中 {page} 表示当前的页码。\r\n * @param maxWidth 最多显示的页数(不含上一页和下一页)。建议设置为奇数。\r\n * @param minWidth 首尾保留的页数。\r\n */\r\nexport default function generatePager(pageCount: number, currentPage = +(/[?&]page=(\\d+)/.exec(location.href) || 0)[1] || 1, href = /([?&]page)=(\\d+)/.test(location.search) ? location.search.replace(/([?&]page)=(\\d+)/, '$1={page}') : (location.search ? location.search + '&' : '?') + 'page={page}', maxWidth = 9, minWidth = 2) {\r\n    console.assert(currentPage > 0 && currentPage <= pageCount);\r\n    console.assert(minWidth >= 0);\r\n    console.assert(maxWidth > minWidth * 2);\r\n\r\n    let result = \"\";\r\n    function link(tpl: string, page: number) {\r\n        result += tpl.replace('{href}', href).replace(/{page}/g, <any>page);\r\n    }\r\n\r\n    let start = Math.max(currentPage - Math.floor((maxWidth - 1) / 2), 1);\r\n    let end = start + maxWidth - 1;\r\n    if (end > pageCount) {\r\n        start = Math.max(start - end + pageCount, 1);\r\n        end = pageCount;\r\n    }\r\n\r\n    let leftEllipsis = false;\r\n    let rightEllipsis = false;\r\n    if (minWidth > 0) {\r\n        if (start > 1) {\r\n            leftEllipsis = true;\r\n            start += minWidth;\r\n        }\r\n        if (end < pageCount) {\r\n            rightEllipsis = true;\r\n            end -= minWidth;\r\n        }\r\n    }\r\n\r\n    link(currentPage <= 1 ? locale.prevDisabled : locale.prev, currentPage - 1);\r\n\r\n    if (leftEllipsis) {\r\n        for (let p = 1; p <= minWidth; p++) {\r\n            link(locale.item, p);\r\n        }\r\n        result += \" &nbsp;...\";\r\n    }\r\n\r\n    for (let p = start; p <= end; p++) {\r\n        link(p === currentPage ? locale.itemDisabled : locale.item, p);\r\n    }\r\n\r\n    if (rightEllipsis) {\r\n        result += \" &nbsp;...\";\r\n        for (let p = pageCount - minWidth + 1; p <= pageCount; p++) {\r\n            link(locale.item, p);\r\n        }\r\n    }\r\n\r\n    link(currentPage >= pageCount ? locale.nextDisabled : locale.next, currentPage + 1);\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * 生成包含指定分页信息的分页器 HTML。\r\n * @param elem 渲染的父节点。\r\n * @param callback 点击分页后的回调函数或生成的链接个数。其中 {page} 表示当前的页码。{pageSize} 表示每页的项数。\r\n * @param pageCount 总页数。\r\n * @param currentPage 当前页数。页码从 1 开始。\r\n * @param maxWidth 最多显示的页数(不含上一页和下一页)。建议设置为奇数。\r\n * @param minWidth 首尾保留的页数。\r\n */\r\nexport function initPager(elem: HTMLElement, callback?: (page?: number) => boolean | void, pageCount?: number, currentPage = 1, maxWidth?: number, minWidth?: number) {\r\n    elem.onclick = e => {\r\n        const hrefMatch = /page=(\\d+)/.exec((<HTMLAnchorElement>e.target).href);\r\n        if (hrefMatch) {\r\n            const page = +hrefMatch[1];\r\n            elem.innerHTML = generatePager(pageCount, page, undefined, maxWidth, minWidth);\r\n            if (callback && callback(page) !== true) {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n    elem.innerHTML = generatePager(pageCount, currentPage, undefined, maxWidth, minWidth);\r\n}    "],"mappings":"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"}